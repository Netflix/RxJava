//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeFilterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsOnErrorNotImplementedException.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOnSubscribeFilterTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$5();

@interface RxInternalOperatorsOnSubscribeFilterTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$1_init(RxInternalOperatorsOnSubscribeFilterTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$1 *new_RxInternalOperatorsOnSubscribeFilterTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$1 *create_RxInternalOperatorsOnSubscribeFilterTest_$1_init();

@interface RxInternalOperatorsOnSubscribeFilterTest_$2 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$2_init(RxInternalOperatorsOnSubscribeFilterTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$2 *new_RxInternalOperatorsOnSubscribeFilterTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$2 *create_RxInternalOperatorsOnSubscribeFilterTest_$2_init();

@interface RxInternalOperatorsOnSubscribeFilterTest_$3 : RxObserversTestSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)t;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                                withLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFilterTest_$3, val$latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(RxInternalOperatorsOnSubscribeFilterTest_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$3 *new_RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$3 *create_RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0);

@interface RxInternalOperatorsOnSubscribeFilterTest_$4 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$4_init(RxInternalOperatorsOnSubscribeFilterTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$4 *new_RxInternalOperatorsOnSubscribeFilterTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$4 *create_RxInternalOperatorsOnSubscribeFilterTest_$4_init();

@interface RxInternalOperatorsOnSubscribeFilterTest_$5 : RxObserversTestSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                                withLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFilterTest_$5, val$latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(RxInternalOperatorsOnSubscribeFilterTest_$5 *self, JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$5 *new_RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$5 *create_RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0);

@interface RxInternalOperatorsOnSubscribeFilterTest_$6 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$6_init(RxInternalOperatorsOnSubscribeFilterTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$6 *new_RxInternalOperatorsOnSubscribeFilterTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$6 *create_RxInternalOperatorsOnSubscribeFilterTest_$6_init();

@interface RxInternalOperatorsOnSubscribeFilterTest_$7 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$7_init(RxInternalOperatorsOnSubscribeFilterTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$7 *new_RxInternalOperatorsOnSubscribeFilterTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$7 *create_RxInternalOperatorsOnSubscribeFilterTest_$7_init();

@interface RxInternalOperatorsOnSubscribeFilterTest_$8 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFilterTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFilterTest_$8_init(RxInternalOperatorsOnSubscribeFilterTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$8 *new_RxInternalOperatorsOnSubscribeFilterTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFilterTest_$8 *create_RxInternalOperatorsOnSubscribeFilterTest_$8_init();

@implementation RxInternalOperatorsOnSubscribeFilterTest

- (void)testFilter {
  RxObservable *w = RxObservable_justWithId_withId_withId_(@"one", @"two", @"three");
  RxObservable *observable = [((RxObservable *) nil_chk(w)) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFilterTest_$1_init()];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testWithBackpressure {
  RxObservable *w = RxObservable_justWithId_withId_withId_(@"one", @"two", @"three");
  RxObservable *o = [((RxObservable *) nil_chk(w)) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFilterTest_$2_init()];
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(latch, 0LL);
  [ts requestMoreWithLong:2];
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [latch await];
}

- (void)testWithBackpressure2 {
  RxObservable *w = RxObservable_rangeWithInt_withInt_(1, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2);
  RxObservable *o = [((RxObservable *) nil_chk(w)) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFilterTest_$4_init()];
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(latch, 0LL);
  [ts requestMoreWithLong:1];
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [latch await];
}

- (void)testFatalError {
  @try {
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFilterTest_$6_init()])) first])) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOnSubscribeFilterTest_$7_init()];
    OrgJunitAssert_failWithNSString_(@"No exception was thrown");
  }
  @catch (RxExceptionsOnErrorNotImplementedException *ex) {
    if (!([[((RxExceptionsOnErrorNotImplementedException *) nil_chk(ex)) getCause] isKindOfClass:[RxExceptionsTestException class]])) {
      OrgJunitAssert_failWithNSString_(JreStrcat("$@", @"Failed to report the original exception, instead: ", [ex getCause]));
    }
  }
}

- (void)functionCrashUnsubscribes {
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFilterTest_$8_init()])) unsafeSubscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"Not subscribed?", [ps hasObservers]);
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"Subscribed?", [ps hasObservers]);
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
}

- (void)doesntRequestOnItsOwn {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10))) filterWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysTrue()])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts requestMoreWithLong:10];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:10 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testFilter);
  methods[1].selector = @selector(testWithBackpressure);
  methods[2].selector = @selector(testWithBackpressure2);
  methods[3].selector = @selector(testFatalError);
  methods[4].selector = @selector(functionCrashUnsubscribes);
  methods[5].selector = @selector(doesntRequestOnItsOwn);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$0, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeFilterTest__Annotations$5 };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest = { "OnSubscribeFilterTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_init(RxInternalOperatorsOnSubscribeFilterTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest *new_RxInternalOperatorsOnSubscribeFilterTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest, init)
}

RxInternalOperatorsOnSubscribeFilterTest *create_RxInternalOperatorsOnSubscribeFilterTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 500) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 500000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFilterTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFilterTest)

@implementation RxInternalOperatorsOnSubscribeFilterTest_$1

- (JavaLangBoolean *)callWithId:(NSString *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_([((NSString *) nil_chk(t1)) isEqual:@"two"]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeFilterTest;", "testFilter", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$1_init(RxInternalOperatorsOnSubscribeFilterTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$1 *new_RxInternalOperatorsOnSubscribeFilterTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$1, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$1 *create_RxInternalOperatorsOnSubscribeFilterTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$2

- (JavaLangBoolean *)callWithId:(NSString *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_([((NSString *) nil_chk(t1)) isEqual:@"three"]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeFilterTest;", "testWithBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$2_init(RxInternalOperatorsOnSubscribeFilterTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$2 *new_RxInternalOperatorsOnSubscribeFilterTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$2, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$2 *create_RxInternalOperatorsOnSubscribeFilterTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$3

- (void)onCompleted {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"onCompleted"];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(NSString *)t {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"Received: ", t)];
  [self requestWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                                withLong:(jlong)arg$0 {
  RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(self, capture$0, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "(Ljava/lang/String;)V", "LJavaUtilConcurrentCountDownLatch;J", "LRxInternalOperatorsOnSubscribeFilterTest;", "testWithBackpressure", "Lrx/observers/TestSubscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(RxInternalOperatorsOnSubscribeFilterTest_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  JreStrongAssign(&self->val$latch_, capture$0);
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOnSubscribeFilterTest_$3 *new_RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$3, initWithJavaUtilConcurrentCountDownLatch_withLong_, capture$0, arg$0)
}

RxInternalOperatorsOnSubscribeFilterTest_$3 *create_RxInternalOperatorsOnSubscribeFilterTest_$3_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$3, initWithJavaUtilConcurrentCountDownLatch_withLong_, capture$0, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$4

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(t1)) intValue] > 100);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFilterTest;", "testWithBackpressure2", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$4_init(RxInternalOperatorsOnSubscribeFilterTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$4 *new_RxInternalOperatorsOnSubscribeFilterTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$4, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$4 *create_RxInternalOperatorsOnSubscribeFilterTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$4, init)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$5

- (void)onCompleted {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"onCompleted"];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Received: ", t)];
  [self requestWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                                withLong:(jlong)arg$0 {
  RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(self, capture$0, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LJavaUtilConcurrentCountDownLatch;J", "LRxInternalOperatorsOnSubscribeFilterTest;", "testWithBackpressure2", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(RxInternalOperatorsOnSubscribeFilterTest_$5 *self, JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  JreStrongAssign(&self->val$latch_, capture$0);
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOnSubscribeFilterTest_$5 *new_RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$5, initWithJavaUtilConcurrentCountDownLatch_withLong_, capture$0, arg$0)
}

RxInternalOperatorsOnSubscribeFilterTest_$5 *create_RxInternalOperatorsOnSubscribeFilterTest_$5_initWithJavaUtilConcurrentCountDownLatch_withLong_(JavaUtilConcurrentCountDownLatch *capture$0, jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$5, initWithJavaUtilConcurrentCountDownLatch_withLong_, capture$0, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$6

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t {
  return JavaLangBoolean_valueOfWithBoolean_(true);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFilterTest;", "testFatalError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$6_init(RxInternalOperatorsOnSubscribeFilterTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$6 *new_RxInternalOperatorsOnSubscribeFilterTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$6, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$6 *create_RxInternalOperatorsOnSubscribeFilterTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$6, init)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$7

- (void)callWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFilterTest;", "testFatalError", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$7_init(RxInternalOperatorsOnSubscribeFilterTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$7 *new_RxInternalOperatorsOnSubscribeFilterTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$7, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$7 *create_RxInternalOperatorsOnSubscribeFilterTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeFilterTest_$8

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)v {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFilterTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFilterTest;", "functionCrashUnsubscribes", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFilterTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFilterTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeFilterTest_$8_init(RxInternalOperatorsOnSubscribeFilterTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFilterTest_$8 *new_RxInternalOperatorsOnSubscribeFilterTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$8, init)
}

RxInternalOperatorsOnSubscribeFilterTest_$8 *create_RxInternalOperatorsOnSubscribeFilterTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFilterTest_$8, init)
}
