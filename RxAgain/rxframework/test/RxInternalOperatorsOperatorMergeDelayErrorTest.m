//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorMergeDelayErrorTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsCompositeException.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxInternalOperatorsOperatorMergeDelayErrorTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Method.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$22();

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangThread *t_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable, t_, JavaLangThread *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 : NSObject < JavaLangRunnable > {
 @public
  RxSubscriber *val$observer_;
}

- (void)run;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  IOSObjectArray *valuesToReturn_;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)values;

- (void)callWithId:(RxSubscriber *)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable, valuesToReturn_, IOSObjectArray *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *self, IOSObjectArray *values);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(IOSObjectArray *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(IOSObjectArray *values);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  IOSObjectArray *valuesToReturn_;
  JavaLangThread *t_;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)values;

- (void)callWithId:(RxSubscriber *)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable, valuesToReturn_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable, t_, JavaLangThread *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *self, IOSObjectArray *values);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(IOSObjectArray *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(IOSObjectArray *values);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 : NSObject < JavaLangRunnable > {
 @public
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *this$0_;
  RxSubscriber *val$observer_;
}

- (void)run;

- (instancetype)initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *)outer$
                                                                               withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1, this$0_, RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *self, RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver : NSObject < RxObserver > {
 @public
  volatile_id e_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)args;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver)

J2OBJC_VOLATILE_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver, e_, NSException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *new_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *create_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangThread *t_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable, t_, JavaLangThread *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable)

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 : NSObject < JavaLangRunnable > {
 @public
  RxSubscriber *val$observer_;
}

- (void)run;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxObservable *val$o1_;
  RxObservable *val$o2_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0
                    withRxObservable:(RxObservable *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$1, val$o1_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$1, val$o2_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *self, RxObservable *capture$0, RxObservable *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxObservable *capture$0, RxObservable *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxObservable *capture$0, RxObservable *capture$1);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$2 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$2, val$latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$3 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init(RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init();

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$4 : RxSubscriber {
 @public
  jint calls_;
  id<RxObserver> val$o_;
}

- (void)onNextWithId:(JavaLangInteger *)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$4, val$o_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$5 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *val$o1_;
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *val$o2_;
}

- (void)callWithId:(RxSubscriber *)op;

- (instancetype)initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)capture$0
                    withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$5, val$o1_, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$5, val$o2_, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *self, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1);

@interface RxInternalOperatorsOperatorMergeDelayErrorTest_$6 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$requests_;
}

- (void)callWithId:(JavaLangLong *)t1;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeDelayErrorTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeDelayErrorTest_$6, val$requests_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testErrorDelayed1 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", nil, @"six" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(o1, o2);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"five"];
}

- (void)testErrorDelayed2 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", nil, @"six" } count:3 type:NSString_class_()]));
  RxObservable *o3 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"seven", @"eight", nil } count:3 type:NSString_class_()]));
  RxObservable *o4 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"nine" } count:1 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"five"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"seven"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"eight"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"nine"];
}

- (void)testErrorDelayed3 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five", @"six" } count:3 type:NSString_class_()]));
  RxObservable *o3 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"seven", @"eight", nil } count:3 type:NSString_class_()]));
  RxObservable *o4 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"nine" } count:1 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"five"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"six"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"seven"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"eight"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"nine"];
}

- (void)testErrorDelayed4 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five", @"six" } count:3 type:NSString_class_()]));
  RxObservable *o3 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"seven", @"eight" } count:2 type:NSString_class_()]));
  RxObservable *o4 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"nine", nil } count:2 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"five"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"six"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"seven"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"eight"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"nine"];
}

- (void)testErrorDelayed4WithThreading {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *o1 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]);
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *o2 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five", @"six" } count:3 type:NSString_class_()]);
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *o3 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"seven", @"eight" } count:2 type:NSString_class_()]);
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *o4 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"nine", nil } count:2 type:NSString_class_()]);
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable_createWithRxObservable_OnSubscribe_(o1), RxObservable_createWithRxObservable_OnSubscribe_(o2), RxObservable_createWithRxObservable_OnSubscribe_(o3), RxObservable_createWithRxObservable_OnSubscribe_(o4));
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  @try {
    [((JavaLangThread *) nil_chk(o1->t_)) join];
    [((JavaLangThread *) nil_chk(o2->t_)) join];
    [((JavaLangThread *) nil_chk(o3->t_)) join];
    [((JavaLangThread *) nil_chk(o4->t_)) join];
  }
  @catch (JavaLangInterruptedException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"five"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"six"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"seven"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"eight"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"nine"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testCompositeErrorDelayed1 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", nil, @"six" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", nil } count:3 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(o1, o2);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsCompositeException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"five"];
}

- (void)testCompositeErrorDelayed2 {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", nil, @"six" } count:3 type:NSString_class_()]));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", nil } count:3 type:NSString_class_()]));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(o1, o2);
  RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *w = create_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:w];
  OrgJunitAssert_assertNotNullWithId_(JreLoadVolatileId(&w->e_));
  if ([JreLoadVolatileId(&w->e_) isKindOfClass:[RxExceptionsCompositeException class]]) {
    OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((id<JavaUtilList>) nil_chk([((RxExceptionsCompositeException *) nil_chk(((RxExceptionsCompositeException *) cast_chk(JreLoadVolatileId(&w->e_), [RxExceptionsCompositeException class])))) getExceptions])) size]);
    [((NSException *) nil_chk(JreLoadVolatileId(&w->e_))) printStackTrace];
  }
  else {
    OrgJunitAssert_failWithNSString_(@"Expecting CompositeException");
  }
}

- (void)testMergeObservableOfObservables {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *observableOfObservables = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(o1, o2));
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_(observableOfObservables);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
}

- (void)testMergeArray {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(o1, o2);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testMergeList {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  id<JavaUtilList> listOfObservables = create_JavaUtilArrayList_init();
  [listOfObservables addWithId:o1];
  [listOfObservables addWithId:o2];
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_(RxObservable_fromWithJavaLangIterable_(listOfObservables));
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
}

- (void)mergeIterable {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init());
  id<JavaUtilList> listOfObservables = create_JavaUtilArrayList_init();
  [listOfObservables addWithId:o1];
  [listOfObservables addWithId:o2];
  RxObservable *m = RxObservable_mergeDelayErrorWithJavaLangIterable_(listOfObservables);
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
}

- (void)testMergeArrayWithThreading {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *o1 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init();
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *o2 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init();
  RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(RxObservable_createWithRxObservable_OnSubscribe_(o1), RxObservable_createWithRxObservable_OnSubscribe_(o2));
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:stringObserver_];
  @try {
    [((JavaLangThread *) nil_chk(o1->t_)) join];
    [((JavaLangThread *) nil_chk(o2->t_)) join];
  }
  @catch (JavaLangInterruptedException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testSynchronousError {
  RxObservable *o1 = RxObservable_errorWithNSException_(create_JavaLangRuntimeException_initWithNSString_(@"unit test"));
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  [((RxObservable *) nil_chk(RxObservable_mergeDelayErrorWithRxObservable_(o1))) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(latch)];
  @try {
    [latch await];
  }
  @catch (JavaLangInterruptedException *ex) {
    OrgJunitAssert_failWithNSString_(@"interrupted");
  }
}

- (void)testMergeSourceWhichDoesntPropagateExceptionBack {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init());
  RxObservable *result = RxObservable_mergeDelayErrorWithRxObservable_withRxObservable_(source, RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2)));
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) unsafeSubscribeWithRxSubscriber:create_RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(o)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(OrgMockitoMatchers_anyInt())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testErrorInParentObservable {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_mergeDelayErrorWithRxObservable_([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)), RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2))))) startWithWithId:RxObservable_errorWithNSException_(create_JavaLangRuntimeException_init())]))) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
}

- (void)testErrorInParentObservableDelayed {
  for (jint i = 0; i < 50; i++) {
    RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *o1 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init();
    RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *o2 = create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init();
    RxObservable *parentObservable = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(o1, o2));
    id<RxObserver> stringObserver = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
    RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithRxObserver_(stringObserver);
    RxObservable *m = RxObservable_mergeDelayErrorWithRxObservable_(parentObservable);
    [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"testErrorInParentObservableDelayed | ", i)];
    [ts awaitTerminalEventWithLong:2000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
    [ts assertTerminalEvent];
    [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver, OrgMockitoMockito_timesWithInt_(2)))) onNextWithId:@"hello"];
    [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
    [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(stringObserver, OrgMockitoMockito_never()))) onCompleted];
  }
}

- (void)testDelayErrorMaxConcurrent {
  id<JavaUtilList> requests = create_JavaUtilArrayList_init();
  RxObservable *source = RxObservable_mergeDelayErrorWithRxObservable_withInt_([((RxObservable *) nil_chk(RxObservable_justWithId_withId_([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) asObservable], RxObservable_errorWithNSException_(create_RxExceptionsTestException_init())))) doOnRequestWithRxFunctionsAction1:create_RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(requests)], 1);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [ts assertTerminalEvent];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
  OrgJunitAssert_assertTrueWithBoolean_([[((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) getWithInt:0] isKindOfClass:[RxExceptionsTestException class]]);
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(1LL) } count:3 type:JavaLangLong_class_()]), requests);
}

- (void)iterableMaxConcurrent {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxSubjectsPublishSubject *ps1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *ps2 = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk(RxObservable_mergeDelayErrorWithJavaLangIterable_withInt_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ ps1, ps2 } count:2 type:RxSubjectsPublishSubject_class_()]), 1))) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"ps1 has no subscribers?!", [((RxSubjectsPublishSubject *) nil_chk(ps1)) hasObservers]);
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"ps2 has subscribers?!", [((RxSubjectsPublishSubject *) nil_chk(ps2)) hasObservers]);
  [ps1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ps1 onCompleted];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"ps1 has subscribers?!", [ps1 hasObservers]);
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"ps2 has no subscribers?!", [ps2 hasObservers]);
  [ps2 onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ps2 onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)iterableMaxConcurrentError {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxSubjectsPublishSubject *ps1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *ps2 = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk(RxObservable_mergeDelayErrorWithJavaLangIterable_withInt_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ ps1, ps2 } count:2 type:RxSubjectsPublishSubject_class_()]), 1))) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"ps1 has no subscribers?!", [((RxSubjectsPublishSubject *) nil_chk(ps1)) hasObservers]);
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"ps2 has subscribers?!", [((RxSubjectsPublishSubject *) nil_chk(ps2)) hasObservers]);
  [ps1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ps1 onErrorWithNSException:create_RxExceptionsTestException_init()];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"ps1 has subscribers?!", [ps1 hasObservers]);
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"ps2 has no subscribers?!", [ps2 hasObservers]);
  [ps2 onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ps2 onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsCompositeException_class_()];
  [ts assertNotCompleted];
  RxExceptionsCompositeException *ce = (RxExceptionsCompositeException *) cast_chk([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) getWithInt:0], [RxExceptionsCompositeException class]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((id<JavaUtilList>) nil_chk([((RxExceptionsCompositeException *) nil_chk(ce)) getExceptions])) size]);
}

- (void)mergeMany {
  for (jint i = 2; i < 10; i++) {
    IOSObjectArray *clazz = [IOSObjectArray arrayWithLength:i type:IOSClass_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(clazz, RxObservable_class_());
    IOSObjectArray *obs = [IOSObjectArray arrayWithLength:i type:RxObservable_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(obs, RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)));
    IOSObjectArray *expected = [IOSObjectArray arrayWithLength:i type:JavaLangInteger_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(expected, JavaLangInteger_valueOfWithInt_(1));
    JavaLangReflectMethod *m = [RxObservable_class_() getMethod:@"mergeDelayError" parameterTypes:clazz];
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    [((RxObservable *) nil_chk(((RxObservable *) cast_chk([((JavaLangReflectMethod *) nil_chk(m)) invokeWithId:nil withNSObjectArray:obs], [RxObservable class])))) subscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:expected];
    [ts assertNoErrors];
    [ts assertCompleted];
  }
}

+ (RxObservable *)withErrorWithRxObservable:(RxObservable *)source {
  return RxInternalOperatorsOperatorMergeDelayErrorTest_withErrorWithRxObservable_(source);
}

- (void)mergeManyError {
  for (jint i = 2; i < 10; i++) {
    IOSObjectArray *clazz = [IOSObjectArray arrayWithLength:i type:IOSClass_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(clazz, RxObservable_class_());
    IOSObjectArray *obs = [IOSObjectArray arrayWithLength:i type:RxObservable_class_()];
    for (jint j = 0; j < i; j++) {
      IOSObjectArray_Set(obs, j, RxInternalOperatorsOperatorMergeDelayErrorTest_withErrorWithRxObservable_(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1))));
    }
    IOSObjectArray *expected = [IOSObjectArray arrayWithLength:i type:JavaLangInteger_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(expected, JavaLangInteger_valueOfWithInt_(1));
    JavaLangReflectMethod *m = [RxObservable_class_() getMethod:@"mergeDelayError" parameterTypes:clazz];
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    [((RxObservable *) nil_chk(((RxObservable *) cast_chk([((JavaLangReflectMethod *) nil_chk(m)) invokeWithId:nil withNSObjectArray:obs], [RxObservable class])))) subscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:expected];
    [ts assertErrorWithIOSClass:RxExceptionsCompositeException_class_()];
    [ts assertNotCompleted];
    RxExceptionsCompositeException *ce = (RxExceptionsCompositeException *) cast_chk([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) getWithInt:0], [RxExceptionsCompositeException class]);
    OrgJunitAssert_assertEqualsWithLong_withLong_(i, [((id<JavaUtilList>) nil_chk([((RxExceptionsCompositeException *) nil_chk(ce)) getExceptions])) size]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(stringObserver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, 16, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, 16, -1, 21, -1 },
    { NULL, "LRxObservable;", 0x8, 22, 23, -1, 24, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 16, -1, 25, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testErrorDelayed1);
  methods[2].selector = @selector(testErrorDelayed2);
  methods[3].selector = @selector(testErrorDelayed3);
  methods[4].selector = @selector(testErrorDelayed4);
  methods[5].selector = @selector(testErrorDelayed4WithThreading);
  methods[6].selector = @selector(testCompositeErrorDelayed1);
  methods[7].selector = @selector(testCompositeErrorDelayed2);
  methods[8].selector = @selector(testMergeObservableOfObservables);
  methods[9].selector = @selector(testMergeArray);
  methods[10].selector = @selector(testMergeList);
  methods[11].selector = @selector(mergeIterable);
  methods[12].selector = @selector(testMergeArrayWithThreading);
  methods[13].selector = @selector(testSynchronousError);
  methods[14].selector = @selector(testMergeSourceWhichDoesntPropagateExceptionBack);
  methods[15].selector = @selector(testErrorInParentObservable);
  methods[16].selector = @selector(testErrorInParentObservableDelayed);
  methods[17].selector = @selector(testDelayErrorMaxConcurrent);
  methods[18].selector = @selector(iterableMaxConcurrent);
  methods[19].selector = @selector(iterableMaxConcurrentError);
  methods[20].selector = @selector(mergeMany);
  methods[21].selector = @selector(withErrorWithRxObservable:);
  methods[22].selector = @selector(mergeManyError);
  methods[23].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stringObserver_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 26, 27 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$0, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$1, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$2, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$3, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$4, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$5, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$6, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$7, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$8, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$9, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$10, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$11, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$12, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$13, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$14, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$15, "LJavaLangException;", (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$16, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$17, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$18, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$19, (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$20, "withError", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/Observable<TT;>;", (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$21, "Lrx/Observer<Ljava/lang/String;>;", (void *)&RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$22, "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable;LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable;LRxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable;LRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable;LRxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver;LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest = { "OperatorMergeDelayErrorTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 24, 1, -1, 28, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest;
}

@end

RxObservable *RxInternalOperatorsOperatorMergeDelayErrorTest_withErrorWithRxObservable_(RxObservable *source) {
  RxInternalOperatorsOperatorMergeDelayErrorTest_initialize();
  return [((RxObservable *) nil_chk(source)) concatWithWithRxObservable:RxObservable_errorWithNSException_(create_RxExceptionsTestException_init())];
}

void RxInternalOperatorsOperatorMergeDelayErrorTest_init(RxInternalOperatorsOperatorMergeDelayErrorTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest *new_RxInternalOperatorsOperatorMergeDelayErrorTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest *create_RxInternalOperatorsOperatorMergeDelayErrorTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeDelayErrorTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:@"hello"];
  [observer onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable = { "TestSynchronousObservable", "rx.internal.operators", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_TestSynchronousObservable)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable

- (void)callWithId:(RxSubscriber *)observer {
  JreStrongAssignAndConsume(&t_, new_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(observer)));
  [t_ start];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t_", "LJavaLangThread;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable = { "TestASynchronousObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1

- (void)run {
  [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:@"hello"];
  [val$observer_ onCompleted];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronousObservable_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable

- (instancetype)initWithNSStringArray:(IOSObjectArray *)values {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(self, values);
  return self;
}

- (void)callWithId:(RxSubscriber *)observer {
  jboolean errorThrown = false;
  {
    IOSObjectArray *a__ = valuesToReturn_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *s = *b__++;
      if (s == nil) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"throwing exception"];
        [((RxSubscriber *) nil_chk(observer)) onErrorWithNSException:create_JavaLangNullPointerException_init()];
        errorThrown = true;
      }
      else {
        [((RxSubscriber *) nil_chk(observer)) onNextWithId:s];
      }
    }
  }
  if (!errorThrown) {
    [((RxSubscriber *) nil_chk(observer)) onCompleted];
  }
}

- (void)dealloc {
  RELEASE_(valuesToReturn_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSStringArray:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valuesToReturn_", "[LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSString;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable = { "TestErrorObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *self, IOSObjectArray *values) {
  NSObject_init(self);
  JreStrongAssign(&self->valuesToReturn_, values);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable, initWithNSStringArray_, values)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable, initWithNSStringArray_, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_TestErrorObservable)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable

- (instancetype)initWithNSStringArray:(IOSObjectArray *)values {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(self, values);
  return self;
}

- (void)callWithId:(RxSubscriber *)observer {
  JreStrongAssignAndConsume(&t_, new_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(self, observer)));
  [t_ start];
}

- (void)dealloc {
  RELEASE_(valuesToReturn_);
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x80, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSStringArray:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "valuesToReturn_", "[LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "t_", "LJavaLangThread;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSString;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable = { "TestAsyncErrorObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 2, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *self, IOSObjectArray *values) {
  NSObject_init(self);
  JreStrongAssign(&self->valuesToReturn_, values);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable, initWithNSStringArray_, values)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_initWithNSStringArray_(IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable, initWithNSStringArray_, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1

- (void)run {
  {
    IOSObjectArray *a__ = this$0_->valuesToReturn_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *s = *b__++;
      if (s == nil) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"throwing exception"];
        @try {
          JavaLangThread_sleepWithLong_(100);
        }
        @catch (NSException *e) {
        }
        [((RxSubscriber *) nil_chk(val$observer_)) onErrorWithNSException:create_JavaLangNullPointerException_init()];
        return;
      }
      else {
        [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:s];
      }
    }
  }
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"subscription complete"];
  [((RxSubscriber *) nil_chk(val$observer_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *)outer$
                                                                               withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable;LRxSubscriber;", "(Lrx/internal/operators/OperatorMergeDelayErrorTest$TestAsyncErrorObservable;Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *self, RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1, initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_$1, initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestAsyncErrorObservable_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  JreVolatileStrongAssign(&self->e_, e);
}

- (void)onNextWithId:(NSString *)args {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)__javaClone:(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&e_, &original->e_);
}

- (void)dealloc {
  JreReleaseVolatile(&e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "e_", "LNSException;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver = { "CaptureObserver", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 4, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *new_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver *create_RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_CaptureObserver)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable

- (void)callWithId:(RxSubscriber *)observer {
  JreStrongAssignAndConsume(&t_, new_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(observer)));
  [t_ start];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t_", "LJavaLangThread;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable = { "TestASynchronous1sDelayedObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable)

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1

- (void)run {
  @try {
    JavaLangThread_sleepWithLong_(100);
  }
  @catch (JavaLangInterruptedException *e) {
    [((RxSubscriber *) nil_chk(val$observer_)) onErrorWithNSException:e];
  }
  [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:@"hello"];
  [val$observer_ onCompleted];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$1

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:val$o1_];
  [observer onNextWithId:val$o2_];
  [observer onCompleted];
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0
                    withRxObservable:(RxObservable *)capture$1 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$o1_);
  RELEASE_(val$o2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservable:withRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$o1_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$o2_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxObservable;LRxObservable;", "(Lrx/Observable<Ljava/lang/String;>;Lrx/Observable<Ljava/lang/String;>;)V", "Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testMergeObservableOfObservables", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$1;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *self, RxObservable *capture$0, RxObservable *capture$1) {
  JreStrongAssign(&self->val$o1_, capture$0);
  JreStrongAssign(&self->val$o2_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxObservable *capture$0, RxObservable *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$1, initWithRxObservable_withRxObservable_, capture$0, capture$1)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$1 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$1_initWithRxObservable_withRxObservable_(RxObservable *capture$0, RxObservable *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$1, initWithRxObservable_withRxObservable_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$2

- (void)onCompleted {
  OrgJunitAssert_failWithNSString_(@"Expected onError path");
}

- (void)onErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(NSString *)s {
  OrgJunitAssert_failWithNSString_(@"Expected onError path");
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorMergeDelayErrorTest_$2 class]);
  RELEASE_(val$latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testSynchronousError", "Lrx/Subscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$2;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$latch_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$2, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$2 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$2, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$3

- (void)callWithId:(RxSubscriber *)t1 {
  @try {
    [((RxSubscriber *) nil_chk(t1)) onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  }
  @catch (NSException *swallow) {
  }
  [t1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [t1 onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testMergeSourceWhichDoesntPropagateExceptionBack", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$3;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init(RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$3, init)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$3 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$3, init)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$4

- (void)onNextWithId:(JavaLangInteger *)t {
  if (calls_++ == 0) {
    @throw create_RxExceptionsTestException_init();
  }
  [((id<RxObserver>) nil_chk(val$o_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxObserver>) nil_chk(val$o_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((id<RxObserver>) nil_chk(val$o_)) onCompleted];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorMergeDelayErrorTest_$4 class]);
  RELEASE_(val$o_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(initWithRxObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$o_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "onError", "LNSException;", "LRxObserver;", "(Lrx/Observer<Ljava/lang/Integer;>;)V", "Lrx/Observer<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testMergeSourceWhichDoesntPropagateExceptionBack", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$4;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$o_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$4, initWithRxObserver_, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$4 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$4_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$4, initWithRxObserver_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$5

- (void)callWithId:(RxSubscriber *)op {
  [((RxSubscriber *) nil_chk(op)) onNextWithId:RxObservable_createWithRxObservable_OnSubscribe_(val$o1_)];
  [op onNextWithId:RxObservable_createWithRxObservable_OnSubscribe_(val$o2_)];
  [op onErrorWithNSException:create_JavaLangNullPointerException_initWithNSString_(@"throwing exception in parent")];
}

- (instancetype)initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)capture$0
                    withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *)capture$1 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$o1_);
  RELEASE_(val$o2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$o1_", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$o2_", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;LRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testErrorInParentObservableDelayed", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$5;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *self, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1) {
  JreStrongAssign(&self->val$o1_, capture$0);
  JreStrongAssign(&self->val$o2_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$5, initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_, capture$0, capture$1)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$5 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$5_initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_(RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$0, RxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$5, initWithRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_withRxInternalOperatorsOperatorMergeDelayErrorTest_TestASynchronous1sDelayedObservable_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorMergeDelayErrorTest_$6

- (void)callWithId:(JavaLangLong *)t1 {
  [((id<JavaUtilList>) nil_chk(val$requests_)) addWithId:t1];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "Ljava/util/List<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorMergeDelayErrorTest;", "testDelayErrorMaxConcurrent", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeDelayErrorTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorMergeDelayErrorTest_$6;
}

@end

void RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$requests_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *new_RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$6, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorMergeDelayErrorTest_$6 *create_RxInternalOperatorsOperatorMergeDelayErrorTest_$6_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeDelayErrorTest_$6, initWithJavaUtilList_, capture$0)
}
