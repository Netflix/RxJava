//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorOnErrorResumeNextViaFunctionTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest")
#ifdef RESTRICT_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest
#define INCLUDE_ALL_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest

#if !defined (RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_) && (INCLUDE_ALL_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest || defined(INCLUDE_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest))
#define RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest : NSObject

#pragma mark Public

- (instancetype)init;

- (void)normalBackpressure;

- (void)testBackpressure;

- (void)testFunctionThrowsError;

- (void)testMapResumeAsyncNext;

- (void)testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperator;

- (void)testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperatorOnNext;

- (void)testResumeNextWithAsyncExecution;

- (void)testResumeNextWithSynchronousExecution;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest")
