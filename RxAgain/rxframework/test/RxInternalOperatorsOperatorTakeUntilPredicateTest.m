//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorTakeUntilPredicateTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorTakeUntilPredicateTest.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$7();

@interface RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntilPredicateTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init();

@interface RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntilPredicateTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init();

@interface RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntilPredicateTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init();

@interface RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 : NSObject < RxFunctionsFunc1 > {
 @public
  RxExceptionsTestException *val$e_;
}

- (JavaLangBoolean *)callWithId:(NSString *)t;

- (instancetype)initWithRxExceptionsTestException:(RxExceptionsTestException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4, val$e_, RxExceptionsTestException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *self, RxExceptionsTestException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxExceptionsTestException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxExceptionsTestException *capture$0);

@implementation RxInternalOperatorsOperatorTakeUntilPredicateTest

- (void)takeEmpty {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) takeUntilWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysTrue()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
}

- (void)takeAll {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) takeUntilWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysFalse()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
}

- (void)takeFirst {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) takeUntilWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysTrue()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
}

- (void)takeSome {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) takeUntilWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
}

- (void)functionThrows {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) takeUntilWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)sourceThrows {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) concatWithWithRxObservable:RxObservable_errorWithNSException_(create_RxExceptionsTestException_init())])) concatWithWithRxObservable:RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2))])) takeUntilWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysFalse()])) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)backpressure {
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 1000))) takeUntilWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_alwaysFalse()])) subscribeWithRxSubscriber:ts];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()])];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
}

- (void)testErrorIncludesLastValueAsCause {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxExceptionsTestException *e = create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(@"abc"))) takeUntilWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(e)])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [ts assertNotCompleted];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
  OrgJunitAssert_assertTrueWithBoolean_([((NSString *) nil_chk([((NSException *) nil_chk([((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) getWithInt:0])) getCause])) getMessage])) contains:@"abc"]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorTakeUntilPredicateTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(takeEmpty);
  methods[1].selector = @selector(takeAll);
  methods[2].selector = @selector(takeFirst);
  methods[3].selector = @selector(takeSome);
  methods[4].selector = @selector(functionThrows);
  methods[5].selector = @selector(sourceThrows);
  methods[6].selector = @selector(backpressure);
  methods[7].selector = @selector(testErrorIncludesLastValueAsCause);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$0, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$1, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$2, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$3, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$4, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$5, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$6, (void *)&RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$7 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntilPredicateTest = { "OperatorTakeUntilPredicateTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorTakeUntilPredicateTest;
}

@end

void RxInternalOperatorsOperatorTakeUntilPredicateTest_init(RxInternalOperatorsOperatorTakeUntilPredicateTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeUntilPredicateTest *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest, init)
}

RxInternalOperatorsOperatorTakeUntilPredicateTest *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeUntilPredicateTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeUntilPredicateTest)

@implementation RxInternalOperatorsOperatorTakeUntilPredicateTest_$1

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(t1)) intValue] == 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorTakeUntilPredicateTest;", "takeSome", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1;
}

@end

void RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$1, init)
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$1 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$1, init)
}

@implementation RxInternalOperatorsOperatorTakeUntilPredicateTest_$2

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1 {
  @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorTakeUntilPredicateTest;", "functionThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2;
}

@end

void RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$2, init)
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$2 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$2, init)
}

@implementation RxInternalOperatorsOperatorTakeUntilPredicateTest_$3

- (void)onStart {
  [self requestWithLong:5];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorTakeUntilPredicateTest;", "backpressure", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3;
}

@end

void RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init(RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$3, init)
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$3 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$3, init)
}

@implementation RxInternalOperatorsOperatorTakeUntilPredicateTest_$4

- (JavaLangBoolean *)callWithId:(NSString *)t {
  @throw val$e_;
}

- (instancetype)initWithRxExceptionsTestException:(RxExceptionsTestException *)capture$0 {
  RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxExceptionsTestException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LRxExceptionsTestException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LRxExceptionsTestException;", "LRxInternalOperatorsOperatorTakeUntilPredicateTest;", "testErrorIncludesLastValueAsCause", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4;
}

@end

void RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *self, RxExceptionsTestException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *new_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxExceptionsTestException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4, initWithRxExceptionsTestException_, capture$0)
}

RxInternalOperatorsOperatorTakeUntilPredicateTest_$4 *create_RxInternalOperatorsOperatorTakeUntilPredicateTest_$4_initWithRxExceptionsTestException_(RxExceptionsTestException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeUntilPredicateTest_$4, initWithRxExceptionsTestException_, capture$0)
}
