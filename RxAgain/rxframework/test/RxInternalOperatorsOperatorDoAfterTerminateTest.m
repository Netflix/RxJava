//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorDoAfterTerminateTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxInternalOperatorsOperatorDoAfterTerminate.h"
#include "RxInternalOperatorsOperatorDoAfterTerminateTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/stubbing/Stubber.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorDoAfterTerminateTest () {
 @public
  id<RxFunctionsAction0> aAction0_;
  id<RxObserver> observer_;
}

- (void)checkActionCalledWithRxObservable:(RxObservable *)input;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoAfterTerminateTest, aAction0_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoAfterTerminateTest, observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoAfterTerminateTest_checkActionCalledWithRxObservable_(RxInternalOperatorsOperatorDoAfterTerminateTest *self, RxObservable *input);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$6();

@implementation RxInternalOperatorsOperatorDoAfterTerminateTest

- (void)before {
  JreStrongAssign(&aAction0_, OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction0_class_()));
  JreStrongAssign(&observer_, OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_()));
}

- (void)checkActionCalledWithRxObservable:(RxObservable *)input {
  RxInternalOperatorsOperatorDoAfterTerminateTest_checkActionCalledWithRxObservable_(self, input);
}

- (void)testDoAfterTerminateCalledOnComplete {
  RxInternalOperatorsOperatorDoAfterTerminateTest_checkActionCalledWithRxObservable_(self, RxObservable_fromWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"1", @"2", @"3" } count:3 type:NSString_class_()]));
}

- (void)testDoAfterTerminateCalledOnError {
  RxInternalOperatorsOperatorDoAfterTerminateTest_checkActionCalledWithRxObservable_(self, RxObservable_errorWithNSException_(create_JavaLangRuntimeException_initWithNSString_(@"expected")));
}

- (void)nullActionShouldBeCheckedInConstructor {
  @try {
    create_RxInternalOperatorsOperatorDoAfterTerminate_initWithRxFunctionsAction0_(nil);
    OrgJunitAssert_fail();
  }
  @catch (JavaLangNullPointerException *expected) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"Action can not be null", [((JavaLangNullPointerException *) nil_chk(expected)) getMessage]);
  }
}

- (void)nullFinallyActionShouldBeCheckedASAP {
  @try {
    [((RxObservable *) nil_chk(RxObservable_justWithId_(@"value"))) doAfterTerminateWithRxFunctionsAction0:nil];
    OrgJunitAssert_fail();
  }
  @catch (JavaLangNullPointerException *expected) {
  }
}

- (void)ifFinallyActionThrowsExceptionShouldNotBeSwallowedAndActionShouldBeCalledOnce {
  id<RxFunctionsAction0> finallyAction = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction0_class_());
  [((id<RxFunctionsAction0>) nil_chk([((id<OrgMockitoStubbingStubber>) nil_chk(OrgMockitoMockito_doThrowWithNSException_(create_JavaLangIllegalStateException_init()))) whenWithId:finallyAction])) call];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(@"value"))) doAfterTerminateWithRxFunctionsAction0:finallyAction])) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValueWithId:@"value"];
  [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_(finallyAction))) call];
}

- (void)finallyDo {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) finallyDoWithRxFunctionsAction0:aAction0_])) subscribe];
  [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_(aAction0_))) call];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDoAfterTerminateTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(aAction0_);
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x2, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(checkActionCalledWithRxObservable:);
  methods[2].selector = @selector(testDoAfterTerminateCalledOnComplete);
  methods[3].selector = @selector(testDoAfterTerminateCalledOnError);
  methods[4].selector = @selector(nullActionShouldBeCheckedInConstructor);
  methods[5].selector = @selector(nullFinallyActionShouldBeCheckedASAP);
  methods[6].selector = @selector(ifFinallyActionThrowsExceptionShouldNotBeSwallowedAndActionShouldBeCalledOnce);
  methods[7].selector = @selector(finallyDo);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "aAction0_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$0, "checkActionCalled", "LRxObservable;", "(Lrx/Observable<Ljava/lang/String;>;)V", (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$1, (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$2, (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$3, (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$4, (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$5, (void *)&RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$6, "Lrx/Observer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoAfterTerminateTest = { "OperatorDoAfterTerminateTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorDoAfterTerminateTest;
}

@end

void RxInternalOperatorsOperatorDoAfterTerminateTest_checkActionCalledWithRxObservable_(RxInternalOperatorsOperatorDoAfterTerminateTest *self, RxObservable *input) {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(input)) doAfterTerminateWithRxFunctionsAction0:self->aAction0_])) subscribeWithRxObserver:self->observer_];
  [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(self->aAction0_, OrgMockitoMockito_timesWithInt_(1)))) call];
}

void RxInternalOperatorsOperatorDoAfterTerminateTest_init(RxInternalOperatorsOperatorDoAfterTerminateTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoAfterTerminateTest *new_RxInternalOperatorsOperatorDoAfterTerminateTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoAfterTerminateTest, init)
}

RxInternalOperatorsOperatorDoAfterTerminateTest *create_RxInternalOperatorsOperatorDoAfterTerminateTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoAfterTerminateTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoAfterTerminateTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorDoAfterTerminateTest)
