//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/subjects/ReplaySubjectConcurrencyTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxSubjectsReplaySubjectConcurrencyTest")
#ifdef RESTRICT_RxSubjectsReplaySubjectConcurrencyTest
#define INCLUDE_ALL_RxSubjectsReplaySubjectConcurrencyTest 0
#else
#define INCLUDE_ALL_RxSubjectsReplaySubjectConcurrencyTest 1
#endif
#undef RESTRICT_RxSubjectsReplaySubjectConcurrencyTest

#if !defined (RxSubjectsReplaySubjectConcurrencyTest_) && (INCLUDE_ALL_RxSubjectsReplaySubjectConcurrencyTest || defined(INCLUDE_RxSubjectsReplaySubjectConcurrencyTest))
#define RxSubjectsReplaySubjectConcurrencyTest_

@class IOSObjectArray;
@class RxSubjectsReplaySubject;

@interface RxSubjectsReplaySubjectConcurrencyTest : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)concurrencyTestWithRxSubjectsReplaySubject:(RxSubjectsReplaySubject *)replay;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)testConcurrentSizeAndHasAnyValue;

- (void)testRaceForTerminalState;

- (void)testReplaySubjectConcurrentSubscribersDoingReplayDontBlockEachOther;

- (void)testReplaySubjectConcurrentSubscriptions;

- (void)testReplaySubjectConcurrentSubscriptionsLoop;

- (void)testReplaySubjectEmissionSubscriptionRace;

- (void)testSubscribeCompletionRaceCondition;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsReplaySubjectConcurrencyTest)

FOUNDATION_EXPORT void RxSubjectsReplaySubjectConcurrencyTest_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void RxSubjectsReplaySubjectConcurrencyTest_concurrencyTestWithRxSubjectsReplaySubject_(RxSubjectsReplaySubject *replay);

FOUNDATION_EXPORT void RxSubjectsReplaySubjectConcurrencyTest_init(RxSubjectsReplaySubjectConcurrencyTest *self);

FOUNDATION_EXPORT RxSubjectsReplaySubjectConcurrencyTest *new_RxSubjectsReplaySubjectConcurrencyTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubjectsReplaySubjectConcurrencyTest *create_RxSubjectsReplaySubjectConcurrencyTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsReplaySubjectConcurrencyTest)

#endif

#pragma pop_macro("INCLUDE_ALL_RxSubjectsReplaySubjectConcurrencyTest")
