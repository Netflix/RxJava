//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/memory/SubscriberAutomaticRemovalTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest")
#ifdef RESTRICT_RxDopplMemorySubscriberAutomaticRemovalTest
#define INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest 0
#else
#define INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest 1
#endif
#undef RESTRICT_RxDopplMemorySubscriberAutomaticRemovalTest

#if !defined (RxDopplMemorySubscriberAutomaticRemovalTest_) && (INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest || defined(INCLUDE_RxDopplMemorySubscriberAutomaticRemovalTest))
#define RxDopplMemorySubscriberAutomaticRemovalTest_

@class JavaUtilConcurrentAtomicAtomicInteger;

@interface RxDopplMemorySubscriberAutomaticRemovalTest : NSObject

#pragma mark Public

- (instancetype)init;

- (void)innerTestObserveOnWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)refCount;

- (void)testAsyncComeAndGo;

- (void)testObserveOn;

- (void)testTake;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMemorySubscriberAutomaticRemovalTest)

FOUNDATION_EXPORT void RxDopplMemorySubscriberAutomaticRemovalTest_init(RxDopplMemorySubscriberAutomaticRemovalTest *self);

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest *new_RxDopplMemorySubscriberAutomaticRemovalTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest *create_RxDopplMemorySubscriberAutomaticRemovalTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMemorySubscriberAutomaticRemovalTest)

#endif

#if !defined (RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer_) && (INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest || defined(INCLUDE_RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer))
#define RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer_

#define RESTRICT_RxProducer 1
#define INCLUDE_RxProducer 1
#include "RxProducer.h"

@class RxSubscriber;

@interface RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer : NSObject < RxProducer > {
 @public
  __unsafe_unretained RxSubscriber *s_;
  jint i_;
}

#pragma mark Public

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithRxSubscriber:(RxSubscriber *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer)

FOUNDATION_EXPORT void RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer_initWithRxSubscriber_(RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer *self, RxSubscriber *s);

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer *new_RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer_initWithRxSubscriber_(RxSubscriber *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer *create_RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer_initWithRxSubscriber_(RxSubscriber *s);

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMemorySubscriberAutomaticRemovalTest_EasyProducer)

#endif

#if !defined (RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer_) && (INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest || defined(INCLUDE_RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer))
#define RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer_

#define RESTRICT_RxProducer 1
#define INCLUDE_RxProducer 1
#include "RxProducer.h"

@class JavaUtilConcurrentAtomicAtomicInteger;
@class JavaUtilConcurrentAtomicAtomicLong;
@class RxSubscriber;

@interface RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer : NSObject < RxProducer > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *counter_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  __unsafe_unretained RxSubscriber *s_;
  jint i_;
}

#pragma mark Public

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)counter
                       withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)requested
                                             withRxSubscriber:(RxSubscriber *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer)

J2OBJC_FIELD_SETTER(RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer, counter_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer, requested_, JavaUtilConcurrentAtomicAtomicLong *)

FOUNDATION_EXPORT void RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriber_(RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer *self, JavaUtilConcurrentAtomicAtomicInteger *counter, JavaUtilConcurrentAtomicAtomicLong *requested, RxSubscriber *s);

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer *new_RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *counter, JavaUtilConcurrentAtomicAtomicLong *requested, RxSubscriber *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer *create_RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer_initWithJavaUtilConcurrentAtomicAtomicInteger_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *counter, JavaUtilConcurrentAtomicAtomicLong *requested, RxSubscriber *s);

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMemorySubscriberAutomaticRemovalTest_BPTPRoducer)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplMemorySubscriberAutomaticRemovalTest")
