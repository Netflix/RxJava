//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/mock/MSubscriber.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplMockMSubscriber")
#ifdef RESTRICT_RxDopplMockMSubscriber
#define INCLUDE_ALL_RxDopplMockMSubscriber 0
#else
#define INCLUDE_ALL_RxDopplMockMSubscriber 1
#endif
#undef RESTRICT_RxDopplMockMSubscriber

#if !defined (RxDopplMockMSubscriber_) && (INCLUDE_ALL_RxDopplMockMSubscriber || defined(INCLUDE_RxDopplMockMSubscriber))
#define RxDopplMockMSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "RxSubscriber.h"

@interface RxDopplMockMSubscriber : RxSubscriber

#pragma mark Public

- (instancetype)init;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMockMSubscriber)

FOUNDATION_EXPORT void RxDopplMockMSubscriber_init(RxDopplMockMSubscriber *self);

FOUNDATION_EXPORT RxDopplMockMSubscriber *new_RxDopplMockMSubscriber_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMockMSubscriber *create_RxDopplMockMSubscriber_init();

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMockMSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplMockMSubscriber")
