//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorToObservableSortedListTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOperatorToObservableSortedListTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/concurrent/BrokenBarrierException.h"
#include "java/util/concurrent/CyclicBarrier.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$11();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$1 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$1_init(RxInternalOperatorsOperatorToObservableSortedListTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$1 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$1 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$1_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$2 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$2_init(RxInternalOperatorsOperatorToObservableSortedListTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$2 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$2 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$2_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$3 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$3_init(RxInternalOperatorsOperatorToObservableSortedListTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$3 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$3 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$3_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$4 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentCyclicBarrier *val$cb_;
  RxObserversTestSubscriber *val$ts_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentCyclicBarrier:(JavaUtilConcurrentCyclicBarrier *)capture$0
                          withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorToObservableSortedListTest_$4, val$cb_, JavaUtilConcurrentCyclicBarrier *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorToObservableSortedListTest_$4, val$ts_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorToObservableSortedListTest_$4 *self, JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$4 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$4 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$5 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$5_init(RxInternalOperatorsOperatorToObservableSortedListTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$5 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$5 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$5_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$6 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$6_init(RxInternalOperatorsOperatorToObservableSortedListTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$6 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$6 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$6_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$7 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$7_init(RxInternalOperatorsOperatorToObservableSortedListTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$7 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$7 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$7_init();

@interface RxInternalOperatorsOperatorToObservableSortedListTest_$8 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToObservableSortedListTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorToObservableSortedListTest_$8_init(RxInternalOperatorsOperatorToObservableSortedListTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$8 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorToObservableSortedListTest_$8 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$8_init();

@implementation RxInternalOperatorsOperatorToObservableSortedListTest

- (void)testSortedList {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) toSortedList];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValueWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()])];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedListWithCustomFunction {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) toSortedListWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorToObservableSortedListTest_$1_init()];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(1) } count:5 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testWithFollowingFirst {
  RxObservable *o = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]), [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o)) toSortedList])) toBlocking])) first]);
}

- (void)testBackpressureHonored {
  RxObservable *w = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4)))) toSortedList];
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorToObservableSortedListTest_$2_init();
  [((RxObservable *) nil_chk(w)) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) isEmpty]);
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) isEmpty]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
  [ts requestMoreWithLong:1];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_singletonListWithId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]))];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) isEmpty]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [ts getCompletions]);
  [ts requestMoreWithLong:1];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_singletonListWithId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]))];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) isEmpty]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [ts getCompletions]);
}

- (void)testAsyncRequested {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(RxSchedulersSchedulers_newThread())) createWorker];
  @try {
    for (jint i = 0; i < 1000; i++) {
      if (i % 50 == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"testAsyncRequested -> ", i)];
      }
      RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
      RxObservable *sorted = [((RxSubjectsPublishSubject *) nil_chk(source)) toSortedList];
      JavaUtilConcurrentCyclicBarrier *cb = create_JavaUtilConcurrentCyclicBarrier_initWithInt_(2);
      RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorToObservableSortedListTest_$3_init();
      [((RxObservable *) nil_chk(sorted)) subscribeWithRxSubscriber:ts];
      [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(cb, ts)];
      [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
      RxInternalOperatorsOperatorToObservableSortedListTest_awaitWithJavaUtilConcurrentCyclicBarrier_(cb);
      [source onCompleted];
      [ts awaitTerminalEventWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
      [ts assertTerminalEvent];
      [ts assertNoErrors];
      [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_singletonListWithId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]))];
    }
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(w)) unsubscribe];
  }
}

+ (void)awaitWithJavaUtilConcurrentCyclicBarrier:(JavaUtilConcurrentCyclicBarrier *)cb {
  RxInternalOperatorsOperatorToObservableSortedListTest_awaitWithJavaUtilConcurrentCyclicBarrier_(cb);
}

- (void)testSortedListCapacity {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) toSortedListWithInt:4];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValueWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()])];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedCustomComparer {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) toSortedListWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorToObservableSortedListTest_$5_init()];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValueWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(1) } count:5 type:JavaLangInteger_class_()])];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedCustomComparerHinted {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) toSortedListWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorToObservableSortedListTest_$6_init() withInt:4];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValueWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(1) } count:5 type:JavaLangInteger_class_()])];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSorted {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) sorted];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedWithCustomFunction {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) sortedWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorToObservableSortedListTest_$7_init()];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(1) } count:5 type:JavaLangInteger_class_()]];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedCustomComparator {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(4));
  RxObservable *observable = [((RxObservable *) nil_chk(w)) sortedWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorToObservableSortedListTest_$8_init()];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]];
  [testSubscriber assertNoErrors];
  [testSubscriber assertCompleted];
}

- (void)testSortedWithNonComparable {
  RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *n1 = create_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(1, @"a");
  RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *n2 = create_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(2, @"b");
  RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *n3 = create_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(3, @"c");
  RxObservable *w = RxObservable_justWithId_withId_withId_(n1, n2, n3);
  RxObservable *observable = [((RxObservable *) nil_chk(w)) sorted];
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertNoValues];
  [testSubscriber assertErrorWithIOSClass:JavaLangClassCastException_class_()];
  [testSubscriber assertNotCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x8, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testSortedList);
  methods[1].selector = @selector(testSortedListWithCustomFunction);
  methods[2].selector = @selector(testWithFollowingFirst);
  methods[3].selector = @selector(testBackpressureHonored);
  methods[4].selector = @selector(testAsyncRequested);
  methods[5].selector = @selector(awaitWithJavaUtilConcurrentCyclicBarrier:);
  methods[6].selector = @selector(testSortedListCapacity);
  methods[7].selector = @selector(testSortedCustomComparer);
  methods[8].selector = @selector(testSortedCustomComparerHinted);
  methods[9].selector = @selector(testSorted);
  methods[10].selector = @selector(testSortedWithCustomFunction);
  methods[11].selector = @selector(testSortedCustomComparator);
  methods[12].selector = @selector(testSortedWithNonComparable);
  methods[13].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$0, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$1, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$2, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$3, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$4, "await", "LJavaUtilConcurrentCyclicBarrier;", (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$5, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$6, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$7, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$8, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$9, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$10, (void *)&RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$11, "LRxInternalOperatorsOperatorToObservableSortedListTest_NonComparable;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest = { "OperatorToObservableSortedListTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 14, 0, -1, 14, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_awaitWithJavaUtilConcurrentCyclicBarrier_(JavaUtilConcurrentCyclicBarrier *cb) {
  RxInternalOperatorsOperatorToObservableSortedListTest_initialize();
  @try {
    [((JavaUtilConcurrentCyclicBarrier *) nil_chk(cb)) await];
  }
  @catch (JavaLangInterruptedException *ex) {
    [((JavaLangInterruptedException *) nil_chk(ex)) printStackTrace];
  }
  @catch (JavaUtilConcurrentBrokenBarrierException *ex) {
    [((JavaUtilConcurrentBrokenBarrierException *) nil_chk(ex)) printStackTrace];
  }
}

void RxInternalOperatorsOperatorToObservableSortedListTest_init(RxInternalOperatorsOperatorToObservableSortedListTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest *new_RxInternalOperatorsOperatorToObservableSortedListTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest *create_RxInternalOperatorsOperatorToObservableSortedListTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorToObservableSortedListTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorToObservableSortedListTest)

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable

- (instancetype)initWithInt:(jint)i
               withNSString:(NSString *)s {
  RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(self, i, s);
  return self;
}

- (void)dealloc {
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "i_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "s_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILNSString;", "LRxInternalOperatorsOperatorToObservableSortedListTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable = { "NonComparable", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 1, 2, 1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *self, jint i, NSString *s) {
  NSObject_init(self);
  self->i_ = i;
  JreStrongAssign(&self->s_, s);
}

RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *new_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(jint i, NSString *s) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable, initWithInt_withNSString_, i, s)
}

RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable *create_RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable_initWithInt_withNSString_(jint i, NSString *s) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable, initWithInt_withNSString_, i, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorToObservableSortedListTest_NonComparable)

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$1

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t2)) intValue] - [((JavaLangInteger *) nil_chk(t1)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testSortedListWithCustomFunction", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$1;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$1_init(RxInternalOperatorsOperatorToObservableSortedListTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$1 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$1, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$1 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$1, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$2

- (void)onStart {
  [self requestMoreWithLong:0];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorToObservableSortedListTest_$2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testBackpressureHonored", "Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$2;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$2_init(RxInternalOperatorsOperatorToObservableSortedListTest_$2 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$2 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$2, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$2 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$2, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$3

- (void)onStart {
  [self requestMoreWithLong:0];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorToObservableSortedListTest_$3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testAsyncRequested", "Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$3;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$3_init(RxInternalOperatorsOperatorToObservableSortedListTest_$3 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$3 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$3, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$3 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$3, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$4

- (void)call {
  RxInternalOperatorsOperatorToObservableSortedListTest_awaitWithJavaUtilConcurrentCyclicBarrier_(val$cb_);
  [((RxObserversTestSubscriber *) nil_chk(val$ts_)) requestMoreWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentCyclicBarrier:(JavaUtilConcurrentCyclicBarrier *)capture$0
                          withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$cb_);
  RELEASE_(val$ts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCyclicBarrier:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$cb_", "LJavaUtilConcurrentCyclicBarrier;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ts_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentCyclicBarrier;LRxObserversTestSubscriber;", "(Ljava/util/concurrent/CyclicBarrier;Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;)V", "Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testAsyncRequested" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$4;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorToObservableSortedListTest_$4 *self, JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$cb_, capture$0);
  JreStrongAssign(&self->val$ts_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$4 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$4, initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$4 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$4_initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_(JavaUtilConcurrentCyclicBarrier *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$4, initWithJavaUtilConcurrentCyclicBarrier_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$5

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t2)) compareToWithId:t1]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testSortedCustomComparer", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$5;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$5_init(RxInternalOperatorsOperatorToObservableSortedListTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$5 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$5, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$5 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$5, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$6

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t2)) compareToWithId:t1]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testSortedCustomComparerHinted", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$6;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$6_init(RxInternalOperatorsOperatorToObservableSortedListTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$6 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$6, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$6 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$6, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$7

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t2)) intValue] - [((JavaLangInteger *) nil_chk(t1)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testSortedWithCustomFunction", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$7;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$7_init(RxInternalOperatorsOperatorToObservableSortedListTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$7 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$7, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$7 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$7, init)
}

@implementation RxInternalOperatorsOperatorToObservableSortedListTest_$8

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) compareToWithId:t2]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorToObservableSortedListTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorToObservableSortedListTest;", "testSortedCustomComparator", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorToObservableSortedListTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorToObservableSortedListTest_$8;
}

@end

void RxInternalOperatorsOperatorToObservableSortedListTest_$8_init(RxInternalOperatorsOperatorToObservableSortedListTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorToObservableSortedListTest_$8 *new_RxInternalOperatorsOperatorToObservableSortedListTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$8, init)
}

RxInternalOperatorsOperatorToObservableSortedListTest_$8 *create_RxInternalOperatorsOperatorToObservableSortedListTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorToObservableSortedListTest_$8, init)
}
