//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorWindowWithStartEndObservableTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorWindowWithStartEndObservableTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest () {
 @public
  RxSchedulersTestScheduler *scheduler_;
  RxScheduler_Worker *innerScheduler_;
}

- (id<JavaUtilList>)listWithNSStringArray:(IOSObjectArray *)args;

- (void)pushWithRxObserver:(id<RxObserver>)observer
                    withId:(id)value
                   withInt:(jint)delay;

- (void)completeWithRxObserver:(id<RxObserver>)observer
                       withInt:(jint)delay;

- (id<RxFunctionsAction1>)observeWindowWithJavaUtilList:(id<JavaUtilList>)list
                                       withJavaUtilList:(id<JavaUtilList>)lists;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest, scheduler_, RxSchedulersTestScheduler *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest, innerScheduler_, RxScheduler_Worker *)

__attribute__((unused)) static id<JavaUtilList> RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, IOSObjectArray *args);

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<RxObserver> observer, id value, jint delay);

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<RxObserver> observer, jint delay);

__attribute__((unused)) static id<RxFunctionsAction1> RxInternalOperatorsOperatorWindowWithStartEndObservableTest_observeWindowWithJavaUtilList_withJavaUtilList_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<JavaUtilList> list, id<JavaUtilList> lists);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$4();

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest *this$0_;
}

- (RxObservable *)callWithId:(id)opening;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 : NSObject < RxFunctionsFunc0 > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest *this$0_;
  jint calls_;
}

- (RxObservable *)call;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
  id val$value_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6, val$observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6, val$value_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *self, id<RxObserver> capture$0, id capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7, val$observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$lists_;
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(RxObservable *)stringObservable;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0
                    withJavaUtilList:(id<JavaUtilList>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8, val$lists_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *self, id<JavaUtilList> capture$0, id<JavaUtilList> capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> capture$0, id<JavaUtilList> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> capture$0, id<JavaUtilList> capture$1);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 : NSObject < RxObserver > {
 @public
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *this$0_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)args;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1, this$0_, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$close_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9, val$close_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$close_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10, val$close_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest

- (void)before {
  JreStrongAssignAndConsume(&scheduler_, new_RxSchedulersTestScheduler_init());
  JreStrongAssign(&innerScheduler_, [scheduler_ createWorker]);
}

- (void)testObservableBasedOpenerAndCloser {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  id<JavaUtilList> lists = create_JavaUtilArrayList_init();
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self));
  RxObservable *openings = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self));
  id<RxFunctionsFunc1> closer = create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self);
  RxObservable *windowed = [((RxObservable *) nil_chk(source)) windowWithRxObservable:openings withRxFunctionsFunc1:closer];
  [((RxObservable *) nil_chk(windowed)) subscribeWithRxFunctionsAction1:RxInternalOperatorsOperatorWindowWithStartEndObservableTest_observeWindowWithJavaUtilList_withJavaUtilList_(self, list, lists)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [lists size]);
  OrgJunitAssert_assertEqualsWithId_withId_([lists getWithInt:0], RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"two", @"three" } count:2 type:NSString_class_()]));
  OrgJunitAssert_assertEqualsWithId_withId_([lists getWithInt:1], RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"five" } count:1 type:NSString_class_()]));
}

- (void)testObservableBasedCloser {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  id<JavaUtilList> lists = create_JavaUtilArrayList_init();
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self));
  id<RxFunctionsFunc0> closer = create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self);
  RxObservable *windowed = [((RxObservable *) nil_chk(source)) windowWithRxFunctionsFunc0:closer];
  [((RxObservable *) nil_chk(windowed)) subscribeWithRxFunctionsAction1:RxInternalOperatorsOperatorWindowWithStartEndObservableTest_observeWindowWithJavaUtilList_withJavaUtilList_(self, list, lists)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [lists size]);
  OrgJunitAssert_assertEqualsWithId_withId_([lists getWithInt:0], RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()]));
  OrgJunitAssert_assertEqualsWithId_withId_([lists getWithInt:1], RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"three", @"four" } count:2 type:NSString_class_()]));
  OrgJunitAssert_assertEqualsWithId_withId_([lists getWithInt:2], RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"five" } count:1 type:NSString_class_()]));
}

- (id<JavaUtilList>)listWithNSStringArray:(IOSObjectArray *)args {
  return RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(self, args);
}

- (void)pushWithRxObserver:(id<RxObserver>)observer
                    withId:(id)value
                   withInt:(jint)delay {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(self, observer, value, delay);
}

- (void)completeWithRxObserver:(id<RxObserver>)observer
                       withInt:(jint)delay {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(self, observer, delay);
}

- (id<RxFunctionsAction1>)observeWindowWithJavaUtilList:(id<JavaUtilList>)list
                                       withJavaUtilList:(id<JavaUtilList>)lists {
  return RxInternalOperatorsOperatorWindowWithStartEndObservableTest_observeWindowWithJavaUtilList_withJavaUtilList_(self, list, lists);
}

- (void)testNoUnsubscribeAndNoLeak {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *open = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *close = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) windowWithRxObservable:open withRxFunctionsFunc1:create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(close)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxSubjectsPublishSubject *) nil_chk(open)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgJunitAssert_assertTrueWithBoolean_([open hasObservers]);
  OrgJunitAssert_assertTrueWithBoolean_([((RxSubjectsPublishSubject *) nil_chk(close)) hasObservers]);
  [close onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgJunitAssert_assertFalseWithBoolean_([close hasObservers]);
  [source onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertCompleted];
  [ts assertNoErrors];
  [ts assertValueCountWithInt:1];
  OrgJunitAssert_assertFalseWithBoolean_([ts isUnsubscribed]);
  OrgJunitAssert_assertFalseWithBoolean_([open hasObservers]);
  OrgJunitAssert_assertFalseWithBoolean_([close hasObservers]);
}

- (void)testUnsubscribeAll {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *open = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *close = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) windowWithRxObservable:open withRxFunctionsFunc1:create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(close)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxSubjectsPublishSubject *) nil_chk(open)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgJunitAssert_assertTrueWithBoolean_([open hasObservers]);
  OrgJunitAssert_assertTrueWithBoolean_([((RxSubjectsPublishSubject *) nil_chk(close)) hasObservers]);
  [((RxObserversTestSubscriber *) nil_chk(ts)) unsubscribe];
  OrgJunitAssert_assertFalseWithBoolean_([open hasObservers]);
  OrgJunitAssert_assertFalseWithBoolean_([close hasObservers]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(scheduler_);
  RELEASE_(innerScheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "LJavaUtilList;", 0x82, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, 11, -1, -1 },
    { NULL, "LRxFunctionsAction1;", 0x2, 12, 13, -1, 14, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testObservableBasedOpenerAndCloser);
  methods[2].selector = @selector(testObservableBasedCloser);
  methods[3].selector = @selector(listWithNSStringArray:);
  methods[4].selector = @selector(pushWithRxObserver:withId:withInt:);
  methods[5].selector = @selector(completeWithRxObserver:withInt:);
  methods[6].selector = @selector(observeWindowWithJavaUtilList:withJavaUtilList:);
  methods[7].selector = @selector(testNoUnsubscribeAndNoLeak);
  methods[8].selector = @selector(testUnsubscribeAll);
  methods[9].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "innerScheduler_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$0, (void *)&RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$1, (void *)&RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$2, "list", "[LNSString;", "([Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;", "push", "LRxObserver;LNSObject;I", "<T:Ljava/lang/Object;>(Lrx/Observer<TT;>;TT;I)V", "complete", "LRxObserver;I", "(Lrx/Observer<*>;I)V", "observeWindow", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/util/List<Ljava/lang/String;>;>;)Lrx/functions/Action1<Lrx/Observable<Ljava/lang/String;>;>;", (void *)&RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$3, (void *)&RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$4 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest = { "OperatorWindowWithStartEndObservableTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest;
}

@end

id<JavaUtilList> RxInternalOperatorsOperatorWindowWithStartEndObservableTest_listWithNSStringArray_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, IOSObjectArray *args) {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      [list addWithId:arg];
    }
  }
  return list;
}

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<RxObserver> observer, id value, jint delay) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(observer, value) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<RxObserver> observer, jint delay) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(observer) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

id<RxFunctionsAction1> RxInternalOperatorsOperatorWindowWithStartEndObservableTest_observeWindowWithJavaUtilList_withJavaUtilList_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self, id<JavaUtilList> list, id<JavaUtilList> lists) {
  return create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(lists, list);
}

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_init(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest, init)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorWindowWithStartEndObservableTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithStartEndObservableTest)

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 10);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 60);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 110);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 160);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 210);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(this$0_, observer, 500);
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, create_NSObject_init(), 50);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, create_NSObject_init(), 200);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$2, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3

- (RxObservable *)callWithId:(id)opening {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(self));
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "(Ljava/lang/Object;)Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 100);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(this$0_->this$0_, observer, 101);
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$3_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 10);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 60);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 110);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 160);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 210);
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testObservableBasedCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$4, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5

- (RxObservable *)call {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(self));
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testObservableBasedCloser", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1

- (void)callWithId:(RxSubscriber *)observer {
  jint c = this$0_->calls_++;
  if (c == 0) {
    RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 100);
  }
  else if (c == 1) {
    RxInternalOperatorsOperatorWindowWithStartEndObservableTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 100);
  }
  else {
    RxInternalOperatorsOperatorWindowWithStartEndObservableTest_completeWithRxObserver_withInt_(this$0_->this$0_, observer, 101);
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 0, 4, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$5_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onNextWithId:val$value_];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1 {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LNSObject;", "(Lrx/Observer<TT;>;TT;)V", "Lrx/Observer<TT;>;", "TT;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "pushWithRxObserver:withId:withInt:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *self, id<RxObserver> capture$0, id capture$1) {
  JreStrongAssign(&self->val$observer_, capture$0);
  JreStrongAssign(&self->val$value_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6, initWithRxObserver_withId_, capture$0, capture$1)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$6, initWithRxObserver_withId_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onCompleted];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;", "(Lrx/Observer<*>;)V", "Lrx/Observer<*>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "completeWithRxObserver:withInt:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7, initWithRxObserver_, capture$0)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$7, initWithRxObserver_, capture$0)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8

- (void)callWithId:(RxObservable *)stringObservable {
  [((RxObservable *) nil_chk(stringObservable)) subscribeWithRxObserver:create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(self)];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0
                    withJavaUtilList:(id<JavaUtilList>)capture$1 {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$lists_);
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$lists_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Ljava/lang/String;>;)V", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ljava/util/List<Ljava/lang/String;>;>;Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/util/List<Ljava/lang/String;>;>;", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "observeWindowWithJavaUtilList:withJavaUtilList:", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *self, id<JavaUtilList> capture$0, id<JavaUtilList> capture$1) {
  JreStrongAssign(&self->val$lists_, capture$0);
  JreStrongAssign(&self->val$list_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> capture$0, id<JavaUtilList> capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8, initWithJavaUtilList_withJavaUtilList_, capture$0, capture$1)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> capture$0, id<JavaUtilList> capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8, initWithJavaUtilList_withJavaUtilList_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1

- (void)onCompleted {
  [((id<JavaUtilList>) nil_chk(this$0_->val$lists_)) addWithId:create_JavaUtilArrayList_initWithJavaUtilCollection_(this$0_->val$list_)];
  [((id<JavaUtilList>) nil_chk(this$0_->val$list_)) clear];
}

- (void)onErrorWithNSException:(NSException *)e {
  OrgJunitAssert_failWithNSString_([((NSException *) nil_chk(e)) getMessage]);
}

- (void)onNextWithId:(NSString *)args {
  [((id<JavaUtilList>) nil_chk(this$0_->val$list_)) addWithId:args];
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8:(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *)outer$ {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8;", "callWithId:", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *self, RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_, outer$)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1_initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_$1, initWithRxInternalOperatorsOperatorWindowWithStartEndObservableTest_$8_, outer$)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9

- (RxObservable *)callWithId:(JavaLangInteger *)t {
  return val$close_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$close_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$close_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testNoUnsubscribeAndNoLeak", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$close_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$9, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10

- (RxObservable *)callWithId:(JavaLangInteger *)t {
  return val$close_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$close_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$close_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorWindowWithStartEndObservableTest;", "testUnsubscribeAll", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10;
}

@end

void RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$close_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *new_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10 *create_RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithStartEndObservableTest_$10, initWithRxSubjectsPublishSubject_, capture$0)
}
