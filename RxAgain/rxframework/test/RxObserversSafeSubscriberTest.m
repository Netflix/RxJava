//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/observers/SafeSubscriberTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsOnCompletedFailedException.h"
#include "RxExceptionsOnErrorFailedException.h"
#include "RxExceptionsOnErrorNotImplementedException.h"
#include "RxExceptionsTestException.h"
#include "RxExceptionsUnsubscribeFailedException.h"
#include "RxFunctionsAction0.h"
#include "RxObserversSafeSubscriber.h"
#include "RxObserversSafeSubscriberTest.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaErrorHandler.h"
#include "RxPluginsRxJavaPlugins.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$10();

@interface RxObserversSafeSubscriberTest_$1 : RxObserversTestSubscriber

- (void)onCompleted;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$1)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$1_init(RxObserversSafeSubscriberTest_$1 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$1 *new_RxObserversSafeSubscriberTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$1 *create_RxObserversSafeSubscriberTest_$1_init();

@interface RxObserversSafeSubscriberTest_$2 : RxObserversTestSubscriber

- (void)onCompleted;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$2)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$2_init(RxObserversSafeSubscriberTest_$2 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$2 *new_RxObserversSafeSubscriberTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$2 *create_RxObserversSafeSubscriberTest_$2_init();

@interface RxObserversSafeSubscriberTest_$3 : RxPluginsRxJavaErrorHandler

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$3)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$3_init(RxObserversSafeSubscriberTest_$3 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$3 *new_RxObserversSafeSubscriberTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$3 *create_RxObserversSafeSubscriberTest_$3_init();

@interface RxObserversSafeSubscriberTest_$4 : RxObserversTestSubscriber

- (void)onCompleted;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$4)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$4_init(RxObserversSafeSubscriberTest_$4 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$4 *new_RxObserversSafeSubscriberTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$4 *create_RxObserversSafeSubscriberTest_$4_init();

@interface RxObserversSafeSubscriberTest_$5 : RxPluginsRxJavaErrorHandler {
 @public
  jint calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$5)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$5_init(RxObserversSafeSubscriberTest_$5 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$5 *new_RxObserversSafeSubscriberTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$5 *create_RxObserversSafeSubscriberTest_$5_init();

@interface RxObserversSafeSubscriberTest_$6 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$6)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$6_init(RxObserversSafeSubscriberTest_$6 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$6 *new_RxObserversSafeSubscriberTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$6 *create_RxObserversSafeSubscriberTest_$6_init();

@interface RxObserversSafeSubscriberTest_$7 : RxPluginsRxJavaErrorHandler {
 @public
  jint calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$7)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$7_init(RxObserversSafeSubscriberTest_$7 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$7 *new_RxObserversSafeSubscriberTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$7 *create_RxObserversSafeSubscriberTest_$7_init();

@interface RxObserversSafeSubscriberTest_$8 : RxObserversTestSubscriber

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$8)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$8_init(RxObserversSafeSubscriberTest_$8 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$8 *new_RxObserversSafeSubscriberTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$8 *create_RxObserversSafeSubscriberTest_$8_init();

@interface RxObserversSafeSubscriberTest_$9 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$9)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$9_init(RxObserversSafeSubscriberTest_$9 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$9 *new_RxObserversSafeSubscriberTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$9 *create_RxObserversSafeSubscriberTest_$9_init();

@interface RxObserversSafeSubscriberTest_$10 : RxPluginsRxJavaErrorHandler {
 @public
  jint calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$10)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$10_init(RxObserversSafeSubscriberTest_$10 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$10 *new_RxObserversSafeSubscriberTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$10 *create_RxObserversSafeSubscriberTest_$10_init();

@interface RxObserversSafeSubscriberTest_$11 : RxObserversTestSubscriber

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$11)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$11_init(RxObserversSafeSubscriberTest_$11 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$11 *new_RxObserversSafeSubscriberTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$11 *create_RxObserversSafeSubscriberTest_$11_init();

@interface RxObserversSafeSubscriberTest_$12 : RxPluginsRxJavaErrorHandler {
 @public
  jint calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$12)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$12_init(RxObserversSafeSubscriberTest_$12 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$12 *new_RxObserversSafeSubscriberTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$12 *create_RxObserversSafeSubscriberTest_$12_init();

@interface RxObserversSafeSubscriberTest_$13 : RxObserversTestSubscriber

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$13)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$13_init(RxObserversSafeSubscriberTest_$13 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$13 *new_RxObserversSafeSubscriberTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$13 *create_RxObserversSafeSubscriberTest_$13_init();

@interface RxObserversSafeSubscriberTest_$14 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$14)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$14_init(RxObserversSafeSubscriberTest_$14 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$14 *new_RxObserversSafeSubscriberTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$14 *create_RxObserversSafeSubscriberTest_$14_init();

@interface RxObserversSafeSubscriberTest_$15 : RxPluginsRxJavaErrorHandler {
 @public
  jint calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$15)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$15_init(RxObserversSafeSubscriberTest_$15 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$15 *new_RxObserversSafeSubscriberTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$15 *create_RxObserversSafeSubscriberTest_$15_init();

@interface RxObserversSafeSubscriberTest_$16 : RxObserversTestSubscriber

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$16)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$16_init(RxObserversSafeSubscriberTest_$16 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$16 *new_RxObserversSafeSubscriberTest_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$16 *create_RxObserversSafeSubscriberTest_$16_init();

@interface RxObserversSafeSubscriberTest_$17 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$17)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$17_init(RxObserversSafeSubscriberTest_$17 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$17 *new_RxObserversSafeSubscriberTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$17 *create_RxObserversSafeSubscriberTest_$17_init();

@interface RxObserversSafeSubscriberTest_$18 : RxPluginsRxJavaErrorHandler {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$18)

J2OBJC_FIELD_SETTER(RxObserversSafeSubscriberTest_$18, val$calls_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$18 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$18 *new_RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$18 *create_RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxObserversSafeSubscriberTest_$19 : RxObserversTestSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$errors_;
}

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$19)

J2OBJC_FIELD_SETTER(RxObserversSafeSubscriberTest_$19, val$errors_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$19 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$19 *new_RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$19 *create_RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxObserversSafeSubscriberTest_$20 : NSObject < RxFunctionsAction0 > {
 @public
  JavaLangRuntimeException *val$ex_;
}

- (void)call;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$20)

J2OBJC_FIELD_SETTER(RxObserversSafeSubscriberTest_$20, val$ex_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(RxObserversSafeSubscriberTest_$20 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$20 *new_RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$20 *create_RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxObserversSafeSubscriberTest_$21 : RxPluginsRxJavaErrorHandler {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$calls_;
}

- (void)handleErrorWithNSException:(NSException *)e;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$21)

J2OBJC_FIELD_SETTER(RxObserversSafeSubscriberTest_$21, val$calls_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$21 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$21 *new_RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$21 *create_RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxObserversSafeSubscriberTest_$22 : RxObserversTestSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$errors_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$22)

J2OBJC_FIELD_SETTER(RxObserversSafeSubscriberTest_$22, val$errors_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$22 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$22 *new_RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$22 *create_RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxObserversSafeSubscriberTest_$23 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSafeSubscriberTest_$23)

__attribute__((unused)) static void RxObserversSafeSubscriberTest_$23_init(RxObserversSafeSubscriberTest_$23 *self);

__attribute__((unused)) static RxObserversSafeSubscriberTest_$23 *new_RxObserversSafeSubscriberTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSafeSubscriberTest_$23 *create_RxObserversSafeSubscriberTest_$23_init();

@implementation RxObserversSafeSubscriberTest

- (void)resetBefore {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) reset];
}

- (void)testOnCompletedThrows {
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$1_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  @try {
    [safe onCompleted];
    OrgJunitAssert_fail();
  }
  @catch (RxExceptionsOnCompletedFailedException *e) {
    OrgJunitAssert_assertTrueWithBoolean_([safe isUnsubscribed]);
  }
}

- (void)testOnCompletedThrows2 {
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$2_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  @try {
    [safe onCompleted];
  }
  @catch (RxExceptionsOnErrorNotImplementedException *ex) {
  }
  OrgJunitAssert_assertTrueWithBoolean_([safe isUnsubscribed]);
}

- (void)testPluginException {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$3_init()];
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$4_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe onCompleted];
}

- (void)testPluginExceptionWhileOnErrorUnsubscribeThrows {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$5_init()];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$6_init())];
  [safe onErrorWithNSException:create_RxExceptionsTestException_init()];
}

- (void)testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$7_init()];
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$8_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$9_init())];
  [safe onErrorWithNSException:create_RxExceptionsTestException_init()];
}

- (void)testPluginExceptionWhileOnErrorThrows {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$10_init()];
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$11_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe onErrorWithNSException:create_RxExceptionsTestException_init()];
}

- (void)testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$12_init()];
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$13_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$14_init())];
  [safe onErrorWithNSException:create_RxExceptionsTestException_init()];
}

- (void)testPluginExceptionWhenUnsubscribing2 {
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$15_init()];
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$16_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$17_init())];
  [safe onErrorWithNSException:create_RxExceptionsTestException_init()];
}

- (void)testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows {
  JavaUtilConcurrentAtomicAtomicInteger *calls = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(calls)];
  JavaUtilConcurrentAtomicAtomicInteger *errors = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(errors);
  JavaLangRuntimeException *ex = create_JavaLangRuntimeException_init();
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(ex))];
  @try {
    [safe onCompleted];
    OrgJunitAssert_fail();
  }
  @catch (RxExceptionsUnsubscribeFailedException *e) {
    OrgJunitAssert_assertEqualsWithLong_withLong_(1, [calls get]);
    OrgJunitAssert_assertEqualsWithLong_withLong_(0, [errors get]);
  }
}

- (void)testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows {
  JavaUtilConcurrentAtomicAtomicInteger *calls = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) registerErrorHandlerWithRxPluginsRxJavaErrorHandler:create_RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(calls)];
  JavaUtilConcurrentAtomicAtomicInteger *errors = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObserversTestSubscriber *ts = create_RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(errors);
  RxObserversSafeSubscriber *safe = create_RxObserversSafeSubscriber_initWithRxSubscriber_(ts);
  [safe addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(create_RxObserversSafeSubscriberTest_$23_init())];
  @try {
    [safe onCompleted];
    OrgJunitAssert_fail();
  }
  @catch (RxExceptionsUnsubscribeFailedException *e) {
    OrgJunitAssert_assertEqualsWithLong_withLong_(2, [calls get]);
    OrgJunitAssert_assertEqualsWithLong_withLong_(0, [errors get]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(resetBefore);
  methods[1].selector = @selector(testOnCompletedThrows);
  methods[2].selector = @selector(testOnCompletedThrows2);
  methods[3].selector = @selector(testPluginException);
  methods[4].selector = @selector(testPluginExceptionWhileOnErrorUnsubscribeThrows);
  methods[5].selector = @selector(testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows);
  methods[6].selector = @selector(testPluginExceptionWhileOnErrorThrows);
  methods[7].selector = @selector(testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows);
  methods[8].selector = @selector(testPluginExceptionWhenUnsubscribing2);
  methods[9].selector = @selector(testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows);
  methods[10].selector = @selector(testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows);
  methods[11].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxObserversSafeSubscriberTest__Annotations$0, (void *)&RxObserversSafeSubscriberTest__Annotations$1, (void *)&RxObserversSafeSubscriberTest__Annotations$2, (void *)&RxObserversSafeSubscriberTest__Annotations$3, (void *)&RxObserversSafeSubscriberTest__Annotations$4, (void *)&RxObserversSafeSubscriberTest__Annotations$5, (void *)&RxObserversSafeSubscriberTest__Annotations$6, (void *)&RxObserversSafeSubscriberTest__Annotations$7, (void *)&RxObserversSafeSubscriberTest__Annotations$8, (void *)&RxObserversSafeSubscriberTest__Annotations$9, (void *)&RxObserversSafeSubscriberTest__Annotations$10 };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest = { "SafeSubscriberTest", "rx.observers", ptrTable, methods, NULL, 7, 0x1, 12, 0, -1, -1, -1, -1, -1 };
  return &_RxObserversSafeSubscriberTest;
}

@end

void RxObserversSafeSubscriberTest_init(RxObserversSafeSubscriberTest *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest *new_RxObserversSafeSubscriberTest_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest, init)
}

RxObserversSafeSubscriberTest *create_RxObserversSafeSubscriberTest_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest, init)
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore(), create_OrgJunitAfter() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnCompletedFailedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorFailedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaLangRuntimeException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorFailedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorFailedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorFailedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxObserversSafeSubscriberTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObserversSafeSubscriberTest)

@implementation RxObserversSafeSubscriberTest_$1

- (void)onCompleted {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testOnCompletedThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$1 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxObserversSafeSubscriberTest_$1;
}

@end

void RxObserversSafeSubscriberTest_$1_init(RxObserversSafeSubscriberTest_$1 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$1 *new_RxObserversSafeSubscriberTest_$1_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$1, init)
}

RxObserversSafeSubscriberTest_$1 *create_RxObserversSafeSubscriberTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$1, init)
}

@implementation RxObserversSafeSubscriberTest_$2

- (void)onCompleted {
  @throw create_RxExceptionsOnErrorNotImplementedException_initWithNSException_(create_RxExceptionsTestException_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testOnCompletedThrows2", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$2 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxObserversSafeSubscriberTest_$2;
}

@end

void RxObserversSafeSubscriberTest_$2_init(RxObserversSafeSubscriberTest_$2 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$2 *new_RxObserversSafeSubscriberTest_$2_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$2, init)
}

RxObserversSafeSubscriberTest_$2 *create_RxObserversSafeSubscriberTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$2, init)
}

@implementation RxObserversSafeSubscriberTest_$3

- (void)handleErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginException" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$3 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$3;
}

@end

void RxObserversSafeSubscriberTest_$3_init(RxObserversSafeSubscriberTest_$3 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$3 *new_RxObserversSafeSubscriberTest_$3_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$3, init)
}

RxObserversSafeSubscriberTest_$3 *create_RxObserversSafeSubscriberTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$3, init)
}

@implementation RxObserversSafeSubscriberTest_$4

- (void)onCompleted {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginException", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$4 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxObserversSafeSubscriberTest_$4;
}

@end

void RxObserversSafeSubscriberTest_$4_init(RxObserversSafeSubscriberTest_$4 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$4 *new_RxObserversSafeSubscriberTest_$4_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$4, init)
}

RxObserversSafeSubscriberTest_$4 *create_RxObserversSafeSubscriberTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$4, init)
}

@implementation RxObserversSafeSubscriberTest_$5

- (void)handleErrorWithNSException:(NSException *)e {
  if (++calls_ == 2) {
    @throw create_JavaLangRuntimeException_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$5 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$5;
}

@end

void RxObserversSafeSubscriberTest_$5_init(RxObserversSafeSubscriberTest_$5 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$5 *new_RxObserversSafeSubscriberTest_$5_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$5, init)
}

RxObserversSafeSubscriberTest_$5 *create_RxObserversSafeSubscriberTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$5, init)
}

@implementation RxObserversSafeSubscriberTest_$6

- (void)call {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$6 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$6;
}

@end

void RxObserversSafeSubscriberTest_$6_init(RxObserversSafeSubscriberTest_$6 *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$6 *new_RxObserversSafeSubscriberTest_$6_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$6, init)
}

RxObserversSafeSubscriberTest_$6 *create_RxObserversSafeSubscriberTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$6, init)
}

@implementation RxObserversSafeSubscriberTest_$7

- (void)handleErrorWithNSException:(NSException *)e {
  if (++calls_ == 2) {
    @throw create_JavaLangRuntimeException_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$7 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$7;
}

@end

void RxObserversSafeSubscriberTest_$7_init(RxObserversSafeSubscriberTest_$7 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$7 *new_RxObserversSafeSubscriberTest_$7_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$7, init)
}

RxObserversSafeSubscriberTest_$7 *create_RxObserversSafeSubscriberTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$7, init)
}

@implementation RxObserversSafeSubscriberTest_$8

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_RxExceptionsOnErrorNotImplementedException_initWithNSException_(e);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$8 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$8 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxObserversSafeSubscriberTest_$8;
}

@end

void RxObserversSafeSubscriberTest_$8_init(RxObserversSafeSubscriberTest_$8 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$8 *new_RxObserversSafeSubscriberTest_$8_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$8, init)
}

RxObserversSafeSubscriberTest_$8 *create_RxObserversSafeSubscriberTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$8, init)
}

@implementation RxObserversSafeSubscriberTest_$9

- (void)call {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$9 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$9;
}

@end

void RxObserversSafeSubscriberTest_$9_init(RxObserversSafeSubscriberTest_$9 *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$9 *new_RxObserversSafeSubscriberTest_$9_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$9, init)
}

RxObserversSafeSubscriberTest_$9 *create_RxObserversSafeSubscriberTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$9, init)
}

@implementation RxObserversSafeSubscriberTest_$10

- (void)handleErrorWithNSException:(NSException *)e {
  if (++calls_ == 2) {
    @throw create_JavaLangRuntimeException_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$10 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$10;
}

@end

void RxObserversSafeSubscriberTest_$10_init(RxObserversSafeSubscriberTest_$10 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$10 *new_RxObserversSafeSubscriberTest_$10_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$10, init)
}

RxObserversSafeSubscriberTest_$10 *create_RxObserversSafeSubscriberTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$10, init)
}

@implementation RxObserversSafeSubscriberTest_$11

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSException_(e);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$11 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$11 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxObserversSafeSubscriberTest_$11;
}

@end

void RxObserversSafeSubscriberTest_$11_init(RxObserversSafeSubscriberTest_$11 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$11 *new_RxObserversSafeSubscriberTest_$11_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$11, init)
}

RxObserversSafeSubscriberTest_$11 *create_RxObserversSafeSubscriberTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$11, init)
}

@implementation RxObserversSafeSubscriberTest_$12

- (void)handleErrorWithNSException:(NSException *)e {
  if (++calls_ == 2) {
    @throw create_JavaLangRuntimeException_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$12 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$12;
}

@end

void RxObserversSafeSubscriberTest_$12_init(RxObserversSafeSubscriberTest_$12 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$12 *new_RxObserversSafeSubscriberTest_$12_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$12, init)
}

RxObserversSafeSubscriberTest_$12 *create_RxObserversSafeSubscriberTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$12, init)
}

@implementation RxObserversSafeSubscriberTest_$13

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSException_(e);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$13 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$13 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxObserversSafeSubscriberTest_$13;
}

@end

void RxObserversSafeSubscriberTest_$13_init(RxObserversSafeSubscriberTest_$13 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$13 *new_RxObserversSafeSubscriberTest_$13_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$13, init)
}

RxObserversSafeSubscriberTest_$13 *create_RxObserversSafeSubscriberTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$13, init)
}

@implementation RxObserversSafeSubscriberTest_$14

- (void)call {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$14 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$14;
}

@end

void RxObserversSafeSubscriberTest_$14_init(RxObserversSafeSubscriberTest_$14 *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$14 *new_RxObserversSafeSubscriberTest_$14_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$14, init)
}

RxObserversSafeSubscriberTest_$14 *create_RxObserversSafeSubscriberTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$14, init)
}

@implementation RxObserversSafeSubscriberTest_$15

- (void)handleErrorWithNSException:(NSException *)e {
  if (++calls_ == 3) {
    @throw create_JavaLangRuntimeException_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calls_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhenUnsubscribing2" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$15 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$15;
}

@end

void RxObserversSafeSubscriberTest_$15_init(RxObserversSafeSubscriberTest_$15 *self) {
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$15 *new_RxObserversSafeSubscriberTest_$15_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$15, init)
}

RxObserversSafeSubscriberTest_$15 *create_RxObserversSafeSubscriberTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$15, init)
}

@implementation RxObserversSafeSubscriberTest_$16

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSException_(e);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$16 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSException:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhenUnsubscribing2", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$16 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxObserversSafeSubscriberTest_$16;
}

@end

void RxObserversSafeSubscriberTest_$16_init(RxObserversSafeSubscriberTest_$16 *self) {
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$16 *new_RxObserversSafeSubscriberTest_$16_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$16, init)
}

RxObserversSafeSubscriberTest_$16 *create_RxObserversSafeSubscriberTest_$16_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$16, init)
}

@implementation RxObserversSafeSubscriberTest_$17

- (void)call {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginExceptionWhenUnsubscribing2" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$17 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$17;
}

@end

void RxObserversSafeSubscriberTest_$17_init(RxObserversSafeSubscriberTest_$17 *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$17 *new_RxObserversSafeSubscriberTest_$17_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$17, init)
}

RxObserversSafeSubscriberTest_$17 *create_RxObserversSafeSubscriberTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$17, init)
}

@implementation RxObserversSafeSubscriberTest_$18

- (void)handleErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$calls_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$calls_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$calls_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$18 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$18;
}

@end

void RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$18 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$calls_, capture$0);
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$18 *new_RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$18, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxObserversSafeSubscriberTest_$18 *create_RxObserversSafeSubscriberTest_$18_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$18, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxObserversSafeSubscriberTest_$19

- (void)onErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$errors_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$19 class]);
  RELEASE_(val$errors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onErrorWithNSException:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$errors_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$19 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxObserversSafeSubscriberTest_$19;
}

@end

void RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$19 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$errors_, capture$0);
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$19 *new_RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$19, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxObserversSafeSubscriberTest_$19 *create_RxObserversSafeSubscriberTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$19, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxObserversSafeSubscriberTest_$20

- (void)call {
  @throw val$ex_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ex_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ex_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangRuntimeException;", "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$20 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$20;
}

@end

void RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(RxObserversSafeSubscriberTest_$20 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$ex_, capture$0);
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$20 *new_RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$20, initWithJavaLangRuntimeException_, capture$0)
}

RxObserversSafeSubscriberTest_$20 *create_RxObserversSafeSubscriberTest_$20_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$20, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxObserversSafeSubscriberTest_$21

- (void)handleErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$calls_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$calls_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(handleErrorWithNSException:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$calls_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleError", "LNSException;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$21 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$21;
}

@end

void RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$21 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$calls_, capture$0);
  RxPluginsRxJavaErrorHandler_init(self);
}

RxObserversSafeSubscriberTest_$21 *new_RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$21, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxObserversSafeSubscriberTest_$21 *create_RxObserversSafeSubscriberTest_$21_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$21, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxObserversSafeSubscriberTest_$22

- (void)onCompleted {
  @throw create_JavaLangRuntimeException_init();
}

- (void)onErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$errors_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxObserversSafeSubscriberTest_$22 class]);
  RELEASE_(val$errors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$errors_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$22 = { "", "rx.observers", ptrTable, methods, fields, 7, 0x8008, 3, 1, 3, -1, 4, 5, -1 };
  return &_RxObserversSafeSubscriberTest_$22;
}

@end

void RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxObserversSafeSubscriberTest_$22 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$errors_, capture$0);
  RxObserversTestSubscriber_init(self);
}

RxObserversSafeSubscriberTest_$22 *new_RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$22, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxObserversSafeSubscriberTest_$22 *create_RxObserversSafeSubscriberTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$22, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxObserversSafeSubscriberTest_$23

- (void)call {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSafeSubscriberTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxObserversSafeSubscriberTest;", "testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows" };
  static const J2ObjcClassInfo _RxObserversSafeSubscriberTest_$23 = { "", "rx.observers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxObserversSafeSubscriberTest_$23;
}

@end

void RxObserversSafeSubscriberTest_$23_init(RxObserversSafeSubscriberTest_$23 *self) {
  NSObject_init(self);
}

RxObserversSafeSubscriberTest_$23 *new_RxObserversSafeSubscriberTest_$23_init() {
  J2OBJC_NEW_IMPL(RxObserversSafeSubscriberTest_$23, init)
}

RxObserversSafeSubscriberTest_$23 *create_RxObserversSafeSubscriberTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxObserversSafeSubscriberTest_$23, init)
}
