//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorTakeLastOneTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxInternalOperatorsOperatorTakeLastOneTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$5();

@interface RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber : RxSubscriber {
 @public
  jlong initialRequest_;
  id<JavaUtilList> list_;
}

- (instancetype)initWithLong:(jlong)initialRequest;

- (void)requestMoreWithLong:(jlong)n;

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber, list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *self, jlong initialRequest);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *new_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(jlong initialRequest) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *create_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(jlong initialRequest);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber)

@interface RxInternalOperatorsOperatorTakeLastOneTest_$1 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$unsubscribed_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeLastOneTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeLastOneTest_$1, val$unsubscribed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorTakeLastOneTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_$1 *new_RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_$1 *create_RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorTakeLastOneTest_$2 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$upstreamCount_;
}

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeLastOneTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeLastOneTest_$2, val$upstreamCount_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorTakeLastOneTest_$2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_$2 *new_RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeLastOneTest_$2 *create_RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@implementation RxInternalOperatorsOperatorTakeLastOneTest

- (void)testLastOfManyReturnsLast {
  RxObserversTestSubscriber *s = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10))) takeLastWithInt:1])) subscribeWithRxSubscriber:s];
  [s assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(10) } count:1 type:JavaLangInteger_class_()])];
  [s assertNoErrors];
  [s assertTerminalEvent];
  [s assertUnsubscribed];
}

- (void)testLastOfEmptyReturnsEmpty {
  RxObserversTestSubscriber *s = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) takeLastWithInt:1])) subscribeWithRxSubscriber:s];
  [s assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  [s assertNoErrors];
  [s assertTerminalEvent];
  [s assertUnsubscribed];
}

- (void)testLastOfOneReturnsLast {
  RxObserversTestSubscriber *s = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) takeLastWithInt:1])) subscribeWithRxSubscriber:s];
  [s assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [s assertNoErrors];
  [s assertTerminalEvent];
  [s assertUnsubscribed];
}

- (void)testUnsubscribesFromUpstream {
  JavaUtilConcurrentAtomicAtomicBoolean *unsubscribed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  id<RxFunctionsAction0> unsubscribeAction = create_RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(unsubscribed);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) doOnUnsubscribeWithRxFunctionsAction0:unsubscribeAction])) takeLastWithInt:1])) subscribe];
  OrgJunitAssert_assertTrueWithBoolean_([unsubscribed get]);
}

- (void)testLastWithBackpressure {
  RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *s = create_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) takeLastWithInt:1])) subscribeWithRxSubscriber:s];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<JavaUtilList>) nil_chk(s->list_)) size]);
  [s requestMoreWithLong:1];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [s->list_ size]);
}

- (void)testTakeLastZeroProcessesAllItemsButIgnoresThem {
  JavaUtilConcurrentAtomicAtomicInteger *upstreamCount = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  jint num = 10;
  jint count = [((JavaLangInteger *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, num))) doOnNextWithRxFunctionsAction1:create_RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(upstreamCount)])) takeLastWithInt:0])) count])) toBlocking])) single])) intValue];
  OrgJunitAssert_assertEqualsWithLong_withLong_(num, [upstreamCount get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, count);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorTakeLastOneTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testLastOfManyReturnsLast);
  methods[1].selector = @selector(testLastOfEmptyReturnsEmpty);
  methods[2].selector = @selector(testLastOfOneReturnsLast);
  methods[3].selector = @selector(testUnsubscribesFromUpstream);
  methods[4].selector = @selector(testLastWithBackpressure);
  methods[5].selector = @selector(testTakeLastZeroProcessesAllItemsButIgnoresThem);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$0, (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$1, (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$2, (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$3, (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$4, (void *)&RxInternalOperatorsOperatorTakeLastOneTest__Annotations$5, "LRxInternalOperatorsOperatorTakeLastOneTest_MySubscriber;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeLastOneTest = { "OperatorTakeLastOneTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, 6, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorTakeLastOneTest;
}

@end

void RxInternalOperatorsOperatorTakeLastOneTest_init(RxInternalOperatorsOperatorTakeLastOneTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeLastOneTest *new_RxInternalOperatorsOperatorTakeLastOneTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeLastOneTest, init)
}

RxInternalOperatorsOperatorTakeLastOneTest *create_RxInternalOperatorsOperatorTakeLastOneTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeLastOneTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorTakeLastOneTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeLastOneTest)

@implementation RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber

- (instancetype)initWithLong:(jlong)initialRequest {
  RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(self, initialRequest);
  return self;
}

- (void)requestMoreWithLong:(jlong)n {
  [self requestWithLong:n];
}

- (void)onStart {
  [self requestWithLong:initialRequest_];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id)t {
  [((id<JavaUtilList>) nil_chk(list_)) addWithId:t];
}

- (void)dealloc {
  RELEASE_(list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(requestMoreWithLong:);
  methods[2].selector = @selector(onStart);
  methods[3].selector = @selector(onCompleted);
  methods[4].selector = @selector(onErrorWithNSException:);
  methods[5].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "initialRequest_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "J", "requestMore", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Ljava/util/List<TT;>;", "LRxInternalOperatorsOperatorTakeLastOneTest;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber = { "MySubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 6, 2, 8, -1, -1, 9, -1 };
  return &_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber;
}

@end

void RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *self, jlong initialRequest) {
  RxSubscriber_init(self);
  JreStrongAssignAndConsume(&self->list_, new_JavaUtilArrayList_init());
  self->initialRequest_ = initialRequest;
}

RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *new_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(jlong initialRequest) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber, initWithLong_, initialRequest)
}

RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber *create_RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber_initWithLong_(jlong initialRequest) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber, initWithLong_, initialRequest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeLastOneTest_MySubscriber)

@implementation RxInternalOperatorsOperatorTakeLastOneTest_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$unsubscribed_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unsubscribed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unsubscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorTakeLastOneTest;", "testUnsubscribesFromUpstream" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeLastOneTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorTakeLastOneTest_$1;
}

@end

void RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorTakeLastOneTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$unsubscribed_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeLastOneTest_$1 *new_RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorTakeLastOneTest_$1 *create_RxInternalOperatorsOperatorTakeLastOneTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorTakeLastOneTest_$2

- (void)callWithId:(JavaLangInteger *)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$upstreamCount_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$upstreamCount_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$upstreamCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorTakeLastOneTest;", "testTakeLastZeroProcessesAllItemsButIgnoresThem", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeLastOneTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorTakeLastOneTest_$2;
}

@end

void RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorTakeLastOneTest_$2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$upstreamCount_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeLastOneTest_$2 *new_RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_$2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorTakeLastOneTest_$2 *create_RxInternalOperatorsOperatorTakeLastOneTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeLastOneTest_$2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}
