//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorReplayTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest")
#ifdef RESTRICT_RxInternalOperatorsOperatorReplayTest
#define INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorReplayTest

#if !defined (RxInternalOperatorsOperatorReplayTest_) && (INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest || defined(INCLUDE_RxInternalOperatorsOperatorReplayTest))
#define RxInternalOperatorsOperatorReplayTest_

@class RxScheduler_Worker;
@protocol RxFunctionsFunc1;
@protocol RxSubscription;

@interface RxInternalOperatorsOperatorReplayTest : NSObject

#pragma mark Public

- (instancetype)init;

- (void)allScheduled;

- (void)bufferScheduled;

- (void)bufferTimedSelectorScheduler;

- (void)bufferTimedSelectorSchedulerBadBuffer;

- (void)dontReplayOldValues;

- (void)invalidBufferSize;

- (void)replayNoRetentionSizeBound;

- (void)replayNoRetentionTimebound;

- (void)replayNoRetentionUnbounded;

- (void)replayTimedDefaultScheduler;

- (void)selectorScheduler;

- (void)selectorSizeScheduler;

- (void)selectorSizeTimeDefaultScheduler;

- (void)testAsync;

- (void)testAsyncComeAndGo;

- (void)testBackpressure;

- (void)testBackpressureBounded;

- (void)testBoundedReplayBuffer;

- (void)testBufferedReplay;

- (void)testBufferedReplayError;

- (void)testBufferedReplaySelector;

- (void)testBufferedWindowReplay;

- (void)testCache;

- (void)testColdReplayBackpressure;

- (void)testColdReplayNoBackpressure;

- (void)testIssue2191_SchedulerUnsubscribe;

- (void)testIssue2191_SchedulerUnsubscribeOnError;

- (void)testIssue2191_UnsubscribeSource;

- (void)testNoMissingBackpressureException;

- (void)testReplaySelector;

- (void)testSubscribersComeAndGoAtRequestBoundaries;

- (void)testSubscribersComeAndGoAtRequestBoundaries2;

- (void)testSynchronousDisconnect;

- (void)testTake;

- (void)testTimedAndSizedTruncation;

- (void)testUnsubscribeSource;

- (void)testValuesAndThenError;

- (void)testWindowedReplay;

- (void)testWindowedReplayError;

- (void)testWindowedReplaySelector;

- (void)timeSizeDefaultScheduler;

- (void)unboundedLeavesEarly;

- (void)unsafeChildThrows;

+ (RxScheduler_Worker *)workerSpyWithRxSubscription:(id<RxSubscription>)mockSubscription;

#pragma mark Package-Private

- (void)replayNoRetentionWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)replayOp;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplayTest)

FOUNDATION_EXPORT RxScheduler_Worker *RxInternalOperatorsOperatorReplayTest_workerSpyWithRxSubscription_(id<RxSubscription> mockSubscription);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorReplayTest_init(RxInternalOperatorsOperatorReplayTest *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplayTest *new_RxInternalOperatorsOperatorReplayTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplayTest *create_RxInternalOperatorsOperatorReplayTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplayTest)

#endif

#if !defined (RxInternalOperatorsOperatorReplayTest_InprocessWorker_) && (INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest || defined(INCLUDE_RxInternalOperatorsOperatorReplayTest_InprocessWorker))
#define RxInternalOperatorsOperatorReplayTest_InprocessWorker_

#define RESTRICT_RxScheduler 1
#define INCLUDE_RxScheduler_Worker 1
#include "RxScheduler.h"

@class JavaUtilConcurrentTimeUnit;
@protocol RxFunctionsAction0;
@protocol RxSubscription;

@interface RxInternalOperatorsOperatorReplayTest_InprocessWorker : RxScheduler_Worker {
 @public
  jboolean unsubscribed_;
}

#pragma mark Public

- (instancetype)initWithRxSubscription:(id<RxSubscription>)mockSubscription;

- (jboolean)isUnsubscribed;

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action
                                            withLong:(jlong)delayTime
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplayTest_InprocessWorker)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorReplayTest_InprocessWorker_initWithRxSubscription_(RxInternalOperatorsOperatorReplayTest_InprocessWorker *self, id<RxSubscription> mockSubscription);

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplayTest_InprocessWorker *new_RxInternalOperatorsOperatorReplayTest_InprocessWorker_initWithRxSubscription_(id<RxSubscription> mockSubscription) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplayTest_InprocessWorker *create_RxInternalOperatorsOperatorReplayTest_InprocessWorker_initWithRxSubscription_(id<RxSubscription> mockSubscription);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplayTest_InprocessWorker)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorReplayTest")
