//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/SingleDoAfterTerminateTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsSingleDoAfterTerminateTest.h"
#include "RxObserversTestSubscriber.h"
#include "RxSingle.h"
#include "RxSubscription.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$1();

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$counter_;
}

- (RxSingle *)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$1, val$counter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsSingleDoAfterTerminateTest_$1 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1:(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1, this$0_, RxInternalOperatorsSingleDoAfterTerminateTest_$1 *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *self, RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$);

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$2 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$counter_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$2, val$counter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$2 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$2 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$3 : NSObject < RxFunctionsFunc1 > {
 @public
  jint val$fi_;
  JavaUtilConcurrentAtomicAtomicInteger *val$counter_;
}

- (RxSingle *)callWithId:(NSString *)s;

- (instancetype)initWithInt:(jint)capture$0
withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$3, val$counter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *self, jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$3 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$3 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsSingleDoAfterTerminateTest_$3 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3:(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1, this$0_, RxInternalOperatorsSingleDoAfterTerminateTest_$3 *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *self, RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$);

@interface RxInternalOperatorsSingleDoAfterTerminateTest_$4 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$counter_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleDoAfterTerminateTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleDoAfterTerminateTest_$4, val$counter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$4 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleDoAfterTerminateTest_$4 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@implementation RxInternalOperatorsSingleDoAfterTerminateTest

- (void)chainedCallsOuter {
  for (jint i = 2; i <= 5; i++) {
    JavaUtilConcurrentAtomicAtomicInteger *counter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
    RxSingle *source = [((RxSingle *) nil_chk(RxSingle_justWithId_(@"Test"))) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(counter)];
    RxSingle *result = source;
    for (jint j = 1; j < i; j++) {
      result = [((RxSingle *) nil_chk(result)) doAfterTerminateWithRxFunctionsAction0:create_RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(counter)];
    }
    [((RxSingle *) nil_chk(result)) subscribeWithRxSubscriber:create_RxObserversTestSubscriber_init()];
    OrgJunitAssert_assertEqualsWithLong_withLong_(i, [counter get]);
  }
}

- (void)chainedCallsInner {
  for (jint i = 2; i <= 5; i++) {
    JavaUtilConcurrentAtomicAtomicInteger *counter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
    jint fi = i;
    [((RxSingle *) nil_chk([((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(@"Test"))) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(fi, counter)])) doAfterTerminateWithRxFunctionsAction0:create_RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(counter)])) subscribeWithRxSubscriber:create_RxObserversTestSubscriber_init()];
    OrgJunitAssert_assertEqualsWithLong_withLong_(i, [counter get]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleDoAfterTerminateTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(chainedCallsOuter);
  methods[1].selector = @selector(chainedCallsInner);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$0, (void *)&RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$1 };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest = { "SingleDoAfterTerminateTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_init(RxInternalOperatorsSingleDoAfterTerminateTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest *new_RxInternalOperatorsSingleDoAfterTerminateTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest, init)
}

RxInternalOperatorsSingleDoAfterTerminateTest *create_RxInternalOperatorsSingleDoAfterTerminateTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest, init)
}

IOSObjectArray *RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleDoAfterTerminateTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleDoAfterTerminateTest)

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$1

- (RxSingle *)callWithId:(NSString *)s {
  return [((RxSingle *) nil_chk(RxSingle_justWithId_(@"Test2"))) doAfterTerminateWithRxFunctionsAction0:create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$counter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "(Ljava/lang/String;)Lrx/Single<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsSingleDoAfterTerminateTest;", "chainedCallsOuter", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$1;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$counter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$1, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$1, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(this$0_->val$counter_)) getAndIncrement];
}

- (instancetype)initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1:(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *)outer$ {
  RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsSingleDoAfterTerminateTest_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleDoAfterTerminateTest_$1;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *self, RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1, initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_, outer$)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_(RxInternalOperatorsSingleDoAfterTerminateTest_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$1_$1, initWithRxInternalOperatorsSingleDoAfterTerminateTest_$1_, outer$)
}

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$2

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$counter_)) getAndIncrement];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$counter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsSingleDoAfterTerminateTest;", "chainedCallsOuter" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$2;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$counter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$2 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$2 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$3

- (RxSingle *)callWithId:(NSString *)s {
  RxSingle *result = RxSingle_justWithId_(@"Test2");
  for (jint j = 1; j < val$fi_; j++) {
    result = [((RxSingle *) nil_chk(result)) doAfterTerminateWithRxFunctionsAction0:create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(self)];
  }
  return result;
}

- (instancetype)initWithInt:(jint)capture$0
withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$counter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithInt:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$fi_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "(Ljava/lang/String;)Lrx/Single<Ljava/lang/String;>;", "ILJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsSingleDoAfterTerminateTest;", "chainedCallsInner", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$3;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *self, jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  self->val$fi_ = capture$0;
  JreStrongAssign(&self->val$counter_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$3 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$3, initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$3 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_(jint capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$3, initWithInt_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(this$0_->val$counter_)) getAndIncrement];
}

- (instancetype)initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3:(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *)outer$ {
  RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsSingleDoAfterTerminateTest_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleDoAfterTerminateTest_$3;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *self, RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1, initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_, outer$)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1_initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_(RxInternalOperatorsSingleDoAfterTerminateTest_$3 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$3_$1, initWithRxInternalOperatorsSingleDoAfterTerminateTest_$3_, outer$)
}

@implementation RxInternalOperatorsSingleDoAfterTerminateTest_$4

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$counter_)) getAndIncrement];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$counter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsSingleDoAfterTerminateTest;", "chainedCallsInner" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleDoAfterTerminateTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsSingleDoAfterTerminateTest_$4;
}

@end

void RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsSingleDoAfterTerminateTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$counter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleDoAfterTerminateTest_$4 *new_RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsSingleDoAfterTerminateTest_$4 *create_RxInternalOperatorsSingleDoAfterTerminateTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleDoAfterTerminateTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}
