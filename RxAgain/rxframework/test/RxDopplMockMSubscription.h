//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/mock/MSubscription.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplMockMSubscription")
#ifdef RESTRICT_RxDopplMockMSubscription
#define INCLUDE_ALL_RxDopplMockMSubscription 0
#else
#define INCLUDE_ALL_RxDopplMockMSubscription 1
#endif
#undef RESTRICT_RxDopplMockMSubscription

#if !defined (RxDopplMockMSubscription_) && (INCLUDE_ALL_RxDopplMockMSubscription || defined(INCLUDE_RxDopplMockMSubscription))
#define RxDopplMockMSubscription_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "RxSubscription.h"

@interface RxDopplMockMSubscription : NSObject < RxSubscription > {
 @public
  jboolean unsubscribed_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMockMSubscription)

FOUNDATION_EXPORT void RxDopplMockMSubscription_init(RxDopplMockMSubscription *self);

FOUNDATION_EXPORT RxDopplMockMSubscription *new_RxDopplMockMSubscription_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMockMSubscription *create_RxDopplMockMSubscription_init();

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMockMSubscription)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplMockMSubscription")
