//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeToMultimapTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOnSubscribeToMultimapTest.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOnSubscribeToMultimapTest ()

+ (id<RxFunctionsFunc1>)arrayListCollectionFactory;

+ (id<RxFunctionsFunc0>)multimapFactory;

@end

__attribute__((unused)) static id<RxFunctionsFunc1> RxInternalOperatorsOnSubscribeToMultimapTest_arrayListCollectionFactory();

__attribute__((unused)) static id<RxFunctionsFunc0> RxInternalOperatorsOnSubscribeToMultimapTest_multimapFactory();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$17();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$1_init(RxInternalOperatorsOnSubscribeToMultimapTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$1_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$2 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$2_init(RxInternalOperatorsOnSubscribeToMultimapTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$2 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$2 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$2_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$3 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$3_init(RxInternalOperatorsOnSubscribeToMultimapTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$3 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$3 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 : JavaUtilLinkedHashMap

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1)

inline jlong RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_get_serialVersionUID();
#define RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_serialVersionUID -2084477070717362859LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1, serialVersionUID, jlong)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$4 : NSObject < RxFunctionsFunc1 >

- (id<JavaUtilCollection>)callWithId:(id)k;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$4_init(RxInternalOperatorsOnSubscribeToMultimapTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$4 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$4 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$4_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$5 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$5_init(RxInternalOperatorsOnSubscribeToMultimapTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$5 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$5 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$5_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$6 : NSObject < RxFunctionsFunc1 >

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$6_init(RxInternalOperatorsOnSubscribeToMultimapTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$6 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$6 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$6_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$7 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$7_init(RxInternalOperatorsOnSubscribeToMultimapTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$7 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$7 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$7_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$8 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$8_init(RxInternalOperatorsOnSubscribeToMultimapTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$8 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$8 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$8_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$9 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$9_init(RxInternalOperatorsOnSubscribeToMultimapTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$9 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$9 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$9_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$10 : NSObject < RxFunctionsFunc1 >

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$10)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$10_init(RxInternalOperatorsOnSubscribeToMultimapTest_$10 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$10 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$10 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$10_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$11 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$11_init(RxInternalOperatorsOnSubscribeToMultimapTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$11 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$11 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$11_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$12 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$12_init(RxInternalOperatorsOnSubscribeToMultimapTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$12 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$12 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$12_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$13 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$13_init(RxInternalOperatorsOnSubscribeToMultimapTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$13 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$13 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$13_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$14 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$14_init(RxInternalOperatorsOnSubscribeToMultimapTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$14 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$14 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$14_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$15 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$15_init(RxInternalOperatorsOnSubscribeToMultimapTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$15 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$15 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$15_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$16 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$16)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$16_init(RxInternalOperatorsOnSubscribeToMultimapTest_$16 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$16 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$16 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$16_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$17 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$17)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$17_init(RxInternalOperatorsOnSubscribeToMultimapTest_$17 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$17 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$17 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$17_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$18 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$18_init(RxInternalOperatorsOnSubscribeToMultimapTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$18 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$18 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$18_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$19 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$19)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$19_init(RxInternalOperatorsOnSubscribeToMultimapTest_$19 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$19 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$19 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$19_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$20 : NSObject < RxFunctionsFunc1 >

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)k;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$20_init(RxInternalOperatorsOnSubscribeToMultimapTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$20 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$20 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$20_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$21 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$21)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$21_init(RxInternalOperatorsOnSubscribeToMultimapTest_$21 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$21 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$21 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$22 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$22, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$22 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$22 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$22 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$23 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$23)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$23, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeToMultimapTest_$23 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$23 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$23 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$24 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangRuntimeException *val$e2_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$24)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$24, val$e2_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$24 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$24 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOnSubscribeToMultimapTest_$24 *this$0_;
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24:(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *)outer$
                                                        withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1, this$0_, RxInternalOperatorsOnSubscribeToMultimapTest_$24 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *self, RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$25 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$25)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$25, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$25 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$25 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$25 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$26 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$26)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$26_init(RxInternalOperatorsOnSubscribeToMultimapTest_$26 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$26 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$26 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_init();

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMultimapTest_$27 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMultimapTest_$27)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMultimapTest_$27, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$27 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$27 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMultimapTest_$27 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@implementation RxInternalOperatorsOnSubscribeToMultimapTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testToMultimap {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", @"cc", @"dd");
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"a", @"b" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMultimapWithValueSelector {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", @"cc", @"dd");
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:duplicate_];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"aa", @"bb" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cccc", @"dddd" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMultimapWithMapFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"a", @"b", @"cc", @"dd", @"eee", @"fff");
  id<RxFunctionsFunc0> mapFactory = create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:mapFactory withRxFunctionsFunc1:RxInternalOperatorsOnSubscribeToMultimapTest_arrayListCollectionFactory()];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"eee", @"fff" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

+ (id<RxFunctionsFunc1>)arrayListCollectionFactory {
  return RxInternalOperatorsOnSubscribeToMultimapTest_arrayListCollectionFactory();
}

+ (id<RxFunctionsFunc0>)multimapFactory {
  return RxInternalOperatorsOnSubscribeToMultimapTest_multimapFactory();
}

- (void)testToMultimapWithCollectionFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"cc", @"dd", @"eee", @"eee");
  id<RxFunctionsFunc1> collectionFactory = create_RxInternalOperatorsOnSubscribeToMultimapTest_$6_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:RxInternalOperatorsOnSubscribeToMultimapTest_multimapFactory() withRxFunctionsFunc1:collectionFactory];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:create_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"eee" } count:1 type:NSString_class_()]))];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMultimapWithError {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", @"cc", @"dd");
  id<RxFunctionsFunc1> lengthFuncErr = create_RxInternalOperatorsOnSubscribeToMultimapTest_$7_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFuncErr];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"a", @"b" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testToMultimapWithErrorInValueSelector {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", @"cc", @"dd");
  id<RxFunctionsFunc1> duplicateErr = create_RxInternalOperatorsOnSubscribeToMultimapTest_$8_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:duplicateErr];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"aa", @"bb" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cccc", @"dddd" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testToMultimapWithMapThrowingFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"a", @"b", @"cc", @"dd", @"eee", @"fff");
  id<RxFunctionsFunc0> mapFactory = create_RxInternalOperatorsOnSubscribeToMultimapTest_$9_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:mapFactory];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"eee", @"fff" } count:2 type:NSString_class_()])];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testToMultimapWithThrowingCollectionFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"cc", @"cc", @"eee", @"eee");
  id<RxFunctionsFunc1> collectionFactory = create_RxInternalOperatorsOnSubscribeToMultimapTest_$10_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMultimapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:RxInternalOperatorsOnSubscribeToMultimapTest_multimapFactory() withRxFunctionsFunc1:collectionFactory];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"cc", @"dd" } count:2 type:NSString_class_()])];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:JavaUtilCollections_singletonWithId_(@"eee")];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testKeySelectorThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$11_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testValueSelectorThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$12_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$13_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testMapFactoryThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$14_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$15_init() withRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeToMultimapTest_$16_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testCollectionFactoryThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$17_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$18_init() withRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeToMultimapTest_$19_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$20_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testKeySelectorFailureDoesNotAllowErrorAndCompletedEmissions {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_init()))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testKeySelectorFailureDoesNotAllowTwoErrorEmissions {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(list));
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
    JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
    JavaLangRuntimeException *e2 = create_JavaLangRuntimeException_init();
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(e2)))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [ts getOnErrorEvents]);
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e2 } count:1 type:JavaLangRuntimeException_class_()]), list);
    [ts assertNotCompleted];
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

- (void)testFactoryFailureDoesNotAllowErrorThenOnNextEmissions {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_init()))) toMultimapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testBackpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd"))) toMultimapWithRxFunctionsFunc1:lengthFunc_])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoErrors];
  [ts assertNotCompleted];
  [ts assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValueCountWithInt:1];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(objectObserver_);
  RELEASE_(lengthFunc_);
  RELEASE_(duplicate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x1a, -1, -1, -1, 4, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0x1a, -1, -1, -1, 5, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testToMultimap);
  methods[2].selector = @selector(testToMultimapWithValueSelector);
  methods[3].selector = @selector(testToMultimapWithMapFactory);
  methods[4].selector = @selector(arrayListCollectionFactory);
  methods[5].selector = @selector(multimapFactory);
  methods[6].selector = @selector(testToMultimapWithCollectionFactory);
  methods[7].selector = @selector(testToMultimapWithError);
  methods[8].selector = @selector(testToMultimapWithErrorInValueSelector);
  methods[9].selector = @selector(testToMultimapWithMapThrowingFactory);
  methods[10].selector = @selector(testToMultimapWithThrowingCollectionFactory);
  methods[11].selector = @selector(testKeySelectorThrows);
  methods[12].selector = @selector(testValueSelectorThrows);
  methods[13].selector = @selector(testMapFactoryThrows);
  methods[14].selector = @selector(testCollectionFactoryThrows);
  methods[15].selector = @selector(testKeySelectorFailureDoesNotAllowErrorAndCompletedEmissions);
  methods[16].selector = @selector(testKeySelectorFailureDoesNotAllowTwoErrorEmissions);
  methods[17].selector = @selector(testFactoryFailureDoesNotAllowErrorThenOnNextEmissions);
  methods[18].selector = @selector(testBackpressure);
  methods[19].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "objectObserver_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 19, 20 },
    { "lengthFunc_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 21, -1 },
    { "duplicate_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 22, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$3, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lrx/functions/Func1<TK;Ljava/util/Collection<TV;>;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lrx/functions/Func0<Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;", (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$10, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$11, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$12, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$13, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$14, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$15, (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$16, "Lrx/Observer<Ljava/lang/Object;>;", (void *)&RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$17, "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;", "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest = { "OnSubscribeToMultimapTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 20, 3, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest;
}

@end

id<RxFunctionsFunc1> RxInternalOperatorsOnSubscribeToMultimapTest_arrayListCollectionFactory() {
  RxInternalOperatorsOnSubscribeToMultimapTest_initialize();
  return create_RxInternalOperatorsOnSubscribeToMultimapTest_$4_init();
}

id<RxFunctionsFunc0> RxInternalOperatorsOnSubscribeToMultimapTest_multimapFactory() {
  RxInternalOperatorsOnSubscribeToMultimapTest_initialize();
  return create_RxInternalOperatorsOnSubscribeToMultimapTest_$5_init();
}

void RxInternalOperatorsOnSubscribeToMultimapTest_init(RxInternalOperatorsOnSubscribeToMultimapTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->lengthFunc_, new_RxInternalOperatorsOnSubscribeToMultimapTest_$1_init());
  JreStrongAssignAndConsume(&self->duplicate_, new_RxInternalOperatorsOnSubscribeToMultimapTest_$2_init());
}

RxInternalOperatorsOnSubscribeToMultimapTest *new_RxInternalOperatorsOnSubscribeToMultimapTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest *create_RxInternalOperatorsOnSubscribeToMultimapTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMultimapTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeToMultimapTest)

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$1

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$1_init(RxInternalOperatorsOnSubscribeToMultimapTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$1, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$2

- (NSString *)callWithId:(NSString *)t1 {
  return JreStrcat("$$", t1, t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$2_init(RxInternalOperatorsOnSubscribeToMultimapTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$2 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$2, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$2 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$3

- (id<JavaUtilMap>)call {
  return create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithMapFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$3_init(RxInternalOperatorsOnSubscribeToMultimapTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$3 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$3, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$3 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$3, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest {
  return [self size] > 2;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x4, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(removeEldestEntryWithJavaUtilMap_Entry:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "removeEldestEntry", "LJavaUtilMap_Entry;", "(Ljava/util/Map$Entry<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;)Z", "LRxInternalOperatorsOnSubscribeToMultimapTest_$3;", "call", "Ljava/util/LinkedHashMap<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *self) {
  JavaUtilLinkedHashMap_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$3_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$4

- (id<JavaUtilCollection>)callWithId:(id)k {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilCollection;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "(TK;)Ljava/util/Collection<TV;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "arrayListCollectionFactory", "Ljava/lang/Object;Lrx/functions/Func1<TK;Ljava/util/Collection<TV;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$4_init(RxInternalOperatorsOnSubscribeToMultimapTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$4 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$4, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$4 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$4, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$5

- (id<JavaUtilMap>)call {
  return create_JavaUtilHashMap_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "multimapFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$5_init(RxInternalOperatorsOnSubscribeToMultimapTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$5 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$5, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$5 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$5, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$6

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)t1 {
  if ([((JavaLangInteger *) nil_chk(t1)) intValue] == 2) {
    return create_JavaUtilArrayList_init();
  }
  else {
    return create_JavaUtilHashSet_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilCollection;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/util/Collection<Ljava/lang/String;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithCollectionFactory", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$6_init(RxInternalOperatorsOnSubscribeToMultimapTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$6 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$6, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$6 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$6, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$7

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  if ([@"b" isEqual:t1]) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced Failure");
  }
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$7_init(RxInternalOperatorsOnSubscribeToMultimapTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$7 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$7, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$7 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$8

- (NSString *)callWithId:(NSString *)t1 {
  if ([@"b" isEqual:t1]) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
  }
  return JreStrcat("$$", t1, t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithErrorInValueSelector", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$8_init(RxInternalOperatorsOnSubscribeToMultimapTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$8 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$8, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$8 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$8, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$9

- (id<JavaUtilMap>)call {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithMapThrowingFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$9_init(RxInternalOperatorsOnSubscribeToMultimapTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$9 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$9, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$9 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$9, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$10

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)t1 {
  if ([((JavaLangInteger *) nil_chk(t1)) intValue] == 2) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
  }
  else {
    return create_JavaUtilHashSet_init();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilCollection;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/util/Collection<Ljava/lang/String;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testToMultimapWithThrowingCollectionFactory", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$10 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$10;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$10_init(RxInternalOperatorsOnSubscribeToMultimapTest_$10 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$10 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$10_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$10, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$10 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$10, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$11

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$11;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$11_init(RxInternalOperatorsOnSubscribeToMultimapTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$11 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$11, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$11 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$11, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$12

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testValueSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$12;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$12_init(RxInternalOperatorsOnSubscribeToMultimapTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$12 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$12, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$12 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$12, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$13

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testValueSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$13;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$13_init(RxInternalOperatorsOnSubscribeToMultimapTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$13 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$13, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$13 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$13, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$14

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$14;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$14_init(RxInternalOperatorsOnSubscribeToMultimapTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$14 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$14, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$14 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$14, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$15

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$15;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$15_init(RxInternalOperatorsOnSubscribeToMultimapTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$15 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$15, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$15 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$15, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$16

- (id<JavaUtilMap>)call {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$16 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$16;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$16_init(RxInternalOperatorsOnSubscribeToMultimapTest_$16 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$16 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$16_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$16, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$16 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$16_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$16, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$17

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testCollectionFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$17 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$17;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$17_init(RxInternalOperatorsOnSubscribeToMultimapTest_$17 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$17 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$17_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$17, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$17 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$17, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$18

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testCollectionFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$18;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$18_init(RxInternalOperatorsOnSubscribeToMultimapTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$18 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$18, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$18 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$18, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$19

- (id<JavaUtilMap>)call {
  return create_JavaUtilHashMap_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testCollectionFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$19 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$19;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$19_init(RxInternalOperatorsOnSubscribeToMultimapTest_$19 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$19 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$19_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$19, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$19 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$19_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$19, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$20

- (id<JavaUtilCollection>)callWithId:(JavaLangInteger *)k {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilCollection;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/util/Collection<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testCollectionFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/util/Collection<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$20;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$20_init(RxInternalOperatorsOnSubscribeToMultimapTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$20 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$20, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$20 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$20, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$21

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorFailureDoesNotAllowErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$21 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$21;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$21_init(RxInternalOperatorsOnSubscribeToMultimapTest_$21 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$21 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$21_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$21, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$21 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$21, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest_$21;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$21_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$22

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorFailureDoesNotAllowErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$22;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$22 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$22 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$22, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$22 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$22_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$22, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$23

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$23 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$23;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeToMultimapTest_$23 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$23 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$23, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$23 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$23_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$23, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$24

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(self, sub)];
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e2_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$24 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$24;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$24 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$24, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$24 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$24, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onErrorWithNSException:this$0_->val$e2_];
  }
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24:(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *)outer$
                                                        withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeToMultimapTest_$24;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOnSubscribeToMultimapTest_$24;LRxSubscriber;", "(Lrx/internal/operators/OnSubscribeToMultimapTest$24;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest_$24;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *self, RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1, initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1_initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$24 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$24_$1, initWithRxInternalOperatorsOnSubscribeToMultimapTest_$24_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$25

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testKeySelectorFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$25 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$25;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$25 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$25 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$25, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$25 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$25_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$25, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$26

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMultimapTest_$26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testFactoryFailureDoesNotAllowErrorThenOnNextEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$26 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$26;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$26_init(RxInternalOperatorsOnSubscribeToMultimapTest_$26 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$26 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$26_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$26, init)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$26 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$26, init)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMultimapTest_$26;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$26_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMultimapTest_$27

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMultimapTest;", "testFactoryFailureDoesNotAllowErrorThenOnNextEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMultimapTest_$27 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMultimapTest_$27;
}

@end

void RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMultimapTest_$27 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMultimapTest_$27 *new_RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$27, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMultimapTest_$27 *create_RxInternalOperatorsOnSubscribeToMultimapTest_$27_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMultimapTest_$27, initWithJavaLangRuntimeException_, capture$0)
}
