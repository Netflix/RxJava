//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeToMapTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOnSubscribeToMapTest.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$14();

@interface RxInternalOperatorsOnSubscribeToMapTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$1_init(RxInternalOperatorsOnSubscribeToMapTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$1_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$2 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$2_init(RxInternalOperatorsOnSubscribeToMapTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$2 *new_RxInternalOperatorsOnSubscribeToMapTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$2 *create_RxInternalOperatorsOnSubscribeToMapTest_$2_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$3 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$3_init(RxInternalOperatorsOnSubscribeToMapTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$3 *new_RxInternalOperatorsOnSubscribeToMapTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$3 *create_RxInternalOperatorsOnSubscribeToMapTest_$3_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$4 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$4_init(RxInternalOperatorsOnSubscribeToMapTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$4 *new_RxInternalOperatorsOnSubscribeToMapTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$4 *create_RxInternalOperatorsOnSubscribeToMapTest_$4_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$5 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$5_init(RxInternalOperatorsOnSubscribeToMapTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$5 *new_RxInternalOperatorsOnSubscribeToMapTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$5 *create_RxInternalOperatorsOnSubscribeToMapTest_$5_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$5_$1 : JavaUtilLinkedHashMap

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$5_$1)

inline jlong RxInternalOperatorsOnSubscribeToMapTest_$5_$1_get_serialVersionUID();
#define RxInternalOperatorsOnSubscribeToMapTest_$5_$1_serialVersionUID -3296811238780863394LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOnSubscribeToMapTest_$5_$1, serialVersionUID, jlong)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init(RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$6 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$6_init(RxInternalOperatorsOnSubscribeToMapTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$6 *new_RxInternalOperatorsOnSubscribeToMapTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$6 *create_RxInternalOperatorsOnSubscribeToMapTest_$6_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$7 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$7_init(RxInternalOperatorsOnSubscribeToMapTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$7 *new_RxInternalOperatorsOnSubscribeToMapTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$7 *create_RxInternalOperatorsOnSubscribeToMapTest_$7_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$8 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$8_init(RxInternalOperatorsOnSubscribeToMapTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$8 *new_RxInternalOperatorsOnSubscribeToMapTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$8 *create_RxInternalOperatorsOnSubscribeToMapTest_$8_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$9 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$9_init(RxInternalOperatorsOnSubscribeToMapTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$9 *new_RxInternalOperatorsOnSubscribeToMapTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$9 *create_RxInternalOperatorsOnSubscribeToMapTest_$9_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$10 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$10)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$10_init(RxInternalOperatorsOnSubscribeToMapTest_$10 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$10 *new_RxInternalOperatorsOnSubscribeToMapTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$10 *create_RxInternalOperatorsOnSubscribeToMapTest_$10_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$11 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$11_init(RxInternalOperatorsOnSubscribeToMapTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$11 *new_RxInternalOperatorsOnSubscribeToMapTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$11 *create_RxInternalOperatorsOnSubscribeToMapTest_$11_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$12 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$12_init(RxInternalOperatorsOnSubscribeToMapTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$12 *new_RxInternalOperatorsOnSubscribeToMapTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$12 *create_RxInternalOperatorsOnSubscribeToMapTest_$12_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$13 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$13_init(RxInternalOperatorsOnSubscribeToMapTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$13 *new_RxInternalOperatorsOnSubscribeToMapTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$13 *create_RxInternalOperatorsOnSubscribeToMapTest_$13_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$14 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilMap>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$14_init(RxInternalOperatorsOnSubscribeToMapTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$14 *new_RxInternalOperatorsOnSubscribeToMapTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$14 *create_RxInternalOperatorsOnSubscribeToMapTest_$14_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$15 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$15_init(RxInternalOperatorsOnSubscribeToMapTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$15 *new_RxInternalOperatorsOnSubscribeToMapTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$15 *create_RxInternalOperatorsOnSubscribeToMapTest_$15_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$15_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$15_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$15_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$16 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$16, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$16 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$16 *new_RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$16 *create_RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$17 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$17, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeToMapTest_$17 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$17 *new_RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$17 *create_RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$18 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangRuntimeException *val$e2_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$18)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$18, val$e2_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$18 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$18 *new_RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$18 *create_RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$18_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOnSubscribeToMapTest_$18 *this$0_;
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOnSubscribeToMapTest_$18:(RxInternalOperatorsOnSubscribeToMapTest_$18 *)outer$
                                                   withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$18_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$18_$1, this$0_, RxInternalOperatorsOnSubscribeToMapTest_$18 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$18_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *self, RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$19 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$19)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$19, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$19 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$19 *new_RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$19 *create_RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$20 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$20_init(RxInternalOperatorsOnSubscribeToMapTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$20 *new_RxInternalOperatorsOnSubscribeToMapTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$20 *create_RxInternalOperatorsOnSubscribeToMapTest_$20_init();

@interface RxInternalOperatorsOnSubscribeToMapTest_$20_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$20_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$20_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOnSubscribeToMapTest_$21 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeToMapTest_$21)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeToMapTest_$21, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$21 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$21 *new_RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeToMapTest_$21 *create_RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@implementation RxInternalOperatorsOnSubscribeToMapTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testToMap {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFunc_];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:@"a"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"ccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMapWithValueSelector {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:duplicate_];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:@"aa"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bbbb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"cccccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddddddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMapWithError {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  id<RxFunctionsFunc1> lengthFuncErr = create_RxInternalOperatorsOnSubscribeToMapTest_$3_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFuncErr];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:@"a"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"ccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testToMapWithErrorInValueSelector {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  id<RxFunctionsFunc1> duplicateErr = create_RxInternalOperatorsOnSubscribeToMapTest_$4_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFunc_ withRxFunctionsFunc1:duplicateErr];
  id<JavaUtilMap> expected = create_JavaUtilHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(1) withId:@"aa"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bbbb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"cccccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddddddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testToMapWithFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  id<RxFunctionsFunc0> mapFactory = create_RxInternalOperatorsOnSubscribeToMapTest_$5_init();
  id<RxFunctionsFunc1> lengthFunc = create_RxInternalOperatorsOnSubscribeToMapTest_$6_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFunc withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:mapFactory];
  id<JavaUtilMap> expected = create_JavaUtilLinkedHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"ccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testToMapWithErrorThrowingFactory {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd");
  id<RxFunctionsFunc0> mapFactory = create_RxInternalOperatorsOnSubscribeToMapTest_$7_init();
  id<RxFunctionsFunc1> lengthFunc = create_RxInternalOperatorsOnSubscribeToMapTest_$8_init();
  RxObservable *mapped = [((RxObservable *) nil_chk(source)) toMapWithRxFunctionsFunc1:lengthFunc withRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity() withRxFunctionsFunc0:mapFactory];
  id<JavaUtilMap> expected = create_JavaUtilLinkedHashMap_init();
  [expected putWithId:JavaLangInteger_valueOfWithInt_(2) withId:@"bb"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(3) withId:@"ccc"];
  [expected putWithId:JavaLangInteger_valueOfWithInt_(4) withId:@"dddd"];
  [((RxObservable *) nil_chk(mapped)) subscribeWithRxObserver:objectObserver_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onNextWithId:expected];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(objectObserver_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testKeySelectorThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$9_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testValueSelectorThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$10_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$11_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testMapFactoryThrows {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$12_init() withRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$13_init() withRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeToMapTest_$14_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNoValues];
  [ts assertNotCompleted];
}

- (void)testFactoryFailureDoesNotAllowErrorAndCompletedEmissions {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMapTest_$15_init()))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testFactoryFailureDoesNotAllowTwoErrorEmissions {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(list));
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
    JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
    JavaLangRuntimeException *e2 = create_JavaLangRuntimeException_init();
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(e2)))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [ts getOnErrorEvents]);
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e2 } count:1 type:JavaLangRuntimeException_class_()]), list);
    [ts assertNotCompleted];
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

- (void)testFactoryFailureDoesNotAllowErrorThenOnNextEmissions {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeToMapTest_$20_init()))) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testBackpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_withId_(@"a", @"bb", @"ccc", @"dddd"))) toMapWithRxFunctionsFunc1:lengthFunc_])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoErrors];
  [ts assertNotCompleted];
  [ts assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValueCountWithInt:1];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(objectObserver_);
  RELEASE_(lengthFunc_);
  RELEASE_(duplicate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testToMap);
  methods[2].selector = @selector(testToMapWithValueSelector);
  methods[3].selector = @selector(testToMapWithError);
  methods[4].selector = @selector(testToMapWithErrorInValueSelector);
  methods[5].selector = @selector(testToMapWithFactory);
  methods[6].selector = @selector(testToMapWithErrorThrowingFactory);
  methods[7].selector = @selector(testKeySelectorThrows);
  methods[8].selector = @selector(testValueSelectorThrows);
  methods[9].selector = @selector(testMapFactoryThrows);
  methods[10].selector = @selector(testFactoryFailureDoesNotAllowErrorAndCompletedEmissions);
  methods[11].selector = @selector(testFactoryFailureDoesNotAllowTwoErrorEmissions);
  methods[12].selector = @selector(testFactoryFailureDoesNotAllowErrorThenOnNextEmissions);
  methods[13].selector = @selector(testBackpressure);
  methods[14].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "objectObserver_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 14, 15 },
    { "lengthFunc_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 16, -1 },
    { "duplicate_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$10, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$11, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$12, (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$13, "Lrx/Observer<Ljava/lang/Object;>;", (void *)&RxInternalOperatorsOnSubscribeToMapTest__Annotations$14, "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;", "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest = { "OnSubscribeToMapTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 15, 3, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_init(RxInternalOperatorsOnSubscribeToMapTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->lengthFunc_, new_RxInternalOperatorsOnSubscribeToMapTest_$1_init());
  JreStrongAssignAndConsume(&self->duplicate_, new_RxInternalOperatorsOnSubscribeToMapTest_$2_init());
}

RxInternalOperatorsOnSubscribeToMapTest *new_RxInternalOperatorsOnSubscribeToMapTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest, init)
}

RxInternalOperatorsOnSubscribeToMapTest *create_RxInternalOperatorsOnSubscribeToMapTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeToMapTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeToMapTest)

@implementation RxInternalOperatorsOnSubscribeToMapTest_$1

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$1_init(RxInternalOperatorsOnSubscribeToMapTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$1, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$2

- (NSString *)callWithId:(NSString *)t1 {
  return JreStrcat("$$", t1, t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$2_init(RxInternalOperatorsOnSubscribeToMapTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$2 *new_RxInternalOperatorsOnSubscribeToMapTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$2, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$2 *create_RxInternalOperatorsOnSubscribeToMapTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$3

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  if ([@"bb" isEqual:t1]) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced Failure");
  }
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$3_init(RxInternalOperatorsOnSubscribeToMapTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$3 *new_RxInternalOperatorsOnSubscribeToMapTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$3, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$3 *create_RxInternalOperatorsOnSubscribeToMapTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$3, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$4

- (NSString *)callWithId:(NSString *)t1 {
  if ([@"bb" isEqual:t1]) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
  }
  return JreStrcat("$$", t1, t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithErrorInValueSelector", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$4_init(RxInternalOperatorsOnSubscribeToMapTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$4 *new_RxInternalOperatorsOnSubscribeToMapTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$4, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$4 *create_RxInternalOperatorsOnSubscribeToMapTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$4, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$5

- (id<JavaUtilMap>)call {
  return create_RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$5_init(RxInternalOperatorsOnSubscribeToMapTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$5 *new_RxInternalOperatorsOnSubscribeToMapTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$5, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$5 *create_RxInternalOperatorsOnSubscribeToMapTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$5, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$5_$1

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest {
  return [self size] > 3;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x4, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(removeEldestEntryWithJavaUtilMap_Entry:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOnSubscribeToMapTest_$5_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "removeEldestEntry", "LJavaUtilMap_Entry;", "(Ljava/util/Map$Entry<Ljava/lang/Integer;Ljava/lang/String;>;)Z", "LRxInternalOperatorsOnSubscribeToMapTest_$5;", "call", "Ljava/util/LinkedHashMap<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$5_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init(RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *self) {
  JavaUtilLinkedHashMap_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$5_$1, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$5_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$5_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$5_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$6

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithFactory", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$6_init(RxInternalOperatorsOnSubscribeToMapTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$6 *new_RxInternalOperatorsOnSubscribeToMapTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$6, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$6 *create_RxInternalOperatorsOnSubscribeToMapTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$6, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$7

- (id<JavaUtilMap>)call {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithErrorThrowingFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$7_init(RxInternalOperatorsOnSubscribeToMapTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$7 *new_RxInternalOperatorsOnSubscribeToMapTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$7, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$7 *create_RxInternalOperatorsOnSubscribeToMapTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$8

- (JavaLangInteger *)callWithId:(NSString *)t1 {
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(t1)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testToMapWithErrorThrowingFactory", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$8_init(RxInternalOperatorsOnSubscribeToMapTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$8 *new_RxInternalOperatorsOnSubscribeToMapTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$8, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$8 *create_RxInternalOperatorsOnSubscribeToMapTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$8, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$9

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testKeySelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$9_init(RxInternalOperatorsOnSubscribeToMapTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$9 *new_RxInternalOperatorsOnSubscribeToMapTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$9, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$9 *create_RxInternalOperatorsOnSubscribeToMapTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$9, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$10

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testValueSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$10 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$10;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$10_init(RxInternalOperatorsOnSubscribeToMapTest_$10 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$10 *new_RxInternalOperatorsOnSubscribeToMapTest_$10_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$10, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$10 *create_RxInternalOperatorsOnSubscribeToMapTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$10, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$11

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testValueSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$11;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$11_init(RxInternalOperatorsOnSubscribeToMapTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$11 *new_RxInternalOperatorsOnSubscribeToMapTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$11, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$11 *create_RxInternalOperatorsOnSubscribeToMapTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$11, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$12

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$12;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$12_init(RxInternalOperatorsOnSubscribeToMapTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$12 *new_RxInternalOperatorsOnSubscribeToMapTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$12, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$12 *create_RxInternalOperatorsOnSubscribeToMapTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$12, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$13

- (JavaLangInteger *)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$13;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$13_init(RxInternalOperatorsOnSubscribeToMapTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$13 *new_RxInternalOperatorsOnSubscribeToMapTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$13, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$13 *create_RxInternalOperatorsOnSubscribeToMapTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$13, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$14

- (id<JavaUtilMap>)call {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testMapFactoryThrows", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$14;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$14_init(RxInternalOperatorsOnSubscribeToMapTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$14 *new_RxInternalOperatorsOnSubscribeToMapTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$14, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$14 *create_RxInternalOperatorsOnSubscribeToMapTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$14, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$15

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$15;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$15_init(RxInternalOperatorsOnSubscribeToMapTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$15 *new_RxInternalOperatorsOnSubscribeToMapTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$15, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$15 *create_RxInternalOperatorsOnSubscribeToMapTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$15, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$15_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMapTest_$15;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$15_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$15_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$15_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$15_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$15_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$15_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$16

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$16;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$16 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$16 *new_RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$16, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$16 *create_RxInternalOperatorsOnSubscribeToMapTest_$16_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$16, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$17

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$17;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeToMapTest_$17 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$17 *new_RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$17, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$17 *create_RxInternalOperatorsOnSubscribeToMapTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$17, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$18

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(self, sub)];
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e2_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$18 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$18;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$18 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$18 *new_RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$18, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$18 *create_RxInternalOperatorsOnSubscribeToMapTest_$18_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$18, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$18_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onErrorWithNSException:this$0_->val$e2_];
  }
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeToMapTest_$18:(RxInternalOperatorsOnSubscribeToMapTest_$18 *)outer$
                                                   withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeToMapTest_$18:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeToMapTest_$18;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOnSubscribeToMapTest_$18;LRxSubscriber;", "(Lrx/internal/operators/OnSubscribeToMapTest$18;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMapTest_$18;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$18_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$18_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *self, RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$18_$1, initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$18_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$18_$1_initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$18 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$18_$1, initWithRxInternalOperatorsOnSubscribeToMapTest_$18_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$19

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$19;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$19 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$19 *new_RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$19, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$19 *create_RxInternalOperatorsOnSubscribeToMapTest_$19_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$19, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$20

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeToMapTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowErrorThenOnNextEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$20;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$20_init(RxInternalOperatorsOnSubscribeToMapTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$20 *new_RxInternalOperatorsOnSubscribeToMapTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$20, init)
}

RxInternalOperatorsOnSubscribeToMapTest_$20 *create_RxInternalOperatorsOnSubscribeToMapTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$20, init)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$20_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeToMapTest_$20;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$20_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$20_$1;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *new_RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$20_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$20_$1 *create_RxInternalOperatorsOnSubscribeToMapTest_$20_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$20_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeToMapTest_$21

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeToMapTest;", "testFactoryFailureDoesNotAllowErrorThenOnNextEmissions", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeToMapTest_$21 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeToMapTest_$21;
}

@end

void RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeToMapTest_$21 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeToMapTest_$21 *new_RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$21, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeToMapTest_$21 *create_RxInternalOperatorsOnSubscribeToMapTest_$21_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeToMapTest_$21, initWithJavaLangRuntimeException_, capture$0)
}
