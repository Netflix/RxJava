//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorScanTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOperatorScanTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxProducer.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$16();

@interface RxInternalOperatorsOperatorScanTest_InnerProducer () {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *requested_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_InnerProducer, requested_, JavaUtilConcurrentAtomicAtomicBoolean *)

@interface RxInternalOperatorsOperatorScanTest_$1 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$1_init(RxInternalOperatorsOperatorScanTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$1 *new_RxInternalOperatorsOperatorScanTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$1 *create_RxInternalOperatorsOperatorScanTest_$1_init();

@interface RxInternalOperatorsOperatorScanTest_$2 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$2_init(RxInternalOperatorsOperatorScanTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$2 *new_RxInternalOperatorsOperatorScanTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$2 *create_RxInternalOperatorsOperatorScanTest_$2_init();

@interface RxInternalOperatorsOperatorScanTest_$3 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$3_init(RxInternalOperatorsOperatorScanTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$3 *new_RxInternalOperatorsOperatorScanTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$3 *create_RxInternalOperatorsOperatorScanTest_$3_init();

@interface RxInternalOperatorsOperatorScanTest_$4 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$4_init(RxInternalOperatorsOperatorScanTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$4 *new_RxInternalOperatorsOperatorScanTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$4 *create_RxInternalOperatorsOperatorScanTest_$4_init();

@interface RxInternalOperatorsOperatorScanTest_$5 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$5_init(RxInternalOperatorsOperatorScanTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$5 *new_RxInternalOperatorsOperatorScanTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$5 *create_RxInternalOperatorsOperatorScanTest_$5_init();

@interface RxInternalOperatorsOperatorScanTest_$6 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$6_init(RxInternalOperatorsOperatorScanTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$6 *new_RxInternalOperatorsOperatorScanTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$6 *create_RxInternalOperatorsOperatorScanTest_$6_init();

@interface RxInternalOperatorsOperatorScanTest_$7 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$count_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_$7, val$count_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$7 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$7 *new_RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$7 *create_RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorScanTest_$8 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$8_init(RxInternalOperatorsOperatorScanTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$8 *new_RxInternalOperatorsOperatorScanTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$8 *create_RxInternalOperatorsOperatorScanTest_$8_init();

@interface RxInternalOperatorsOperatorScanTest_$9 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$count_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_$9, val$count_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$9 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$9 *new_RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$9 *create_RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorScanTest_$10 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$10)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$10_init(RxInternalOperatorsOperatorScanTest_$10 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$10 *new_RxInternalOperatorsOperatorScanTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$10 *create_RxInternalOperatorsOperatorScanTest_$10_init();

@interface RxInternalOperatorsOperatorScanTest_$11 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$count_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$11)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_$11, val$count_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$11 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$11 *new_RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$11 *create_RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorScanTest_$12 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilList>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$12_init(RxInternalOperatorsOperatorScanTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$12 *new_RxInternalOperatorsOperatorScanTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$12 *create_RxInternalOperatorsOperatorScanTest_$12_init();

@interface RxInternalOperatorsOperatorScanTest_$13 : NSObject < RxFunctionsAction2 >

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$13_init(RxInternalOperatorsOperatorScanTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$13 *new_RxInternalOperatorsOperatorScanTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$13 *create_RxInternalOperatorsOperatorScanTest_$13_init();

@interface RxInternalOperatorsOperatorScanTest_$14 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$14_init(RxInternalOperatorsOperatorScanTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$14 *new_RxInternalOperatorsOperatorScanTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$14 *create_RxInternalOperatorsOperatorScanTest_$14_init();

@interface RxInternalOperatorsOperatorScanTest_$15 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$producer_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_$15, val$producer_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorScanTest_$15 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$15 *new_RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$15 *create_RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface RxInternalOperatorsOperatorScanTest_$16 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$16)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$16_init(RxInternalOperatorsOperatorScanTest_$16 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$16 *new_RxInternalOperatorsOperatorScanTest_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$16 *create_RxInternalOperatorsOperatorScanTest_$16_init();

@interface RxInternalOperatorsOperatorScanTest_$17 : RxObserversTestSubscriber

- (void)onStart;

- (void)onNextWithId:(JavaLangInteger *)integer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$17)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$17_init(RxInternalOperatorsOperatorScanTest_$17 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$17 *new_RxInternalOperatorsOperatorScanTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$17 *create_RxInternalOperatorsOperatorScanTest_$17_init();

@interface RxInternalOperatorsOperatorScanTest_$18 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$18_init(RxInternalOperatorsOperatorScanTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$18 *new_RxInternalOperatorsOperatorScanTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$18 *create_RxInternalOperatorsOperatorScanTest_$18_init();

@interface RxInternalOperatorsOperatorScanTest_$19 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$19)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$19_init(RxInternalOperatorsOperatorScanTest_$19 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$19 *new_RxInternalOperatorsOperatorScanTest_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$19 *create_RxInternalOperatorsOperatorScanTest_$19_init();

@interface RxInternalOperatorsOperatorScanTest_$19_$1 : NSObject < RxProducer >

- (void)requestWithLong:(jlong)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$19_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$19_$1_init(RxInternalOperatorsOperatorScanTest_$19_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$19_$1 *new_RxInternalOperatorsOperatorScanTest_$19_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$19_$1 *create_RxInternalOperatorsOperatorScanTest_$19_$1_init();

@interface RxInternalOperatorsOperatorScanTest_$20 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$20_init(RxInternalOperatorsOperatorScanTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$20 *new_RxInternalOperatorsOperatorScanTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$20 *create_RxInternalOperatorsOperatorScanTest_$20_init();

@interface RxInternalOperatorsOperatorScanTest_$21 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$21)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$21_init(RxInternalOperatorsOperatorScanTest_$21 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$21 *new_RxInternalOperatorsOperatorScanTest_$21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$21 *create_RxInternalOperatorsOperatorScanTest_$21_init();

@interface RxInternalOperatorsOperatorScanTest_$22 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$22)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$22_init(RxInternalOperatorsOperatorScanTest_$22 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$22 *new_RxInternalOperatorsOperatorScanTest_$22_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$22 *create_RxInternalOperatorsOperatorScanTest_$22_init();

@interface RxInternalOperatorsOperatorScanTest_$23 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$23)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$23_init(RxInternalOperatorsOperatorScanTest_$23 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$23 *new_RxInternalOperatorsOperatorScanTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$23 *create_RxInternalOperatorsOperatorScanTest_$23_init();

@interface RxInternalOperatorsOperatorScanTest_$24 : RxObserversTestSubscriber {
 @public
  jint count_;
}

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$24)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$24_init(RxInternalOperatorsOperatorScanTest_$24 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$24 *new_RxInternalOperatorsOperatorScanTest_$24_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$24 *create_RxInternalOperatorsOperatorScanTest_$24_init();

@interface RxInternalOperatorsOperatorScanTest_$25 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$requests_;
}

- (void)callWithId:(JavaLangLong *)n;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$25)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScanTest_$25, val$requests_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(RxInternalOperatorsOperatorScanTest_$25 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$25 *new_RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$25 *create_RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorScanTest_$26 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScanTest_$26)

__attribute__((unused)) static void RxInternalOperatorsOperatorScanTest_$26_init(RxInternalOperatorsOperatorScanTest_$26 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$26 *new_RxInternalOperatorsOperatorScanTest_$26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScanTest_$26 *create_RxInternalOperatorsOperatorScanTest_$26_init();

@implementation RxInternalOperatorsOperatorScanTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testScanIntegersWithInitialValue {
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *observable = RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3));
  RxObservable *m = [((RxObservable *) nil_chk(observable)) scanWithId:@"" withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$1_init()];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@""];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"1"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"12"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"123"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(4)))) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testScanIntegersWithoutInitialValue {
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *observable = RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3));
  RxObservable *m = [((RxObservable *) nil_chk(observable)) scanWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$2_init()];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(6)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(3)))) onNextWithId:JavaLangInteger_valueOfWithInt_(OrgMockitoMatchers_anyInt())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testScanIntegersWithoutInitialValueAndOnlyOneValue {
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *observable = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  RxObservable *m = [((RxObservable *) nil_chk(observable)) scanWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$3_init()];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(OrgMockitoMatchers_anyInt())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)shouldNotEmitUntilAfterSubscription {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$4_init()])) filterWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorScanTest_$5_init()])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(100, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testBackpressureWithInitialValue {
  JavaUtilConcurrentAtomicAtomicInteger *count = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$6_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(count)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(10, [count get]);
}

- (void)testBackpressureWithoutInitialValue {
  JavaUtilConcurrentAtomicAtomicInteger *count = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) scanWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$8_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(count)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(10, [count get]);
}

- (void)testNoBackpressureWithInitialValue {
  JavaUtilConcurrentAtomicAtomicInteger *count = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$10_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(count)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(101, [count get]);
}

- (void)testSeedFactory {
  RxObservable *o = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOperatorScanTest_$12_init() withRxFunctionsAction2:create_RxInternalOperatorsOperatorScanTest_$13_init()])) takeLastWithInt:1];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:10 type:JavaLangInteger_class_()]), [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(o)) toBlocking])) single]);
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:10 type:JavaLangInteger_class_()]), [((RxObservablesBlockingObservable *) nil_chk([o toBlocking])) single]);
}

- (void)testScanWithRequestOne {
  RxObservable *o = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$14_init()])) takeWithInt:1];
  RxObserversTestSubscriber *subscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:subscriber];
  [subscriber assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0) } count:1 type:JavaLangInteger_class_()])];
  [subscriber assertTerminalEvent];
  [subscriber assertNoErrors];
}

- (void)testScanShouldNotRequestZero {
  JavaUtilConcurrentAtomicAtomicReference *producer = create_JavaUtilConcurrentAtomicAtomicReference_init();
  RxObservable *o = [((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(producer)))) scanWithId:JavaLangInteger_valueOfWithInt_(100) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$16_init()];
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorScanTest_$17_init()];
  [((id<RxProducer>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_([producer get], OrgMockitoMockito_never()))) requestWithLong:0];
  [((id<RxProducer>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_([producer get], OrgMockitoMockito_timesWithInt_(2)))) requestWithLong:1];
}

- (void)testInitialValueEmittedNoProducer {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$18_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoErrors];
  [ts assertNotCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(0)];
}

- (void)testInitialValueEmittedWithProducer {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorScanTest_$19_init());
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$20_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoErrors];
  [ts assertNotCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(0)];
}

- (void)testInitialValueNull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10))) scanWithId:nil withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$21_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ nil, JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(15), JavaLangInteger_valueOfWithInt_(21), JavaLangInteger_valueOfWithInt_(28), JavaLangInteger_valueOfWithInt_(36), JavaLangInteger_valueOfWithInt_(45), JavaLangInteger_valueOfWithInt_(55) } count:11 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)testEverythingIsNull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 6))) scanWithId:nil withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$22_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ nil, nil, nil, nil, nil, nil, nil } count:7 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)testUnboundedSource {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, JavaLangInteger_MAX_VALUE))) scanWithId:JavaLangInteger_valueOfWithInt_(0) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$23_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorScanTest_$24_init()];
}

- (void)scanShouldPassUpstreamARequestForMaxValue {
  id<JavaUtilList> requests = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) doOnRequestWithRxFunctionsAction1:create_RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(requests)])) scanWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorScanTest_$26_init()])) count])) subscribe];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(JavaLangLong_MAX_VALUE) } count:1 type:JavaLangLong_class_()]), requests);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testScanIntegersWithInitialValue);
  methods[2].selector = @selector(testScanIntegersWithoutInitialValue);
  methods[3].selector = @selector(testScanIntegersWithoutInitialValueAndOnlyOneValue);
  methods[4].selector = @selector(shouldNotEmitUntilAfterSubscription);
  methods[5].selector = @selector(testBackpressureWithInitialValue);
  methods[6].selector = @selector(testBackpressureWithoutInitialValue);
  methods[7].selector = @selector(testNoBackpressureWithInitialValue);
  methods[8].selector = @selector(testSeedFactory);
  methods[9].selector = @selector(testScanWithRequestOne);
  methods[10].selector = @selector(testScanShouldNotRequestZero);
  methods[11].selector = @selector(testInitialValueEmittedNoProducer);
  methods[12].selector = @selector(testInitialValueEmittedWithProducer);
  methods[13].selector = @selector(testInitialValueNull);
  methods[14].selector = @selector(testEverythingIsNull);
  methods[15].selector = @selector(testUnboundedSource);
  methods[16].selector = @selector(scanShouldPassUpstreamARequestForMaxValue);
  methods[17].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorScanTest__Annotations$0, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$1, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$2, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$3, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$4, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$5, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$6, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$7, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$8, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$9, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$10, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$11, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$12, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$13, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$14, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$15, (void *)&RxInternalOperatorsOperatorScanTest__Annotations$16, "LRxInternalOperatorsOperatorScanTest_InnerProducer;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest = { "OperatorScanTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 18, 0, -1, 17, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorScanTest;
}

@end

void RxInternalOperatorsOperatorScanTest_init(RxInternalOperatorsOperatorScanTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest *new_RxInternalOperatorsOperatorScanTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest, init)
}

RxInternalOperatorsOperatorScanTest *create_RxInternalOperatorsOperatorScanTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorScanTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScanTest)

@implementation RxInternalOperatorsOperatorScanTest_InnerProducer

- (instancetype)initWithRxSubscriber:(RxSubscriber *)subscriber {
  RxInternalOperatorsOperatorScanTest_InnerProducer_initWithRxSubscriber_(self, subscriber);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(requested_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriber *) nil_chk(subscriber_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  }
  else {
    [((RxSubscriber *) nil_chk(subscriber_)) onCompleted];
  }
}

- (void)dealloc {
  RELEASE_(subscriber_);
  RELEASE_(requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
    { "requested_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "request", "J", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorScanTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_InnerProducer = { "InnerProducer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x9, 2, 2, 5, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorScanTest_InnerProducer;
}

@end

void RxInternalOperatorsOperatorScanTest_InnerProducer_initWithRxSubscriber_(RxInternalOperatorsOperatorScanTest_InnerProducer *self, RxSubscriber *subscriber) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->requested_, new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false));
  JreStrongAssign(&self->subscriber_, subscriber);
}

RxInternalOperatorsOperatorScanTest_InnerProducer *new_RxInternalOperatorsOperatorScanTest_InnerProducer_initWithRxSubscriber_(RxSubscriber *subscriber) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_InnerProducer, initWithRxSubscriber_, subscriber)
}

RxInternalOperatorsOperatorScanTest_InnerProducer *create_RxInternalOperatorsOperatorScanTest_InnerProducer_initWithRxSubscriber_(RxSubscriber *subscriber) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_InnerProducer, initWithRxSubscriber_, subscriber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScanTest_InnerProducer)

@implementation RxInternalOperatorsOperatorScanTest_$1

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)n {
  return JreStrcat("$$", s, [((JavaLangInteger *) nil_chk(n)) description]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testScanIntegersWithInitialValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$1;
}

@end

void RxInternalOperatorsOperatorScanTest_$1_init(RxInternalOperatorsOperatorScanTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$1 *new_RxInternalOperatorsOperatorScanTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$1, init)
}

RxInternalOperatorsOperatorScanTest_$1 *create_RxInternalOperatorsOperatorScanTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$1, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$2

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testScanIntegersWithoutInitialValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$2;
}

@end

void RxInternalOperatorsOperatorScanTest_$2_init(RxInternalOperatorsOperatorScanTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$2 *new_RxInternalOperatorsOperatorScanTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$2, init)
}

RxInternalOperatorsOperatorScanTest_$2 *create_RxInternalOperatorsOperatorScanTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$2, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$3

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testScanIntegersWithoutInitialValueAndOnlyOneValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$3;
}

@end

void RxInternalOperatorsOperatorScanTest_$3_init(RxInternalOperatorsOperatorScanTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$3 *new_RxInternalOperatorsOperatorScanTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$3, init)
}

RxInternalOperatorsOperatorScanTest_$3 *create_RxInternalOperatorsOperatorScanTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$3, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$4

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "shouldNotEmitUntilAfterSubscription", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$4;
}

@end

void RxInternalOperatorsOperatorScanTest_$4_init(RxInternalOperatorsOperatorScanTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$4 *new_RxInternalOperatorsOperatorScanTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$4, init)
}

RxInternalOperatorsOperatorScanTest_$4 *create_RxInternalOperatorsOperatorScanTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$4, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$5

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(t1)) intValue] > 0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "shouldNotEmitUntilAfterSubscription", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$5;
}

@end

void RxInternalOperatorsOperatorScanTest_$5_init(RxInternalOperatorsOperatorScanTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$5 *new_RxInternalOperatorsOperatorScanTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$5, init)
}

RxInternalOperatorsOperatorScanTest_$5 *create_RxInternalOperatorsOperatorScanTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$5, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$6

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testBackpressureWithInitialValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$6;
}

@end

void RxInternalOperatorsOperatorScanTest_$6_init(RxInternalOperatorsOperatorScanTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$6 *new_RxInternalOperatorsOperatorScanTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$6, init)
}

RxInternalOperatorsOperatorScanTest_$6 *create_RxInternalOperatorsOperatorScanTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$6, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$7

- (void)onStart {
  [self requestWithLong:10];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  OrgJunitAssert_failWithNSString_([((NSException *) nil_chk(e)) getMessage]);
  [e printStackTrace];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$count_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorScanTest_$7 class]);
  RELEASE_(val$count_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$count_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorScanTest;", "testBackpressureWithInitialValue", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$7;
}

@end

void RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$7 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$count_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorScanTest_$7 *new_RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$7, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorScanTest_$7 *create_RxInternalOperatorsOperatorScanTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$7, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorScanTest_$8

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testBackpressureWithoutInitialValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$8;
}

@end

void RxInternalOperatorsOperatorScanTest_$8_init(RxInternalOperatorsOperatorScanTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$8 *new_RxInternalOperatorsOperatorScanTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$8, init)
}

RxInternalOperatorsOperatorScanTest_$8 *create_RxInternalOperatorsOperatorScanTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$8, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$9

- (void)onStart {
  [self requestWithLong:10];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  OrgJunitAssert_failWithNSString_([((NSException *) nil_chk(e)) getMessage]);
  [e printStackTrace];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$count_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorScanTest_$9 class]);
  RELEASE_(val$count_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$count_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorScanTest;", "testBackpressureWithoutInitialValue", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$9;
}

@end

void RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$9 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$count_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorScanTest_$9 *new_RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$9, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorScanTest_$9 *create_RxInternalOperatorsOperatorScanTest_$9_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$9, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorScanTest_$10

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testNoBackpressureWithInitialValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$10 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$10;
}

@end

void RxInternalOperatorsOperatorScanTest_$10_init(RxInternalOperatorsOperatorScanTest_$10 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$10 *new_RxInternalOperatorsOperatorScanTest_$10_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$10, init)
}

RxInternalOperatorsOperatorScanTest_$10 *create_RxInternalOperatorsOperatorScanTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$10, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$11

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  OrgJunitAssert_failWithNSString_([((NSException *) nil_chk(e)) getMessage]);
  [e printStackTrace];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$count_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorScanTest_$11 class]);
  RELEASE_(val$count_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$count_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorScanTest;", "testNoBackpressureWithInitialValue", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$11 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$11;
}

@end

void RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorScanTest_$11 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$count_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorScanTest_$11 *new_RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$11, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorScanTest_$11 *create_RxInternalOperatorsOperatorScanTest_$11_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$11, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorScanTest_$12

- (id<JavaUtilList>)call {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorScanTest;", "testSeedFactory", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$12;
}

@end

void RxInternalOperatorsOperatorScanTest_$12_init(RxInternalOperatorsOperatorScanTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$12 *new_RxInternalOperatorsOperatorScanTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$12, init)
}

RxInternalOperatorsOperatorScanTest_$12 *create_RxInternalOperatorsOperatorScanTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$12, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$13

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t2 {
  [((id<JavaUtilList>) nil_chk(list)) addWithId:t2];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LRxInternalOperatorsOperatorScanTest;", "testSeedFactory", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$13;
}

@end

void RxInternalOperatorsOperatorScanTest_$13_init(RxInternalOperatorsOperatorScanTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$13 *new_RxInternalOperatorsOperatorScanTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$13, init)
}

RxInternalOperatorsOperatorScanTest_$13 *create_RxInternalOperatorsOperatorScanTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$13, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$14

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testScanWithRequestOne", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$14;
}

@end

void RxInternalOperatorsOperatorScanTest_$14_init(RxInternalOperatorsOperatorScanTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$14 *new_RxInternalOperatorsOperatorScanTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$14, init)
}

RxInternalOperatorsOperatorScanTest_$14 *create_RxInternalOperatorsOperatorScanTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$14, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$15

- (void)callWithId:(RxSubscriber *)subscriber {
  id<RxProducer> p = OrgMockitoMockito_spyWithId_(create_RxInternalOperatorsOperatorScanTest_InnerProducer_initWithRxSubscriber_(subscriber));
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$producer_)) setWithId:p];
  [((RxSubscriber *) nil_chk(subscriber)) setProducerWithRxProducer:p];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$producer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$producer_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Lrx/Producer;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/Producer;>;", "LRxInternalOperatorsOperatorScanTest;", "testScanShouldNotRequestZero", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$15;
}

@end

void RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorScanTest_$15 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$producer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$15 *new_RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$15, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorScanTest_$15 *create_RxInternalOperatorsOperatorScanTest_$15_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$15, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation RxInternalOperatorsOperatorScanTest_$16

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testScanShouldNotRequestZero", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$16 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$16;
}

@end

void RxInternalOperatorsOperatorScanTest_$16_init(RxInternalOperatorsOperatorScanTest_$16 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$16 *new_RxInternalOperatorsOperatorScanTest_$16_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$16, init)
}

RxInternalOperatorsOperatorScanTest_$16 *create_RxInternalOperatorsOperatorScanTest_$16_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$16, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$17

- (void)onStart {
  [self requestWithLong:1];
}

- (void)onNextWithId:(JavaLangInteger *)integer {
  [self requestWithLong:1];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorScanTest_$17 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onNextWithId:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOperatorScanTest;", "testScanShouldNotRequestZero", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$17 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 3, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$17;
}

@end

void RxInternalOperatorsOperatorScanTest_$17_init(RxInternalOperatorsOperatorScanTest_$17 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorScanTest_$17 *new_RxInternalOperatorsOperatorScanTest_$17_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$17, init)
}

RxInternalOperatorsOperatorScanTest_$17 *create_RxInternalOperatorsOperatorScanTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$17, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$18

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testInitialValueEmittedNoProducer", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$18;
}

@end

void RxInternalOperatorsOperatorScanTest_$18_init(RxInternalOperatorsOperatorScanTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$18 *new_RxInternalOperatorsOperatorScanTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$18, init)
}

RxInternalOperatorsOperatorScanTest_$18 *create_RxInternalOperatorsOperatorScanTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$18, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$19

- (void)callWithId:(RxSubscriber *)t {
  [((RxSubscriber *) nil_chk(t)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorScanTest_$19_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorScanTest;", "testInitialValueEmittedWithProducer", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$19 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$19;
}

@end

void RxInternalOperatorsOperatorScanTest_$19_init(RxInternalOperatorsOperatorScanTest_$19 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$19 *new_RxInternalOperatorsOperatorScanTest_$19_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$19, init)
}

RxInternalOperatorsOperatorScanTest_$19 *create_RxInternalOperatorsOperatorScanTest_$19_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$19, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$19_$1

- (void)requestWithLong:(jlong)n {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$19_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorScanTest_$19;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$19_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$19_$1;
}

@end

void RxInternalOperatorsOperatorScanTest_$19_$1_init(RxInternalOperatorsOperatorScanTest_$19_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$19_$1 *new_RxInternalOperatorsOperatorScanTest_$19_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$19_$1, init)
}

RxInternalOperatorsOperatorScanTest_$19_$1 *create_RxInternalOperatorsOperatorScanTest_$19_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$19_$1, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$20

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testInitialValueEmittedWithProducer", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$20;
}

@end

void RxInternalOperatorsOperatorScanTest_$20_init(RxInternalOperatorsOperatorScanTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$20 *new_RxInternalOperatorsOperatorScanTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$20, init)
}

RxInternalOperatorsOperatorScanTest_$20 *create_RxInternalOperatorsOperatorScanTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$20, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$21

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  if (t1 == nil) {
    return t2;
  }
  return JavaLangInteger_valueOfWithInt_([t1 intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testInitialValueNull", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$21 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$21;
}

@end

void RxInternalOperatorsOperatorScanTest_$21_init(RxInternalOperatorsOperatorScanTest_$21 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$21 *new_RxInternalOperatorsOperatorScanTest_$21_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$21, init)
}

RxInternalOperatorsOperatorScanTest_$21 *create_RxInternalOperatorsOperatorScanTest_$21_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$21, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$22

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return nil;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$22_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testEverythingIsNull", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$22 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$22;
}

@end

void RxInternalOperatorsOperatorScanTest_$22_init(RxInternalOperatorsOperatorScanTest_$22 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$22 *new_RxInternalOperatorsOperatorScanTest_$22_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$22, init)
}

RxInternalOperatorsOperatorScanTest_$22 *create_RxInternalOperatorsOperatorScanTest_$22_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$22, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$23

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b {
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "testUnboundedSource", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$23 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$23;
}

@end

void RxInternalOperatorsOperatorScanTest_$23_init(RxInternalOperatorsOperatorScanTest_$23 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$23 *new_RxInternalOperatorsOperatorScanTest_$23_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$23, init)
}

RxInternalOperatorsOperatorScanTest_$23 *create_RxInternalOperatorsOperatorScanTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$23, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$24

- (void)onNextWithId:(JavaLangInteger *)t {
  if (++count_ == 2) {
    [self unsubscribe];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorScanTest_$24 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOperatorScanTest;", "testUnboundedSource", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$24 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$24;
}

@end

void RxInternalOperatorsOperatorScanTest_$24_init(RxInternalOperatorsOperatorScanTest_$24 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorScanTest_$24 *new_RxInternalOperatorsOperatorScanTest_$24_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$24, init)
}

RxInternalOperatorsOperatorScanTest_$24 *create_RxInternalOperatorsOperatorScanTest_$24_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$24, init)
}

@implementation RxInternalOperatorsOperatorScanTest_$25

- (void)callWithId:(JavaLangLong *)n {
  [((id<JavaUtilList>) nil_chk(val$requests_)) addWithId:n];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "Ljava/util/List<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorScanTest;", "scanShouldPassUpstreamARequestForMaxValue", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$25 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$25;
}

@end

void RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(RxInternalOperatorsOperatorScanTest_$25 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$requests_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$25 *new_RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$25, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorScanTest_$25 *create_RxInternalOperatorsOperatorScanTest_$25_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$25, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorScanTest_$26

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorScanTest_$26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorScanTest;", "scanShouldPassUpstreamARequestForMaxValue", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScanTest_$26 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorScanTest_$26;
}

@end

void RxInternalOperatorsOperatorScanTest_$26_init(RxInternalOperatorsOperatorScanTest_$26 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorScanTest_$26 *new_RxInternalOperatorsOperatorScanTest_$26_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScanTest_$26, init)
}

RxInternalOperatorsOperatorScanTest_$26 *create_RxInternalOperatorsOperatorScanTest_$26_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScanTest_$26, init)
}
