//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/GroupByTests.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxEventStream.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc1.h"
#include "RxGroupByTests.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObservablesGroupedObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Map.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxGroupByTests__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxGroupByTests__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxGroupByTests__Annotations$2();

@interface RxGroupByTests_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxEventStream_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$1)

__attribute__((unused)) static void RxGroupByTests_$1_init(RxGroupByTests_$1 *self);

__attribute__((unused)) static RxGroupByTests_$1 *new_RxGroupByTests_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$1 *create_RxGroupByTests_$1_init();

@interface RxGroupByTests_$2 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$2)

__attribute__((unused)) static void RxGroupByTests_$2_init(RxGroupByTests_$2 *self);

__attribute__((unused)) static RxGroupByTests_$2 *new_RxGroupByTests_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$2 *create_RxGroupByTests_$2_init();

@interface RxGroupByTests_$3 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxEventStream_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$3)

__attribute__((unused)) static void RxGroupByTests_$3_init(RxGroupByTests_$3 *self);

__attribute__((unused)) static RxGroupByTests_$3 *new_RxGroupByTests_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$3 *create_RxGroupByTests_$3_init();

@interface RxGroupByTests_$4 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$4)

__attribute__((unused)) static void RxGroupByTests_$4_init(RxGroupByTests_$4 *self);

__attribute__((unused)) static RxGroupByTests_$4 *new_RxGroupByTests_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$4 *create_RxGroupByTests_$4_init();

@interface RxGroupByTests_$4_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxEventStream_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$4_$1)

__attribute__((unused)) static void RxGroupByTests_$4_$1_init(RxGroupByTests_$4_$1 *self);

__attribute__((unused)) static RxGroupByTests_$4_$1 *new_RxGroupByTests_$4_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$4_$1 *create_RxGroupByTests_$4_$1_init();

@interface RxGroupByTests_$5 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(NSString *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$5)

__attribute__((unused)) static void RxGroupByTests_$5_init(RxGroupByTests_$5 *self);

__attribute__((unused)) static RxGroupByTests_$5 *new_RxGroupByTests_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$5 *create_RxGroupByTests_$5_init();

@interface RxGroupByTests_$6 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$6)

__attribute__((unused)) static void RxGroupByTests_$6_init(RxGroupByTests_$6 *self);

__attribute__((unused)) static RxGroupByTests_$6 *new_RxGroupByTests_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$6 *create_RxGroupByTests_$6_init();

@interface RxGroupByTests_$7 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxGroupByTests_$7)

__attribute__((unused)) static void RxGroupByTests_$7_init(RxGroupByTests_$7 *self);

__attribute__((unused)) static RxGroupByTests_$7 *new_RxGroupByTests_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxGroupByTests_$7 *create_RxGroupByTests_$7_init();

@implementation RxGroupByTests

- (void)testTakeUnsubscribesOnGroupBy {
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_mergeWithRxObservable_withRxObservable_(RxEventStream_getEventStreamWithNSString_withInt_(@"HTTP-ClusterA", 50), RxEventStream_getEventStreamWithNSString_withInt_(@"HTTP-ClusterB", 20)))) groupByWithRxFunctionsFunc1:create_RxGroupByTests_$1_init()])) takeWithInt:1])) toBlocking])) forEachWithRxFunctionsAction1:create_RxGroupByTests_$2_init()];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"**** finished"];
}

- (void)testTakeUnsubscribesOnFlatMapOfGroupBy {
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_mergeWithRxObservable_withRxObservable_(RxEventStream_getEventStreamWithNSString_withInt_(@"HTTP-ClusterA", 50), RxEventStream_getEventStreamWithNSString_withInt_(@"HTTP-ClusterB", 20)))) groupByWithRxFunctionsFunc1:create_RxGroupByTests_$3_init()])) flatMapWithRxFunctionsFunc1:create_RxGroupByTests_$4_init()])) takeWithInt:20])) toBlocking])) forEachWithRxFunctionsAction1:create_RxGroupByTests_$5_init()];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"**** finished"];
}

- (void)groupsCompleteAsSoonAsMainCompletes {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 20))) groupByWithRxFunctionsFunc1:create_RxGroupByTests_$6_init()])) concatMapWithRxFunctionsFunc1:create_RxGroupByTests_$7_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(15), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(11), JavaLangInteger_valueOfWithInt_(16), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(12), JavaLangInteger_valueOfWithInt_(17), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(13), JavaLangInteger_valueOfWithInt_(18), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(14), JavaLangInteger_valueOfWithInt_(19) } count:20 type:JavaLangInteger_class_()]];
  [ts assertCompleted];
  [ts assertNoErrors];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testTakeUnsubscribesOnGroupBy);
  methods[1].selector = @selector(testTakeUnsubscribesOnFlatMapOfGroupBy);
  methods[2].selector = @selector(groupsCompleteAsSoonAsMainCompletes);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxGroupByTests__Annotations$0, (void *)&RxGroupByTests__Annotations$1, (void *)&RxGroupByTests__Annotations$2 };
  static const J2ObjcClassInfo _RxGroupByTests = { "GroupByTests", "rx", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_RxGroupByTests;
}

@end

void RxGroupByTests_init(RxGroupByTests *self) {
  NSObject_init(self);
}

RxGroupByTests *new_RxGroupByTests_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests, init)
}

RxGroupByTests *create_RxGroupByTests_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests, init)
}

IOSObjectArray *RxGroupByTests__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxGroupByTests__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxGroupByTests__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxGroupByTests)

@implementation RxGroupByTests_$1

- (NSString *)callWithId:(RxEventStream_Event *)event {
  return ((RxEventStream_Event *) nil_chk(event))->type_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxEventStream_Event;", "LRxGroupByTests;", "testTakeUnsubscribesOnGroupBy", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/EventStream$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxGroupByTests_$1;
}

@end

void RxGroupByTests_$1_init(RxGroupByTests_$1 *self) {
  NSObject_init(self);
}

RxGroupByTests_$1 *new_RxGroupByTests_$1_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$1, init)
}

RxGroupByTests_$1 *create_RxGroupByTests_$1_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$1, init)
}

@implementation RxGroupByTests_$2

- (void)callWithId:(RxObservablesGroupedObservable *)g {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:g];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/String;Lrx/EventStream$Event;>;)V", "LRxGroupByTests;", "testTakeUnsubscribesOnGroupBy", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<Ljava/lang/String;Lrx/EventStream$Event;>;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$2 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxGroupByTests_$2;
}

@end

void RxGroupByTests_$2_init(RxGroupByTests_$2 *self) {
  NSObject_init(self);
}

RxGroupByTests_$2 *new_RxGroupByTests_$2_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$2, init)
}

RxGroupByTests_$2 *create_RxGroupByTests_$2_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$2, init)
}

@implementation RxGroupByTests_$3

- (NSString *)callWithId:(RxEventStream_Event *)event {
  return ((RxEventStream_Event *) nil_chk(event))->type_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxEventStream_Event;", "LRxGroupByTests;", "testTakeUnsubscribesOnFlatMapOfGroupBy", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/EventStream$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$3 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxGroupByTests_$3;
}

@end

void RxGroupByTests_$3_init(RxGroupByTests_$3 *self) {
  NSObject_init(self);
}

RxGroupByTests_$3 *new_RxGroupByTests_$3_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$3, init)
}

RxGroupByTests_$3 *create_RxGroupByTests_$3_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$3, init)
}

@implementation RxGroupByTests_$4

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservablesGroupedObservable *) nil_chk(g)) mapWithRxFunctionsFunc1:create_RxGroupByTests_$4_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/String;Lrx/EventStream$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxGroupByTests;", "testTakeUnsubscribesOnFlatMapOfGroupBy", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/String;Lrx/EventStream$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$4 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxGroupByTests_$4;
}

@end

void RxGroupByTests_$4_init(RxGroupByTests_$4 *self) {
  NSObject_init(self);
}

RxGroupByTests_$4 *new_RxGroupByTests_$4_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$4, init)
}

RxGroupByTests_$4 *create_RxGroupByTests_$4_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$4, init)
}

@implementation RxGroupByTests_$4_$1

- (NSString *)callWithId:(RxEventStream_Event *)event {
  return JreStrcat("$$@", ((RxEventStream_Event *) nil_chk(event))->instanceId_, @" - ", [((id<JavaUtilMap>) nil_chk(event->values_)) getWithId:@"count200"]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$4_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxEventStream_Event;", "LRxGroupByTests_$4;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/EventStream$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$4_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxGroupByTests_$4_$1;
}

@end

void RxGroupByTests_$4_$1_init(RxGroupByTests_$4_$1 *self) {
  NSObject_init(self);
}

RxGroupByTests_$4_$1 *new_RxGroupByTests_$4_$1_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$4_$1, init)
}

RxGroupByTests_$4_$1 *create_RxGroupByTests_$4_$1_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$4_$1, init)
}

@implementation RxGroupByTests_$5

- (void)callWithId:(NSString *)v {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:v];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxGroupByTests;", "testTakeUnsubscribesOnFlatMapOfGroupBy", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$5 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxGroupByTests_$5;
}

@end

void RxGroupByTests_$5_init(RxGroupByTests_$5 *self) {
  NSObject_init(self);
}

RxGroupByTests_$5 *new_RxGroupByTests_$5_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$5, init)
}

RxGroupByTests_$5 *create_RxGroupByTests_$5_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$5, init)
}

@implementation RxGroupByTests_$6

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i)) intValue] % 5);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxGroupByTests;", "groupsCompleteAsSoonAsMainCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$6 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxGroupByTests_$6;
}

@end

void RxGroupByTests_$6_init(RxGroupByTests_$6 *self) {
  NSObject_init(self);
}

RxGroupByTests_$6 *new_RxGroupByTests_$6_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$6, init)
}

RxGroupByTests_$6 *create_RxGroupByTests_$6_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$6, init)
}

@implementation RxGroupByTests_$7

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxGroupByTests_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxGroupByTests;", "groupsCompleteAsSoonAsMainCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxGroupByTests_$7 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxGroupByTests_$7;
}

@end

void RxGroupByTests_$7_init(RxGroupByTests_$7 *self) {
  NSObject_init(self);
}

RxGroupByTests_$7 *new_RxGroupByTests_$7_init() {
  J2OBJC_NEW_IMPL(RxGroupByTests_$7, init)
}

RxGroupByTests_$7 *create_RxGroupByTests_$7_init() {
  J2OBJC_CREATE_IMPL(RxGroupByTests_$7, init)
}
