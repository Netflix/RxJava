//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/producers/ProducerArbiterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxInternalProducersProducerArbiter.h"
#include "RxInternalProducersProducerArbiterTest.h"
#include "RxProducer.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$7();

@interface RxInternalProducersProducerArbiterTest_$1 : NSObject < RxProducer >

- (void)requestWithLong:(jlong)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducerArbiterTest_$1)

__attribute__((unused)) static void RxInternalProducersProducerArbiterTest_$1_init(RxInternalProducersProducerArbiterTest_$1 *self);

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$1 *new_RxInternalProducersProducerArbiterTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$1 *create_RxInternalProducersProducerArbiterTest_$1_init();

@interface RxInternalProducersProducerArbiterTest_$2 : NSObject < RxProducer > {
 @public
  RxInternalProducersProducerArbiter *val$pa_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducerArbiterTest_$2)

J2OBJC_FIELD_SETTER(RxInternalProducersProducerArbiterTest_$2, val$pa_, RxInternalProducersProducerArbiter *)

__attribute__((unused)) static void RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$2 *self, RxInternalProducersProducerArbiter *capture$0);

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$2 *new_RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$2 *create_RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0);

@interface RxInternalProducersProducerArbiterTest_$3 : NSObject < RxProducer > {
 @public
  RxInternalProducersProducerArbiter *val$pa_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducerArbiterTest_$3)

J2OBJC_FIELD_SETTER(RxInternalProducersProducerArbiterTest_$3, val$pa_, RxInternalProducersProducerArbiter *)

__attribute__((unused)) static void RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$3 *self, RxInternalProducersProducerArbiter *capture$0);

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$3 *new_RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$3 *create_RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0);

@interface RxInternalProducersProducerArbiterTest_$4 : NSObject < RxProducer > {
 @public
  RxInternalProducersProducerArbiter *val$pa_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducerArbiterTest_$4)

J2OBJC_FIELD_SETTER(RxInternalProducersProducerArbiterTest_$4, val$pa_, RxInternalProducersProducerArbiter *)

__attribute__((unused)) static void RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$4 *self, RxInternalProducersProducerArbiter *capture$0);

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$4 *new_RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducerArbiterTest_$4 *create_RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0);

@implementation RxInternalProducersProducerArbiterTest

- (void)negativeRequestThrows {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  @try {
    [pa requestWithLong:-99];
    OrgJunitAssert_failWithNSString_(@"Failed to throw on invalid request amount");
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"n >= 0 required", [((JavaLangIllegalArgumentException *) nil_chk(ex)) getMessage]);
  }
}

- (void)negativeProducedThrows {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  @try {
    [pa producedWithLong:-99];
    OrgJunitAssert_failWithNSString_(@"Failed to throw on invalid produced amount");
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"n > 0 required", [((JavaLangIllegalArgumentException *) nil_chk(ex)) getMessage]);
  }
}

- (void)overproductionThrows {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  @try {
    [pa producedWithLong:1];
    OrgJunitAssert_failWithNSString_(@"Failed to throw on overproduction amount");
  }
  @catch (JavaLangIllegalStateException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"more items arrived than were requested", [((JavaLangIllegalStateException *) nil_chk(ex)) getMessage]);
  }
}

- (void)nullProducerAccepted {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  [pa setProducerWithRxProducer:nil];
}

- (void)failedRequestUnlocksEmitting {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  [pa setProducerWithRxProducer:create_RxInternalProducersProducerArbiterTest_$1_init()];
  @try {
    [pa requestWithLong:1];
    OrgJunitAssert_failWithNSString_(@"Failed to throw on overproduction amount");
  }
  @catch (RxExceptionsTestException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"Forced failure", [((RxExceptionsTestException *) nil_chk(ex)) getMessage]);
    OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"Still emitting?!", pa->emitting_);
  }
}

- (void)reentrantSetProducerNull {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  [pa setProducerWithRxProducer:create_RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(pa)];
}

- (void)reentrantSetProducer {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  [pa setProducerWithRxProducer:create_RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(pa)];
}

- (void)overproductionReentrantThrows {
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  @try {
    [pa setProducerWithRxProducer:create_RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(pa)];
    [pa requestWithLong:1];
    OrgJunitAssert_failWithNSString_(@"Failed to throw on overproduction amount");
  }
  @catch (JavaLangIllegalStateException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"more produced than requested", [((JavaLangIllegalStateException *) nil_chk(ex)) getMessage]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalProducersProducerArbiterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(negativeRequestThrows);
  methods[1].selector = @selector(negativeProducedThrows);
  methods[2].selector = @selector(overproductionThrows);
  methods[3].selector = @selector(nullProducerAccepted);
  methods[4].selector = @selector(failedRequestUnlocksEmitting);
  methods[5].selector = @selector(reentrantSetProducerNull);
  methods[6].selector = @selector(reentrantSetProducer);
  methods[7].selector = @selector(overproductionReentrantThrows);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalProducersProducerArbiterTest__Annotations$0, (void *)&RxInternalProducersProducerArbiterTest__Annotations$1, (void *)&RxInternalProducersProducerArbiterTest__Annotations$2, (void *)&RxInternalProducersProducerArbiterTest__Annotations$3, (void *)&RxInternalProducersProducerArbiterTest__Annotations$4, (void *)&RxInternalProducersProducerArbiterTest__Annotations$5, (void *)&RxInternalProducersProducerArbiterTest__Annotations$6, (void *)&RxInternalProducersProducerArbiterTest__Annotations$7 };
  static const J2ObjcClassInfo _RxInternalProducersProducerArbiterTest = { "ProducerArbiterTest", "rx.internal.producers", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalProducersProducerArbiterTest;
}

@end

void RxInternalProducersProducerArbiterTest_init(RxInternalProducersProducerArbiterTest *self) {
  NSObject_init(self);
}

RxInternalProducersProducerArbiterTest *new_RxInternalProducersProducerArbiterTest_init() {
  J2OBJC_NEW_IMPL(RxInternalProducersProducerArbiterTest, init)
}

RxInternalProducersProducerArbiterTest *create_RxInternalProducersProducerArbiterTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducerArbiterTest, init)
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducerArbiterTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalProducersProducerArbiterTest)

@implementation RxInternalProducersProducerArbiterTest_$1

- (void)requestWithLong:(jlong)n {
  if (n != 0) {
    @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalProducersProducerArbiterTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "request", "J", "LRxInternalProducersProducerArbiterTest;", "failedRequestUnlocksEmitting" };
  static const J2ObjcClassInfo _RxInternalProducersProducerArbiterTest_$1 = { "", "rx.internal.producers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalProducersProducerArbiterTest_$1;
}

@end

void RxInternalProducersProducerArbiterTest_$1_init(RxInternalProducersProducerArbiterTest_$1 *self) {
  NSObject_init(self);
}

RxInternalProducersProducerArbiterTest_$1 *new_RxInternalProducersProducerArbiterTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalProducersProducerArbiterTest_$1, init)
}

RxInternalProducersProducerArbiterTest_$1 *create_RxInternalProducersProducerArbiterTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducerArbiterTest_$1, init)
}

@implementation RxInternalProducersProducerArbiterTest_$2

- (void)requestWithLong:(jlong)n {
  [((RxInternalProducersProducerArbiter *) nil_chk(val$pa_)) setProducerWithRxProducer:nil];
}

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0 {
  RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$pa_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalProducersProducerArbiter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$pa_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalProducersProducerArbiter;", "LRxInternalProducersProducerArbiterTest;", "reentrantSetProducerNull" };
  static const J2ObjcClassInfo _RxInternalProducersProducerArbiterTest_$2 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalProducersProducerArbiterTest_$2;
}

@end

void RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$2 *self, RxInternalProducersProducerArbiter *capture$0) {
  JreStrongAssign(&self->val$pa_, capture$0);
  NSObject_init(self);
}

RxInternalProducersProducerArbiterTest_$2 *new_RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducerArbiterTest_$2, initWithRxInternalProducersProducerArbiter_, capture$0)
}

RxInternalProducersProducerArbiterTest_$2 *create_RxInternalProducersProducerArbiterTest_$2_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducerArbiterTest_$2, initWithRxInternalProducersProducerArbiter_, capture$0)
}

@implementation RxInternalProducersProducerArbiterTest_$3

- (void)requestWithLong:(jlong)n {
  [((RxInternalProducersProducerArbiter *) nil_chk(val$pa_)) setProducerWithRxProducer:create_RxInternalProducersProducerArbiter_init()];
}

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0 {
  RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$pa_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalProducersProducerArbiter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$pa_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalProducersProducerArbiter;", "LRxInternalProducersProducerArbiterTest;", "reentrantSetProducer" };
  static const J2ObjcClassInfo _RxInternalProducersProducerArbiterTest_$3 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalProducersProducerArbiterTest_$3;
}

@end

void RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$3 *self, RxInternalProducersProducerArbiter *capture$0) {
  JreStrongAssign(&self->val$pa_, capture$0);
  NSObject_init(self);
}

RxInternalProducersProducerArbiterTest_$3 *new_RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducerArbiterTest_$3, initWithRxInternalProducersProducerArbiter_, capture$0)
}

RxInternalProducersProducerArbiterTest_$3 *create_RxInternalProducersProducerArbiterTest_$3_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducerArbiterTest_$3, initWithRxInternalProducersProducerArbiter_, capture$0)
}

@implementation RxInternalProducersProducerArbiterTest_$4

- (void)requestWithLong:(jlong)n {
  if (n != 0) {
    [((RxInternalProducersProducerArbiter *) nil_chk(val$pa_)) producedWithLong:2];
  }
}

- (instancetype)initWithRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$0 {
  RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$pa_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalProducersProducerArbiter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$pa_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalProducersProducerArbiter;", "LRxInternalProducersProducerArbiterTest;", "overproductionReentrantThrows" };
  static const J2ObjcClassInfo _RxInternalProducersProducerArbiterTest_$4 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalProducersProducerArbiterTest_$4;
}

@end

void RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiterTest_$4 *self, RxInternalProducersProducerArbiter *capture$0) {
  JreStrongAssign(&self->val$pa_, capture$0);
  NSObject_init(self);
}

RxInternalProducersProducerArbiterTest_$4 *new_RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducerArbiterTest_$4, initWithRxInternalProducersProducerArbiter_, capture$0)
}

RxInternalProducersProducerArbiterTest_$4 *create_RxInternalProducersProducerArbiterTest_$4_initWithRxInternalProducersProducerArbiter_(RxInternalProducersProducerArbiter *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducerArbiterTest_$4, initWithRxInternalProducersProducerArbiter_, capture$0)
}
