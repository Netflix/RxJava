//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/util/AssertObservable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxUtilAssertObservable")
#ifdef RESTRICT_RxUtilAssertObservable
#define INCLUDE_ALL_RxUtilAssertObservable 0
#else
#define INCLUDE_ALL_RxUtilAssertObservable 1
#endif
#undef RESTRICT_RxUtilAssertObservable

#if !defined (RxUtilAssertObservable_) && (INCLUDE_ALL_RxUtilAssertObservable || defined(INCLUDE_RxUtilAssertObservable))
#define RxUtilAssertObservable_

@class RxObservable;

@interface RxUtilAssertObservable : NSObject

#pragma mark Public

+ (RxObservable *)assertObservableEqualsWithRxObservable:(RxObservable *)expected
                                        withRxObservable:(RxObservable *)actual;

+ (RxObservable *)assertObservableEqualsWithNSString:(NSString *)message
                                    withRxObservable:(RxObservable *)expected
                                    withRxObservable:(RxObservable *)actual;

+ (void)assertObservableEqualsBlockingWithRxObservable:(RxObservable *)expected
                                      withRxObservable:(RxObservable *)actual;

+ (void)assertObservableEqualsBlockingWithNSString:(NSString *)message
                                  withRxObservable:(RxObservable *)expected
                                  withRxObservable:(RxObservable *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(RxUtilAssertObservable)

FOUNDATION_EXPORT void RxUtilAssertObservable_assertObservableEqualsBlockingWithRxObservable_withRxObservable_(RxObservable *expected, RxObservable *actual);

FOUNDATION_EXPORT void RxUtilAssertObservable_assertObservableEqualsBlockingWithNSString_withRxObservable_withRxObservable_(NSString *message, RxObservable *expected, RxObservable *actual);

FOUNDATION_EXPORT RxObservable *RxUtilAssertObservable_assertObservableEqualsWithRxObservable_withRxObservable_(RxObservable *expected, RxObservable *actual);

FOUNDATION_EXPORT RxObservable *RxUtilAssertObservable_assertObservableEqualsWithNSString_withRxObservable_withRxObservable_(NSString *message, RxObservable *expected, RxObservable *actual);

J2OBJC_TYPE_LITERAL_HEADER(RxUtilAssertObservable)

#endif

#pragma pop_macro("INCLUDE_ALL_RxUtilAssertObservable")
