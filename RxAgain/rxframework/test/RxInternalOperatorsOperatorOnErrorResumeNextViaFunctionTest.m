//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorOnErrorResumeNextViaFunctionTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$7();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxSubscription> s_;
  IOSObjectArray *values_;
  JavaLangThread *t_;
}

- (instancetype)initWithRxSubscription:(id<RxSubscription>)s
                     withNSStringArray:(IOSObjectArray *)values;

- (void)callWithId:(RxSubscriber *)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable, s_, id<RxSubscription>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable, values_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable, t_, JavaLangThread *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *self, id<RxSubscription> s, IOSObjectArray *values);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(id<RxSubscription> s, IOSObjectArray *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(id<RxSubscription> s, IOSObjectArray *values);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable)

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 : NSObject < JavaLangRunnable > {
 @public
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *this$0_;
  RxSubscriber *val$observer_;
}

- (void)run;

- (instancetype)initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable:(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *)outer$
                                                                                  withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1, this$0_, RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *self, RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$receivedException_;
}

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2, val$receivedException_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$receivedException_;
}

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3, val$receivedException_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 : NSObject < RxObservable_Operator >

- (RxSubscriber *)callWithId:(RxSubscriber *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 : NSObject < RxObservable_Operator >

- (RxSubscriber *)callWithId:(RxSubscriber *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 : RxSubscriber

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init();

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init();

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest

- (void)testResumeNextWithSynchronousExecution {
  JavaUtilConcurrentAtomicAtomicReference *receivedException = create_JavaUtilConcurrentAtomicAtomicReference_init();
  RxObservable *w = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init());
  id<RxFunctionsFunc1> resume = create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(receivedException);
  RxObservable *observable = [((RxObservable *) nil_chk(w)) onErrorResumeNextWithRxFunctionsFunc1:resume];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"twoResume"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"threeResume"];
  OrgJunitAssert_assertNotNullWithId_([receivedException get]);
}

- (void)testResumeNextWithAsyncExecution {
  JavaUtilConcurrentAtomicAtomicReference *receivedException = create_JavaUtilConcurrentAtomicAtomicReference_init();
  id<RxSubscription> s = OrgMockitoMockito_mockWithIOSClass_(RxSubscription_class_());
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *w = create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(s, [IOSObjectArray arrayWithObjects:(id[]){ @"one" } count:1 type:NSString_class_()]);
  id<RxFunctionsFunc1> resume = create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(receivedException);
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(w))) onErrorResumeNextWithRxFunctionsFunc1:resume];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  @try {
    [((JavaLangThread *) nil_chk(w->t_)) join];
  }
  @catch (JavaLangInterruptedException *e) {
    OrgJunitAssert_failWithNSString_([((JavaLangInterruptedException *) nil_chk(e)) getMessage]);
  }
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"twoResume"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"threeResume"];
  OrgJunitAssert_assertNotNullWithId_([receivedException get]);
}

- (void)testFunctionThrowsError {
  id<RxSubscription> s = OrgMockitoMockito_mockWithIOSClass_(RxSubscription_class_());
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *w = create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(s, [IOSObjectArray arrayWithObjects:(id[]){ @"one" } count:1 type:NSString_class_()]);
  id<RxFunctionsFunc1> resume = create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init();
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(w))) onErrorResumeNextWithRxFunctionsFunc1:resume];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  @try {
    [((JavaLangThread *) nil_chk(w->t_)) join];
  }
  @catch (JavaLangInterruptedException *e) {
    OrgJunitAssert_failWithNSString_([((JavaLangInterruptedException *) nil_chk(e)) getMessage]);
  }
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(0)))) onCompleted];
}

- (void)testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperator {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init()])) onErrorResumeNextWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init()])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:[ts getOnNextEvents]];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"success" } count:1 type:NSString_class_()])];
}

- (void)testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperatorOnNext {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init()])) onErrorResumeNextWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init()])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:[ts getOnNextEvents]];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"success" } count:1 type:NSString_class_()])];
}

- (void)testMapResumeAsyncNext {
  RxObservable *w = RxObservable_justWithId_withId_withId_withId_withId_(@"one", @"fail", @"two", @"three", @"fail");
  w = [((RxObservable *) nil_chk(w)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init()];
  RxObservable *observable = [((RxObservable *) nil_chk(w)) onErrorResumeNextWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init()];
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithRxObserver_(observer);
  [((RxObservable *) nil_chk(observable)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"twoResume"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"threeResume"];
}

- (void)testBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 100000))) onErrorResumeNextWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
}

- (void)normalBackpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) onErrorResumeNextWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) requestMoreWithLong:2];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ps onErrorWithNSException:create_RxExceptionsTestException_initWithNSString_(@"Forced failure")];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:2];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testResumeNextWithSynchronousExecution);
  methods[1].selector = @selector(testResumeNextWithAsyncExecution);
  methods[2].selector = @selector(testFunctionThrowsError);
  methods[3].selector = @selector(testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperator);
  methods[4].selector = @selector(testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperatorOnNext);
  methods[5].selector = @selector(testMapResumeAsyncNext);
  methods[6].selector = @selector(testBackpressure);
  methods[7].selector = @selector(normalBackpressure);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$0, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$1, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$2, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$3, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$4, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$5, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$6, (void *)&RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$7, "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest = { "OperatorOnErrorResumeNextViaFunctionTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, 8, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest)

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable

- (instancetype)initWithRxSubscription:(id<RxSubscription>)s
                     withNSStringArray:(IOSObjectArray *)values {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(self, s, values);
  return self;
}

- (void)callWithId:(RxSubscriber *)observer {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"TestObservable subscribed to ..."];
  [((RxSubscriber *) nil_chk(observer)) addWithRxSubscription:s_];
  JreStrongAssignAndConsume(&t_, new_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(self, observer)));
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"starting TestObservable thread"];
  [((JavaLangThread *) nil_chk(t_)) start];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"done starting TestObservable thread"];
}

- (void)dealloc {
  RELEASE_(s_);
  RELEASE_(values_);
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscription:withNSStringArray:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "LRxSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "values_", "[LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "t_", "LJavaLangThread;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscription;[LNSString;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable = { "TestObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 3, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *self, id<RxSubscription> s, IOSObjectArray *values) {
  NSObject_init(self);
  JreStrongAssign(&self->t_, nil);
  JreStrongAssign(&self->s_, s);
  JreStrongAssign(&self->values_, values);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(id<RxSubscription> s, IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable, initWithRxSubscription_withNSStringArray_, s, values)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_initWithRxSubscription_withNSStringArray_(id<RxSubscription> s, IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable, initWithRxSubscription_withNSStringArray_, s, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable)

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1

- (void)run {
  @try {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"running TestObservable thread"];
    {
      IOSObjectArray *a__ = this$0_->values_;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *s = *b__++;
        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$", @"TestObservable onNext: ", s)];
        [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:s];
      }
    }
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced Failure");
  }
  @catch (NSException *e) {
    [((RxSubscriber *) nil_chk(val$observer_)) onErrorWithNSException:e];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable:(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *)outer$
                                                                                  withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable;LRxSubscriber;", "(Lrx/internal/operators/OperatorOnErrorResumeNextViaFunctionTest$TestObservable;Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *self, RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1, initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1_initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_$1, initWithRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_TestObservable_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:@"one"];
  [observer onErrorWithNSException:create_NSException_initWithNSString_(@"injected failure")];
  [observer onNextWithId:@"two"];
  [observer onNextWithId:@"three"];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testResumeNextWithSynchronousExecution", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$1, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2

- (RxObservable *)callWithId:(NSException *)t1 {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$receivedException_)) setWithId:t1];
  return RxObservable_justWithId_withId_(@"twoResume", @"threeResume");
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$receivedException_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$receivedException_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testResumeNextWithSynchronousExecution", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$receivedException_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$2, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3

- (RxObservable *)callWithId:(NSException *)t1 {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$receivedException_)) setWithId:t1];
  return RxObservable_justWithId_withId_(@"twoResume", @"threeResume");
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$receivedException_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$receivedException_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testResumeNextWithAsyncExecution", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$receivedException_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$3, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4

- (RxObservable *)callWithId:(NSException *)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"exception from function");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testFunctionThrowsError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$4, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5

- (RxSubscriber *)callWithId:(RxSubscriber *)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"failed");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscriber;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperator", "Ljava/lang/Object;Lrx/Observable$Operator<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$5, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6

- (RxObservable *)callWithId:(NSException *)t1 {
  if ([((NSString *) nil_chk([((NSException *) nil_chk(t1)) getMessage])) isEqual:@"failed"]) {
    return RxObservable_justWithId_(@"success");
  }
  else {
    return RxObservable_errorWithNSException_(t1);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperator", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$6, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7

- (RxSubscriber *)callWithId:(RxSubscriber *)t1 {
  return create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscriber;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperatorOnNext", "Ljava/lang/Object;Lrx/Observable$Operator<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1

- (void)onCompleted {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"failed");
}

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"failed");
}

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"failed");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7;", "callWithId:", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *self) {
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$7_$1, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8

- (RxObservable *)callWithId:(NSException *)t1 {
  if ([((NSString *) nil_chk([((NSException *) nil_chk(t1)) getMessage])) isEqual:@"failed"]) {
    return RxObservable_justWithId_(@"success");
  }
  else {
    return RxObservable_errorWithNSException_(t1);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testOnErrorResumeReceivesErrorFromPreviousNonProtectedOperatorOnNext", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$8, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9

- (NSString *)callWithId:(NSString *)s {
  if ([@"fail" isEqual:s]) @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced Failure");
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"BadMapper:", s)];
  return s;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testMapResumeAsyncNext", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$9, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10

- (RxObservable *)callWithId:(NSException *)t1 {
  return [((RxObservable *) nil_chk(RxObservable_justWithId_withId_(@"twoResume", @"threeResume"))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testMapResumeAsyncNext", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$10, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11

- (RxObservable *)callWithId:(NSException *)t1 {
  return RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$11, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1 {
  if (c_++ <= 1) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
      [((JavaLangInterruptedException *) nil_chk(e)) printStackTrace];
    }
  }
  return t1;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "testBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$12, init)
}

@implementation RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13

- (RxObservable *)callWithId:(NSException *)v {
  return RxObservable_rangeWithInt_withInt_(3, 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest;", "normalBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13;
}

@end

void RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13, init)
}

RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13 *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnErrorResumeNextViaFunctionTest_$13, init)
}
