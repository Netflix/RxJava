//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeFromIterableTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxInternalOperatorsOnSubscribeFromIterable.h"
#include "RxInternalOperatorsOnSubscribeFromIterableTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Spliterator.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/function/Consumer.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$17();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$1 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 : NSObject < JavaUtilIterator > {
 @public
  jint i_;
}

- (jboolean)hasNext;

- (NSString *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$2 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$2, val$latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOnSubscribeFromIterableTest_$2 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$2 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$2 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$3 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$completed_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$3, val$completed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$3 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$3 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$3 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$4 : NSObject < JavaLangIterable > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$called_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$4, val$called_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$4 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$4 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 : NSObject < JavaUtilIterator > {
 @public
  RxInternalOperatorsOnSubscribeFromIterableTest_$4 *this$0_;
  jint count_;
}

- (void)remove;

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (instancetype)initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4:(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1, this$0_, RxInternalOperatorsOnSubscribeFromIterableTest_$4 *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *self, RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$5 : NSObject < JavaLangIterable > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$called_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$5, val$called_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$5 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$5 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 : NSObject < JavaUtilIterator > {
 @public
  RxInternalOperatorsOnSubscribeFromIterableTest_$5 *this$0_;
  jint count_;
}

- (void)remove;

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (instancetype)initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5:(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1, this$0_, RxInternalOperatorsOnSubscribeFromIterableTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *self, RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$);

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$6 : RxSubscriber

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$6_init(RxInternalOperatorsOnSubscribeFromIterableTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$6 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$6 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$6_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$7 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$7_init(RxInternalOperatorsOnSubscribeFromIterableTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$7 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$7 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$7_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$8 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$8_init(RxInternalOperatorsOnSubscribeFromIterableTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$8 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$8 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$9 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$9_init(RxInternalOperatorsOnSubscribeFromIterableTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$9 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$9 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 : NSObject < JavaUtilIterator > {
 @public
  jint count_;
}

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$10 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$10)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$10_init(RxInternalOperatorsOnSubscribeFromIterableTest_$10 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$10 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$10 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 : NSObject < JavaUtilIterator > {
 @public
  jint count_;
}

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$11 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$11_init(RxInternalOperatorsOnSubscribeFromIterableTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$11 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$11 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$12 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$12_init(RxInternalOperatorsOnSubscribeFromIterableTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$12 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$12 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$13 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$13_init(RxInternalOperatorsOnSubscribeFromIterableTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$13 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$13 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_init();

@interface RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init();

@implementation RxInternalOperatorsOnSubscribeFromIterableTest

- (void)testNull {
  RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(nil));
}

- (void)testListIterable {
  RxObservable *observable = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()])));
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testRawIterable {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_init();
  RxObservable *observable = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(it));
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"1"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"2"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"3"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testObservableFromIterable {
  RxObservable *observable = RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()]));
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testBackpressureViaRequest {
  JavaUtilArrayList *list = create_JavaUtilArrayList_initWithInt_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE));
  for (jint i = 1; i <= JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) + 1; i++) {
    [list addWithId:JavaLangInteger_valueOfWithInt_(i)];
  }
  RxInternalOperatorsOnSubscribeFromIterable *o = create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(list);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  [ts requestMoreWithLong:1];
  [o callWithId:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [ts requestMoreWithLong:2];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()])];
  [ts requestMoreWithLong:3];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:6 type:JavaLangInteger_class_()])];
  [ts requestMoreWithLong:[list size]];
  [ts assertTerminalEvent];
}

- (void)testNoBackpressure {
  RxInternalOperatorsOnSubscribeFromIterable *o = create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE];
  [o callWithId:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()])];
  [ts assertTerminalEvent];
}

- (void)testSubscribeMultipleTimes {
  RxInternalOperatorsOnSubscribeFromIterable *o = create_RxInternalOperatorsOnSubscribeFromIterable_initWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [o callWithId:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()])];
  ts = create_RxObserversTestSubscriber_init();
  [o callWithId:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()])];
  ts = create_RxObserversTestSubscriber_init();
  [o callWithId:ts];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()])];
}

- (void)testFromIterableRequestOverflow {
  RxObservable *o = RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()]));
  jint expectedCount = 4;
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(expectedCount);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(o)) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(latch)];
  OrgJunitAssert_assertTrueWithBoolean_([latch awaitWithLong:10 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)]);
}

- (void)testFromEmptyIterableWhenZeroRequestedShouldStillEmitOnCompletedEagerly {
  JavaUtilConcurrentAtomicAtomicBoolean *completed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(JavaUtilCollections_emptyList()))) subscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(completed)];
  OrgJunitAssert_assertTrueWithBoolean_([completed get]);
}

- (void)testDoesNotCallIteratorHasNextMoreThanRequiredWithBackpressure {
  JavaUtilConcurrentAtomicAtomicBoolean *called = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  id<JavaLangIterable> iterable = create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(called);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(iterable))) takeWithInt:1])) subscribe];
  OrgJunitAssert_assertFalseWithBoolean_([called get]);
}

- (void)testDoesNotCallIteratorHasNextMoreThanRequiredFastPath {
  JavaUtilConcurrentAtomicAtomicBoolean *called = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  id<JavaLangIterable> iterable = create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(called);
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(iterable))) subscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeFromIterableTest_$6_init()];
  OrgJunitAssert_assertFalseWithBoolean_([called get]);
}

- (void)getIteratorThrows {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$7_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)hasNextThrowsImmediately {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)hasNextThrowsSecondTimeFastpath {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)hasNextThrowsSecondTimeSlowpath {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(5);
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)nextThrowsFastpath {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)nextThrowsSlowpath {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(5);
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)deadOnArrival {
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_init();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(5);
  [ts unsubscribe];
  [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(it))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, 7, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testNull);
  methods[1].selector = @selector(testListIterable);
  methods[2].selector = @selector(testRawIterable);
  methods[3].selector = @selector(testObservableFromIterable);
  methods[4].selector = @selector(testBackpressureViaRequest);
  methods[5].selector = @selector(testNoBackpressure);
  methods[6].selector = @selector(testSubscribeMultipleTimes);
  methods[7].selector = @selector(testFromIterableRequestOverflow);
  methods[8].selector = @selector(testFromEmptyIterableWhenZeroRequestedShouldStillEmitOnCompletedEagerly);
  methods[9].selector = @selector(testDoesNotCallIteratorHasNextMoreThanRequiredWithBackpressure);
  methods[10].selector = @selector(testDoesNotCallIteratorHasNextMoreThanRequiredFastPath);
  methods[11].selector = @selector(getIteratorThrows);
  methods[12].selector = @selector(hasNextThrowsImmediately);
  methods[13].selector = @selector(hasNextThrowsSecondTimeFastpath);
  methods[14].selector = @selector(hasNextThrowsSecondTimeSlowpath);
  methods[15].selector = @selector(nextThrowsFastpath);
  methods[16].selector = @selector(nextThrowsSlowpath);
  methods[17].selector = @selector(deadOnArrival);
  methods[18].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$6, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$10, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$11, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$12, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$13, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$14, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$15, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$16, (void *)&RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$17 };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest = { "OnSubscribeFromIterableTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 19, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_init(RxInternalOperatorsOnSubscribeFromIterableTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest *new_RxInternalOperatorsOnSubscribeFromIterableTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest *create_RxInternalOperatorsOnSubscribeFromIterableTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaLangNullPointerException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromIterableTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFromIterableTest)

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$1

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/String;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testRawIterable", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1

- (jboolean)hasNext {
  return i_ < 3;
}

- (NSString *)next {
  return NSString_valueOfInt_(++i_);
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "i_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$1;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *self) {
  NSObject_init(self);
  self->i_ = 0;
}

RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$1_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$2

- (void)onStart {
  [self requestWithLong:2];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSException_(e);
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
  [self requestWithLong:JavaLangLong_MAX_VALUE - 1];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOnSubscribeFromIterableTest_$2 class]);
  RELEASE_(val$latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testFromIterableRequestOverflow", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOnSubscribeFromIterableTest_$2 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$latch_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$2 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$2, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$2 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$2_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$2, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$3

- (void)onStart {
  [self requestWithLong:0];
}

- (void)onCompleted {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$completed_)) setWithBoolean:true];
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id)t {
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOnSubscribeFromIterableTest_$3 class]);
  RELEASE_(val$completed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$completed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testFromEmptyIterableWhenZeroRequestedShouldStillEmitOnCompletedEagerly", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$3 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$completed_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$3 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$3, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$3 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$3, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$4

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(self);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(val$called_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$called_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testDoesNotCallIteratorHasNextMoreThanRequiredWithBackpressure", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$called_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$4 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$4, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$4 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$4, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1

- (void)remove {
}

- (jboolean)hasNext {
  if (count_ > 1) {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->val$called_)) setWithBoolean:true];
    return false;
  }
  else return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(count_++);
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4:(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *)outer$ {
  RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(self, outer$);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(remove);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeFromIterableTest_$4;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$4;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *self, RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->count_ = 1;
}

RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1, initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_, outer$)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_(RxInternalOperatorsOnSubscribeFromIterableTest_$4 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$4_$1, initWithRxInternalOperatorsOnSubscribeFromIterableTest_$4_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$5

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(self);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(val$called_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$called_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testDoesNotCallIteratorHasNextMoreThanRequiredFastPath", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$called_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$5 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$5, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$5 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$5, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1

- (void)remove {
}

- (jboolean)hasNext {
  if (count_ > 1) {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->val$called_)) setWithBoolean:true];
    return false;
  }
  else return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(count_++);
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5:(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *)outer$ {
  RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(self, outer$);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(remove);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeFromIterableTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$5;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *self, RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->count_ = 1;
}

RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1, initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_, outer$)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1_initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_(RxInternalOperatorsOnSubscribeFromIterableTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$5_$1, initWithRxInternalOperatorsOnSubscribeFromIterableTest_$5_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$6

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [self unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOnSubscribeFromIterableTest_$6 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "testDoesNotCallIteratorHasNextMoreThanRequiredFastPath", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$6_init(RxInternalOperatorsOnSubscribeFromIterableTest_$6 *self) {
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$6 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$6, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$6 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$6, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$7

- (id<JavaUtilIterator>)iterator {
  @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "getIteratorThrows", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$7_init(RxInternalOperatorsOnSubscribeFromIterableTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$7 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$7, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$7 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$8

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "hasNextThrowsImmediately", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$8_init(RxInternalOperatorsOnSubscribeFromIterableTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$8 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$8, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$8 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$8, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1

- (jboolean)hasNext {
  @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
}

- (JavaLangInteger *)next {
  return nil;
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$8;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$8_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$9

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "hasNextThrowsSecondTimeFastpath", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$9_init(RxInternalOperatorsOnSubscribeFromIterableTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$9 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$9, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$9 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$9, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1

- (jboolean)hasNext {
  if (++count_ >= 2) {
    @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
  }
  return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$9;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$9_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$10

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "hasNextThrowsSecondTimeSlowpath", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$10 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$10;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$10_init(RxInternalOperatorsOnSubscribeFromIterableTest_$10 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$10 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$10_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$10, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$10 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$10, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1

- (jboolean)hasNext {
  if (++count_ >= 2) {
    @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
  }
  return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$10;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$10_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$11

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "nextThrowsFastpath", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$11;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$11_init(RxInternalOperatorsOnSubscribeFromIterableTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$11 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$11, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$11 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$11, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1

- (jboolean)hasNext {
  return true;
}

- (JavaLangInteger *)next {
  @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$11;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$11_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$12

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "nextThrowsSlowpath", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$12;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$12_init(RxInternalOperatorsOnSubscribeFromIterableTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$12 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$12, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$12 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$12, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1

- (jboolean)hasNext {
  return true;
}

- (JavaLangInteger *)next {
  @throw create_RxExceptionsTestException_initWithNSString_(@"Forced failure");
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$12;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$12_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$13

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromIterableTest;", "deadOnArrival", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$13;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$13_init(RxInternalOperatorsOnSubscribeFromIterableTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$13 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$13, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$13 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$13, init)
}

@implementation RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1

- (jboolean)hasNext {
  return false;
}

- (JavaLangInteger *)next {
  @throw create_JavaUtilNoSuchElementException_init();
}

- (void)remove {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFromIterableTest_$13;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init(RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *new_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1, init)
}

RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1 *create_RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromIterableTest_$13_$1, init)
}
