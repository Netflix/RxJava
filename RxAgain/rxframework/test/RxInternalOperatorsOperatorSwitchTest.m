//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorSwitchTest.java
//

#include "CoTouchlabDoppelTestingPlatformUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsCompositeException.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsActions.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorSwitchTest.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorSwitchTest () {
 @public
  RxSchedulersTestScheduler *scheduler_;
  RxScheduler_Worker *innerScheduler_;
  id<RxObserver> observer_;
}

- (void)publishCompletedWithRxObserver:(id<RxObserver>)observer
                              withLong:(jlong)delay;

- (void)publishErrorWithRxObserver:(id<RxObserver>)observer
                          withLong:(jlong)delay
                   withNSException:(NSException *)error;

- (void)publishNextWithRxObserver:(id<RxObserver>)observer
                         withLong:(jlong)delay
                           withId:(id)value;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest, scheduler_, RxSchedulersTestScheduler *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest, innerScheduler_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest, observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay);

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_publishErrorWithRxObserver_withLong_withNSException_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay, NSException *error);

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay, id value);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$22();

@interface RxInternalOperatorsOperatorSwitchTest_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$1, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$1 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$1 *new_RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$1 *create_RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$1_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$1 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$1:(RxInternalOperatorsOperatorSwitchTest_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$1_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$1 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1_$1 *self, RxInternalOperatorsOperatorSwitchTest_$1 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$1_$1 *new_RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$1_$1 *create_RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$2, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$2 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2 *new_RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2 *create_RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$2_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$2 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$2:(RxInternalOperatorsOperatorSwitchTest_$2 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$2_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$2_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$2 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2_$1 *self, RxInternalOperatorsOperatorSwitchTest_$2 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2_$1 *new_RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2_$1 *create_RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$2_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$2 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$2:(RxInternalOperatorsOperatorSwitchTest_$2 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$2_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$2_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$2 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2_$2 *self, RxInternalOperatorsOperatorSwitchTest_$2 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2_$2 *new_RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$2_$2 *create_RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$3 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$3, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$3 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3 *new_RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3 *create_RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$3_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$3 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$3:(RxInternalOperatorsOperatorSwitchTest_$3 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$3_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$3_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$3 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3_$1 *self, RxInternalOperatorsOperatorSwitchTest_$3 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3_$1 *new_RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3_$1 *create_RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$3_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$3 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$3:(RxInternalOperatorsOperatorSwitchTest_$3 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$3_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$3_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$3 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3_$2 *self, RxInternalOperatorsOperatorSwitchTest_$3 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3_$2 *new_RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$3_$2 *create_RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$4 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$4, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$4 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4 *new_RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4 *create_RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$4_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$4 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$4:(RxInternalOperatorsOperatorSwitchTest_$4 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$4_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$4_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$4 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4_$1 *self, RxInternalOperatorsOperatorSwitchTest_$4 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4_$1 *new_RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4_$1 *create_RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$4_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$4 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$4:(RxInternalOperatorsOperatorSwitchTest_$4 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$4_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$4_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$4 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4_$2 *self, RxInternalOperatorsOperatorSwitchTest_$4 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4_$2 *new_RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$4_$2 *create_RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$5 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$5, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$5 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5 *new_RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5 *create_RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$5_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$5 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$5_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$5_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$1 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$1 *new_RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$1 *create_RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$5_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$5 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$5_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$5_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$2 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$2 *new_RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$2 *create_RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$5_$3 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$5 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$5_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$5_$3, this$0_, RxInternalOperatorsOperatorSwitchTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$3 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$3 *new_RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$5_$3 *create_RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$6 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$6, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$6 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6 *new_RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6 *create_RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$6_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$6 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$6_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$6_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$6 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$1 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$1 *new_RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$1 *create_RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$6_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$6 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$6_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$6_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$6 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$2 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$2 *new_RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$2 *create_RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$6_$3 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$6 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$6_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$6_$3, this$0_, RxInternalOperatorsOperatorSwitchTest_$6 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$3 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$3 *new_RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$6_$3 *create_RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$7 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$7, val$observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(RxInternalOperatorsOperatorSwitchTest_$7 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$7 *new_RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$7 *create_RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$8 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
  NSException *val$error_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                   withNSException:(NSException *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$8, val$observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$8, val$error_, NSException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(RxInternalOperatorsOperatorSwitchTest_$8 *self, id<RxObserver> capture$0, NSException *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$8 *new_RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(id<RxObserver> capture$0, NSException *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$8 *create_RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(id<RxObserver> capture$0, NSException *capture$1);

@interface RxInternalOperatorsOperatorSwitchTest_$9 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
  id val$value_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$9, val$observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$9, val$value_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(RxInternalOperatorsOperatorSwitchTest_$9 *self, id<RxObserver> capture$0, id capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$9 *new_RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$9 *create_RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1);

@interface RxInternalOperatorsOperatorSwitchTest_$10 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$10, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$10 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10 *new_RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10 *create_RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$10_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$10 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$10:(RxInternalOperatorsOperatorSwitchTest_$10 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$10_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$10_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$10 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10_$1 *self, RxInternalOperatorsOperatorSwitchTest_$10 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10_$1 *new_RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10_$1 *create_RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$10_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$10 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$10:(RxInternalOperatorsOperatorSwitchTest_$10 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$10_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$10_$2, this$0_, RxInternalOperatorsOperatorSwitchTest_$10 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10_$2 *self, RxInternalOperatorsOperatorSwitchTest_$10 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10_$2 *new_RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$10_$2 *create_RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$11 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$11)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$11, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$11 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$11 *new_RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$11 *create_RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$11_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$11 *this$0_;
  jint emitted_;
  RxSubscriber *val$observer_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$11:(RxInternalOperatorsOperatorSwitchTest_$11 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$11_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$11_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$11 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$11_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11_$1 *self, RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$11_$1 *new_RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$11_$1 *create_RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$12 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$12, this$0_, RxInternalOperatorsOperatorSwitchTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$12 *self, RxInternalOperatorsOperatorSwitchTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$12 *new_RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$12 *create_RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$12_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$12 *this$0_;
  jint emitted_;
  RxSubscriber *val$observer_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$12:(RxInternalOperatorsOperatorSwitchTest_$12 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$12_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$12_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$12 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$12_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12_$1 *self, RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$12_$1 *new_RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$12_$1 *create_RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$13 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$13_init(RxInternalOperatorsOperatorSwitchTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$13 *new_RxInternalOperatorsOperatorSwitchTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$13 *create_RxInternalOperatorsOperatorSwitchTest_$13_init();

@interface RxInternalOperatorsOperatorSwitchTest_$13_$1 : NSObject < RxProducer > {
 @public
  jint emitted_;
  RxSubscriber *val$observer_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$13_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$13_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$13_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$13_$1 *new_RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$13_$1 *create_RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$14 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorSwitchTest *this$0_;
  RxObservable *val$o1_;
  RxObservable *val$o2_;
  RxObservable *val$o3_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$
                                             withRxObservable:(RxObservable *)capture$0
                                             withRxObservable:(RxObservable *)capture$1
                                             withRxObservable:(RxObservable *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$14)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$14, this$0_, RxInternalOperatorsOperatorSwitchTest *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$14, val$o1_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$14, val$o2_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$14, val$o3_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest_$14 *self, RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$14 *new_RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$14 *create_RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2);

@interface RxInternalOperatorsOperatorSwitchTest_$15 : RxSubscriber {
 @public
  jint requested__;
  RxObserversTestSubscriber *val$testSubscriber_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)s;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$15, val$testSubscriber_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorSwitchTest_$15 *self, RxObserversTestSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$15 *new_RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$15 *create_RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$16 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$isUnsubscribed_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$16, val$isUnsubscribed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchTest_$16 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$16 *new_RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$16 *create_RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$17 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$17)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$17_init(RxInternalOperatorsOperatorSwitchTest_$17 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$17 *new_RxInternalOperatorsOperatorSwitchTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$17 *create_RxInternalOperatorsOperatorSwitchTest_$17_init();

@interface RxInternalOperatorsOperatorSwitchTest_$17_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  NSString *val$s_;
}

- (NSString *)callWithId:(JavaLangLong *)i;

- (instancetype)initWithNSString:(NSString *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$17_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$17_$1, val$s_, NSString *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(RxInternalOperatorsOperatorSwitchTest_$17_$1 *self, NSString *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$17_$1 *new_RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$17_$1 *create_RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(NSString *capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$18 : RxObserversTestSubscriber

- (void)onNextWithId:(NSString *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$18_init(RxInternalOperatorsOperatorSwitchTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$18 *new_RxInternalOperatorsOperatorSwitchTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$18 *create_RxInternalOperatorsOperatorSwitchTest_$18_init();

@interface RxInternalOperatorsOperatorSwitchTest_$19 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangLong *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$19)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$19_init(RxInternalOperatorsOperatorSwitchTest_$19 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$19 *new_RxInternalOperatorsOperatorSwitchTest_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$19 *create_RxInternalOperatorsOperatorSwitchTest_$19_init();

@interface RxInternalOperatorsOperatorSwitchTest_$20 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangLong *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$20_init(RxInternalOperatorsOperatorSwitchTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$20 *new_RxInternalOperatorsOperatorSwitchTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$20 *create_RxInternalOperatorsOperatorSwitchTest_$20_init();

@interface RxInternalOperatorsOperatorSwitchTest_$21 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangLong *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$21)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$21_init(RxInternalOperatorsOperatorSwitchTest_$21 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$21 *new_RxInternalOperatorsOperatorSwitchTest_$21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$21 *create_RxInternalOperatorsOperatorSwitchTest_$21_init();

@interface RxInternalOperatorsOperatorSwitchTest_$22 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$requests_;
}

- (void)callWithId:(JavaLangLong *)n;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$22, val$requests_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(RxInternalOperatorsOperatorSwitchTest_$22 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$22 *new_RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$22 *create_RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$23 : NSObject < RxFunctionsFunc1 > {
 @public
  id<RxFunctionsAction1> val$addRequest_;
}

- (RxObservable *)callWithId:(JavaLangLong *)t;

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$23)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$23, val$addRequest_, id<RxFunctionsAction1>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(RxInternalOperatorsOperatorSwitchTest_$23 *self, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$23 *new_RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$23 *create_RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0);

@interface RxInternalOperatorsOperatorSwitchTest_$24 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$24)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$24_init(RxInternalOperatorsOperatorSwitchTest_$24 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$24 *new_RxInternalOperatorsOperatorSwitchTest_$24_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$24 *create_RxInternalOperatorsOperatorSwitchTest_$24_init();

@interface RxInternalOperatorsOperatorSwitchTest_$25 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$25)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$25_init(RxInternalOperatorsOperatorSwitchTest_$25 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$25 *new_RxInternalOperatorsOperatorSwitchTest_$25_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$25 *create_RxInternalOperatorsOperatorSwitchTest_$25_init();

@interface RxInternalOperatorsOperatorSwitchTest_$26 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$26)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$26_init(RxInternalOperatorsOperatorSwitchTest_$26 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$26 *new_RxInternalOperatorsOperatorSwitchTest_$26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$26 *create_RxInternalOperatorsOperatorSwitchTest_$26_init();

@interface RxInternalOperatorsOperatorSwitchTest_$27 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$27)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$27_init(RxInternalOperatorsOperatorSwitchTest_$27 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$27 *new_RxInternalOperatorsOperatorSwitchTest_$27_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$27 *create_RxInternalOperatorsOperatorSwitchTest_$27_init();

@interface RxInternalOperatorsOperatorSwitchTest_$28 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$28)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$28_init(RxInternalOperatorsOperatorSwitchTest_$28 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$28 *new_RxInternalOperatorsOperatorSwitchTest_$28_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$28 *create_RxInternalOperatorsOperatorSwitchTest_$28_init();

@interface RxInternalOperatorsOperatorSwitchTest_$29 : RxSubscriber

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$29)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$29_init(RxInternalOperatorsOperatorSwitchTest_$29 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$29 *new_RxInternalOperatorsOperatorSwitchTest_$29_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$29 *create_RxInternalOperatorsOperatorSwitchTest_$29_init();

@interface RxInternalOperatorsOperatorSwitchTest_$30 : RxObserversTestSubscriber {
 @public
  jint count_;
  IOSLongArray *val$lastSeen_;
  jint val$j_;
}

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithLongArray:(IOSLongArray *)capture$0
                          withInt:(jint)capture$1
                         withLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$30)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$30, val$lastSeen_, IOSLongArray *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(RxInternalOperatorsOperatorSwitchTest_$30 *self, IOSLongArray *capture$0, jint capture$1, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$30 *new_RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(IOSLongArray *capture$0, jint capture$1, jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$30 *create_RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(IOSLongArray *capture$0, jint capture$1, jlong arg$0);

@interface RxInternalOperatorsOperatorSwitchTest_$31 : NSObject < RxFunctionsFunc1 > {
 @public
  jint val$j_;
  id<JavaUtilQueue> val$q_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithInt:(jint)capture$0
          withJavaUtilQueue:(id<JavaUtilQueue>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$31)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$31, val$q_, id<JavaUtilQueue>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(RxInternalOperatorsOperatorSwitchTest_$31 *self, jint capture$0, id<JavaUtilQueue> capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$31 *new_RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(jint capture$0, id<JavaUtilQueue> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$31 *create_RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(jint capture$0, id<JavaUtilQueue> capture$1);

@interface RxInternalOperatorsOperatorSwitchTest_$31_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxInternalOperatorsOperatorSwitchTest_$31 *this$0_;
}

- (void)callWithId:(NSException *)e;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$31:(RxInternalOperatorsOperatorSwitchTest_$31 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$31_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$31_$1, this$0_, RxInternalOperatorsOperatorSwitchTest_$31 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31_$1 *self, RxInternalOperatorsOperatorSwitchTest_$31 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$31_$1 *new_RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$31_$1 *create_RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31 *outer$);

@interface RxInternalOperatorsOperatorSwitchTest_$32 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$error_;
}

- (void)callWithId:(NSException *)e;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchTest_$32)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchTest_$32, val$error_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorSwitchTest_$32 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$32 *new_RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchTest_$32 *create_RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@implementation RxInternalOperatorsOperatorSwitchTest

- (void)before {
  JreStrongAssignAndConsume(&scheduler_, new_RxSchedulersTestScheduler_init());
  JreStrongAssign(&innerScheduler_, [scheduler_ createWorker]);
  JreStrongAssign(&observer_, OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_()));
}

- (void)testSwitchWhenOuterCompleteBeforeInner {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:350 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(2)])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testSwitchWhenInnerCompleteBeforeOuter {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:150 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"four"];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:250 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testSwitchWithComplete {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:90 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:125 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:175 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:225 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:350 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"four"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testSwitchWithError {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:90 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:125 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:175 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"two"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:225 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:350 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
}

- (void)testSwitchWithSubsequenceComplete {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:90 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:125 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:250 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testSwitchWithSubsequenceError {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:90 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:125 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"one"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:250 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:@"three"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
}

- (void)publishCompletedWithRxObserver:(id<RxObserver>)observer
                              withLong:(jlong)delay {
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(self, observer, delay);
}

- (void)publishErrorWithRxObserver:(id<RxObserver>)observer
                          withLong:(jlong)delay
                   withNSException:(NSException *)error {
  RxInternalOperatorsOperatorSwitchTest_publishErrorWithRxObserver_withLong_withNSException_(self, observer, delay, error);
}

- (void)publishNextWithRxObserver:(id<RxObserver>)observer
                         withLong:(jlong)delay
                           withId:(id)value {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(self, observer, delay, value);
}

- (void)testSwitchIssue737 {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *sampled = RxObservable_switchOnNextWithRxObservable_(source);
  [((RxObservable *) nil_chk(sampled)) subscribeWithRxObserver:observer_];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"1-one"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"1-two"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"2-one"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"2-two"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"2-three"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [inOrder verifyNoMoreInteractions];
}

- (void)testBackpressure {
  RxObservable *o1 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *o2 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(self));
  RxObservable *o3 = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$13_init());
  RxObservable *o = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(self, o1, o2, o3));
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_(o))) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(testSubscriber)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:10 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [testSubscriber assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"a1", @"b1", @"c1", @"c2", @"c3", @"c4", @"c5", @"c6", @"c7", @"c8", @"c9", @"c10" } count:12 type:NSString_class_()])];
  [testSubscriber assertNoErrors];
  [testSubscriber assertTerminalEvent];
}

- (void)testUnsubscribe {
  JavaUtilConcurrentAtomicAtomicBoolean *isUnsubscribed = create_JavaUtilConcurrentAtomicAtomicBoolean_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(isUnsubscribed))))) takeWithInt:1])) subscribe];
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"Switch doesn't propagate 'unsubscribe'", [isUnsubscribed get]);
}

- (void)testIssue2654 {
  RxObservable *oneItem = [((RxObservable *) nil_chk(RxObservable_justWithId_(@"Hello"))) mergeWithWithRxObservable:RxObservable_never()];
  RxObservable *src = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(oneItem)) switchMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$17_init()])) share];
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorSwitchTest_$18_init();
  [((RxObservable *) nil_chk(src)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:10 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"> testIssue2654: ", [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size])];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(250, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testInitialRequestsAreAdditive {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$19_init()])) takeWithInt:3]))) subscribeWithRxSubscriber:ts];
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 100];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
}

- (void)testInitialRequestsDontOverflow {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$20_init()])) takeWithInt:3]))) subscribeWithRxSubscriber:ts];
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 1];
  [ts requestMoreWithLong:2];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size] > 0);
}

- (void)testSecondaryRequestsDontOverflow {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$21_init()])) takeWithInt:3]))) subscribeWithRxSubscriber:ts];
  [ts requestMoreWithLong:1];
  JavaLangThread_sleepWithLong_(250);
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 1];
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 1];
  [ts awaitTerminalEvent];
  [ts assertValueCountWithInt:7];
}

- (void)testSecondaryRequestsAdditivelyAreMoreThanLongMaxValueInducesMaxValueRequestFromUpstream {
  id<JavaUtilList> requests = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
  id<RxFunctionsAction1> addRequest = create_RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(requests);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(1);
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(addRequest)])) takeWithInt:3]))) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(250);
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 1];
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE - 1];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size] > 0);
  OrgJunitAssert_assertEqualsWithLong_withLong_(4, [requests size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [((JavaLangLong *) nil_chk([requests getWithInt:[requests size] - 1])) longLongValue]);
}

- (void)mainError {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) switchMapDelayErrorWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$24_init()])) subscribeWithRxSubscriber:ts];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:4 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)innerError {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 3))) switchMapDelayErrorWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$25_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:4 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)innerAllError {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 3))) switchMapDelayErrorWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$26_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:6 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsCompositeException_class_()];
  [ts assertNotCompleted];
  id<JavaUtilList> exceptions = [((RxExceptionsCompositeException *) nil_chk(((RxExceptionsCompositeException *) cast_chk([((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) getWithInt:0], [RxExceptionsCompositeException class])))) getExceptions];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilList>) nil_chk(exceptions)) size]);
  for (NSException * __strong ex in exceptions) {
    OrgJunitAssert_assertTrueWithNSString_withBoolean_([((NSException *) nil_chk(ex)) description], [ex isKindOfClass:[RxExceptionsTestException class]]);
  }
}

- (void)backpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 3))) switchMapDelayErrorWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$27_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:2];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)backpressureWithSwitch {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) switchMapDelayErrorWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$28_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0) } count:1 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0) } count:1 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts requestMoreWithLong:2];
  [source onCompleted];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:4 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)producerIsNotRetained {
  if (CoTouchlabDoppelTestingPlatformUtils_isJ2objc()) return;
  JreStrongAssignAndConsume(&ref_, new_NSObject_init());
  JavaLangRefWeakReference *wr = create_JavaLangRefWeakReference_initWithId_(ref_);
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxSubscriber *observer = create_RxInternalOperatorsOperatorSwitchTest_$29_init();
  [((RxObservable *) nil_chk(RxObservable_switchOnNextWithRxObservable_(ps))) subscribeWithRxSubscriber:observer];
  [((RxSubjectsPublishSubject *) nil_chk(ps)) onNextWithId:RxObservable_justWithId_(ref_)];
  JreStrongAssign(&ref_, nil);
  JavaLangSystem_gc();
  JavaLangThread_sleepWithLong_(500);
  OrgJunitAssert_assertNotNullWithId_(observer);
  OrgJunitAssert_assertNotNullWithId_(ps);
  OrgJunitAssert_assertNullWithNSString_withId_(@"Object retained!", [wr get]);
}

- (void)switchAsyncHeavily {
  @autoreleasepool {
    for (jint i = 1; i < 1024; i *= 2) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"switchAsyncHeavily >> ", i)];
      id<JavaUtilQueue> q = create_JavaUtilConcurrentConcurrentLinkedQueue_init();
      IOSLongArray *lastSeen = [IOSLongArray arrayWithLongs:(jlong[]){ 0LL } count:1];
      jint j = i;
      RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(lastSeen, j, i);
      [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10000))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation() withInt:i])) switchMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(j, q)])) timeoutWithLong:30 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) subscribeWithRxSubscriber:ts];
      [ts awaitTerminalEventWithLong:60 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
      if (![q isEmpty]) {
        JavaLangAssertionError *ae = create_JavaLangAssertionError_initWithId_(@"Dropped exceptions");
        [ae initCauseWithNSException:create_RxExceptionsCompositeException_initWithJavaUtilCollection_(q)];
        @throw ae;
      }
      [ts assertNoErrors];
      if ([ts getCompletions] == 0) {
        OrgJunitAssert_failWithNSString_(JreStrcat("$I$I$J$", @"switchAsyncHeavily timed out @ ", j, @" (", [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size], @" onNexts received, last was ", (JavaLangSystem_currentTimeMillis() - IOSLongArray_Get(lastSeen, 0)), @" ms ago"));
      }
    }
  }
}

- (void)asyncInner {
  for (jint i = 0; i < 100; i++) {
    JavaUtilConcurrentAtomicAtomicReference *error = create_JavaUtilConcurrentAtomicAtomicReference_init();
    [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 1000 * 1000))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()]))) switchMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) ignoreElements])) timeoutWithLong:10 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) toBlocking])) subscribeWithRxFunctionsAction1:RxFunctionsActions_empty() withRxFunctionsAction1:create_RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(error)];
    NSException *ex = [error get];
    if (ex != nil) {
      @throw ex;
    }
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(scheduler_);
  RELEASE_(innerScheduler_);
  RELEASE_(observer_);
  RELEASE_(ref_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x2, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, 15, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, 22, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, 22, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 26, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 27, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 28, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, 30, -1, 31, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 32, -1 },
    { NULL, "V", 0x1, -1, -1, 33, -1, 34, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testSwitchWhenOuterCompleteBeforeInner);
  methods[2].selector = @selector(testSwitchWhenInnerCompleteBeforeOuter);
  methods[3].selector = @selector(testSwitchWithComplete);
  methods[4].selector = @selector(testSwitchWithError);
  methods[5].selector = @selector(testSwitchWithSubsequenceComplete);
  methods[6].selector = @selector(testSwitchWithSubsequenceError);
  methods[7].selector = @selector(publishCompletedWithRxObserver:withLong:);
  methods[8].selector = @selector(publishErrorWithRxObserver:withLong:withNSException:);
  methods[9].selector = @selector(publishNextWithRxObserver:withLong:withId:);
  methods[10].selector = @selector(testSwitchIssue737);
  methods[11].selector = @selector(testBackpressure);
  methods[12].selector = @selector(testUnsubscribe);
  methods[13].selector = @selector(testIssue2654);
  methods[14].selector = @selector(testInitialRequestsAreAdditive);
  methods[15].selector = @selector(testInitialRequestsDontOverflow);
  methods[16].selector = @selector(testSecondaryRequestsDontOverflow);
  methods[17].selector = @selector(testSecondaryRequestsAdditivelyAreMoreThanLongMaxValueInducesMaxValueRequestFromUpstream);
  methods[18].selector = @selector(mainError);
  methods[19].selector = @selector(innerError);
  methods[20].selector = @selector(innerAllError);
  methods[21].selector = @selector(backpressure);
  methods[22].selector = @selector(backpressureWithSwitch);
  methods[23].selector = @selector(producerIsNotRetained);
  methods[24].selector = @selector(switchAsyncHeavily);
  methods[25].selector = @selector(asyncInner);
  methods[26].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "innerScheduler_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 35, -1 },
    { "ref_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$0, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$1, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$2, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$3, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$4, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$5, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$6, "publishCompleted", "LRxObserver;J", "<T:Ljava/lang/Object;>(Lrx/Observer<TT;>;J)V", "publishError", "LRxObserver;JLNSException;", "<T:Ljava/lang/Object;>(Lrx/Observer<TT;>;JLjava/lang/Throwable;)V", "publishNext", "LRxObserver;JLNSObject;", "<T:Ljava/lang/Object;>(Lrx/Observer<TT;>;JTT;)V", (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$7, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$8, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$9, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$10, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$11, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$12, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$13, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$14, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$15, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$16, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$17, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$18, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$19, "LJavaLangException;", (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$20, (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$21, "LNSException;", (void *)&RxInternalOperatorsOperatorSwitchTest__Annotations$22, "Lrx/Observer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest = { "OperatorSwitchTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 27, 4, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest;
}

@end

void RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(observer) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorSwitchTest_publishErrorWithRxObserver_withLong_withNSException_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay, NSException *error) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(observer, error) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(RxInternalOperatorsOperatorSwitchTest *self, id<RxObserver> observer, jlong delay, id value) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(observer, value) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorSwitchTest_init(RxInternalOperatorsOperatorSwitchTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest *new_RxInternalOperatorsOperatorSwitchTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest, init)
}

RxInternalOperatorsOperatorSwitchTest *create_RxInternalOperatorsOperatorSwitchTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitchTest)

@implementation RxInternalOperatorsOperatorSwitchTest_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 50, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_, observer, 60);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWhenOuterCompleteBeforeInner", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$1 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$1 *new_RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$1, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$1 *create_RxInternalOperatorsOperatorSwitchTest_$1_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$1, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$1_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 70, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"two");
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 200);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$1:(RxInternalOperatorsOperatorSwitchTest_$1 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$1;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$1_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1_$1 *self, RxInternalOperatorsOperatorSwitchTest_$1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$1_$1 *new_RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$1_$1, initWithRxInternalOperatorsOperatorSwitchTest_$1_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$1_$1 *create_RxInternalOperatorsOperatorSwitchTest_$1_$1_initWithRxInternalOperatorsOperatorSwitchTest_$1_(RxInternalOperatorsOperatorSwitchTest_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$1_$1, initWithRxInternalOperatorsOperatorSwitchTest_$1_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 10, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 100, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_, observer, 200);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWhenInnerCompleteBeforeOuter", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$2 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$2 *new_RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$2, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$2 *create_RxInternalOperatorsOperatorSwitchTest_$2_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$2, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$2_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 0, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 10, @"two");
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 20);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$2:(RxInternalOperatorsOperatorSwitchTest_$2 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$2;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$2;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$2_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$2_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2_$1 *self, RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$2_$1 *new_RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$2_$1, initWithRxInternalOperatorsOperatorSwitchTest_$2_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$2_$1 *create_RxInternalOperatorsOperatorSwitchTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$2_$1, initWithRxInternalOperatorsOperatorSwitchTest_$2_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$2_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 0, @"three");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 10, @"four");
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 20);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$2:(RxInternalOperatorsOperatorSwitchTest_$2 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$2;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$2;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$2_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$2_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2_$2 *self, RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$2_$2 *new_RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$2_$2, initWithRxInternalOperatorsOperatorSwitchTest_$2_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$2_$2 *create_RxInternalOperatorsOperatorSwitchTest_$2_$2_initWithRxInternalOperatorsOperatorSwitchTest_$2_(RxInternalOperatorsOperatorSwitchTest_$2 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$2_$2, initWithRxInternalOperatorsOperatorSwitchTest_$2_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$3

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 50, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 200, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWithComplete", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$3;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$3 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$3 *new_RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$3, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$3 *create_RxInternalOperatorsOperatorSwitchTest_$3_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$3, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$3_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 60, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"two");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$3:(RxInternalOperatorsOperatorSwitchTest_$3 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$3;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$3_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3_$1 *self, RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$3_$1 *new_RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$3_$1, initWithRxInternalOperatorsOperatorSwitchTest_$3_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$3_$1 *create_RxInternalOperatorsOperatorSwitchTest_$3_$1_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$3_$1, initWithRxInternalOperatorsOperatorSwitchTest_$3_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$3_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 0, @"three");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"four");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$3:(RxInternalOperatorsOperatorSwitchTest_$3 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$3;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$3_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$3_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3_$2 *self, RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$3_$2 *new_RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$3_$2, initWithRxInternalOperatorsOperatorSwitchTest_$3_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$3_$2 *create_RxInternalOperatorsOperatorSwitchTest_$3_$2_initWithRxInternalOperatorsOperatorSwitchTest_$3_(RxInternalOperatorsOperatorSwitchTest_$3 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$3_$2, initWithRxInternalOperatorsOperatorSwitchTest_$3_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$4

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 50, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 200, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishErrorWithRxObserver_withLong_withNSException_(this$0_, observer, 250, create_RxExceptionsTestException_init());
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWithError", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$4;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$4 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$4 *new_RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$4, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$4 *create_RxInternalOperatorsOperatorSwitchTest_$4_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$4, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$4_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 50, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"two");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$4:(RxInternalOperatorsOperatorSwitchTest_$4 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$4:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$4;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$4;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$4_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$4_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4_$1 *self, RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$4_$1 *new_RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$4_$1, initWithRxInternalOperatorsOperatorSwitchTest_$4_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$4_$1 *create_RxInternalOperatorsOperatorSwitchTest_$4_$1_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$4_$1, initWithRxInternalOperatorsOperatorSwitchTest_$4_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$4_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 0, @"three");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"four");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$4:(RxInternalOperatorsOperatorSwitchTest_$4 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$4:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$4;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$4;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$4_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$4_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4_$2 *self, RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$4_$2 *new_RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$4_$2, initWithRxInternalOperatorsOperatorSwitchTest_$4_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$4_$2 *create_RxInternalOperatorsOperatorSwitchTest_$4_$2_initWithRxInternalOperatorsOperatorSwitchTest_$4_(RxInternalOperatorsOperatorSwitchTest_$4 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$4_$2, initWithRxInternalOperatorsOperatorSwitchTest_$4_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$5

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 50, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 130, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 150, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self)));
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWithSubsequenceComplete", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$5;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$5 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$5 *new_RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$5, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$5 *create_RxInternalOperatorsOperatorSwitchTest_$5_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$5, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$5_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 50, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"two");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$5;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$5_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$1 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$5_$1 *new_RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$1, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$5_$1 *create_RxInternalOperatorsOperatorSwitchTest_$5_$1_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$1, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$5_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 0);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$5;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$5_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$5_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$2 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$5_$2 *new_RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$2, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$5_$2 *create_RxInternalOperatorsOperatorSwitchTest_$5_$2_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$2, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$5_$3

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 50, @"three");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$5:(RxInternalOperatorsOperatorSwitchTest_$5 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$5;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$5_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$5_$3;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5_$3 *self, RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$5_$3 *new_RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$3, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$5_$3 *create_RxInternalOperatorsOperatorSwitchTest_$5_$3_initWithRxInternalOperatorsOperatorSwitchTest_$5_(RxInternalOperatorsOperatorSwitchTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$5_$3, initWithRxInternalOperatorsOperatorSwitchTest_$5_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$6

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 50, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 130, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 150, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self)));
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchWithSubsequenceError", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$6;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$6 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$6 *new_RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$6, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$6 *create_RxInternalOperatorsOperatorSwitchTest_$6_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$6, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$6_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 50, @"one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 100, @"two");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$6:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$6;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$6;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$6_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$6_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$1 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$6_$1 *new_RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$1, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$6_$1 *create_RxInternalOperatorsOperatorSwitchTest_$6_$1_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$1, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$6_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishErrorWithRxObserver_withLong_withNSException_(this$0_->this$0_, observer, 0, create_RxExceptionsTestException_init());
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$6:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$6;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$6;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$6_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$6_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$2 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$6_$2 *new_RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$2, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$6_$2 *create_RxInternalOperatorsOperatorSwitchTest_$6_$2_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$2, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$6_$3

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 50, @"three");
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$6:(RxInternalOperatorsOperatorSwitchTest_$6 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$6:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$6;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$6;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$6_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$6_$3;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6_$3 *self, RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$6_$3 *new_RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$3, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$6_$3 *create_RxInternalOperatorsOperatorSwitchTest_$6_$3_initWithRxInternalOperatorsOperatorSwitchTest_$6_(RxInternalOperatorsOperatorSwitchTest_$6 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$6_$3, initWithRxInternalOperatorsOperatorSwitchTest_$6_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$7

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onCompleted];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;", "(Lrx/Observer<TT;>;)V", "Lrx/Observer<TT;>;", "LRxInternalOperatorsOperatorSwitchTest;", "publishCompletedWithRxObserver:withLong:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$7;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(RxInternalOperatorsOperatorSwitchTest_$7 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$7 *new_RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$7, initWithRxObserver_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$7 *create_RxInternalOperatorsOperatorSwitchTest_$7_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$7, initWithRxObserver_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$8

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onErrorWithNSException:val$error_];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                   withNSException:(NSException *)capture$1 {
  RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  RELEASE_(val$error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$error_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LNSException;", "(Lrx/Observer<TT;>;Ljava/lang/Throwable;)V", "Lrx/Observer<TT;>;", "LRxInternalOperatorsOperatorSwitchTest;", "publishErrorWithRxObserver:withLong:withNSException:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$8;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(RxInternalOperatorsOperatorSwitchTest_$8 *self, id<RxObserver> capture$0, NSException *capture$1) {
  JreStrongAssign(&self->val$observer_, capture$0);
  JreStrongAssign(&self->val$error_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$8 *new_RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(id<RxObserver> capture$0, NSException *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$8, initWithRxObserver_withNSException_, capture$0, capture$1)
}

RxInternalOperatorsOperatorSwitchTest_$8 *create_RxInternalOperatorsOperatorSwitchTest_$8_initWithRxObserver_withNSException_(id<RxObserver> capture$0, NSException *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$8, initWithRxObserver_withNSException_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$9

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onNextWithId:val$value_];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1 {
  RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LNSObject;", "(Lrx/Observer<TT;>;TT;)V", "Lrx/Observer<TT;>;", "TT;", "LRxInternalOperatorsOperatorSwitchTest;", "publishNextWithRxObserver:withLong:withId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$9;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(RxInternalOperatorsOperatorSwitchTest_$9 *self, id<RxObserver> capture$0, id capture$1) {
  JreStrongAssign(&self->val$observer_, capture$0);
  JreStrongAssign(&self->val$value_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$9 *new_RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$9, initWithRxObserver_withId_, capture$0, capture$1)
}

RxInternalOperatorsOperatorSwitchTest_$9 *create_RxInternalOperatorsOperatorSwitchTest_$9_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$9, initWithRxObserver_withId_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$10

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 0, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 25, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(self)));
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_, observer, 30);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testSwitchIssue737", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$10;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$10 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$10 *new_RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$10, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$10 *create_RxInternalOperatorsOperatorSwitchTest_$10_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$10, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$10_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 10, @"1-one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 20, @"1-two");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 30, @"1-three");
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 40);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$10:(RxInternalOperatorsOperatorSwitchTest_$10 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$10:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$10;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$10;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$10_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$10_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10_$1 *self, RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$10_$1 *new_RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$10_$1, initWithRxInternalOperatorsOperatorSwitchTest_$10_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$10_$1 *create_RxInternalOperatorsOperatorSwitchTest_$10_$1_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$10_$1, initWithRxInternalOperatorsOperatorSwitchTest_$10_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$10_$2

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 10, @"2-one");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 20, @"2-two");
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_->this$0_, observer, 30, @"2-three");
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_->this$0_, observer, 40);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$10:(RxInternalOperatorsOperatorSwitchTest_$10 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$10:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$10;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest_$10;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$10_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$10_$2;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10_$2 *self, RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$10_$2 *new_RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$10_$2, initWithRxInternalOperatorsOperatorSwitchTest_$10_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$10_$2 *create_RxInternalOperatorsOperatorSwitchTest_$10_$2_initWithRxInternalOperatorsOperatorSwitchTest_$10_(RxInternalOperatorsOperatorSwitchTest_$10 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$10_$2, initWithRxInternalOperatorsOperatorSwitchTest_$10_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$11

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(self, observer)];
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testBackpressure", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$11 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$11;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$11 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$11 *new_RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$11, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$11 *create_RxInternalOperatorsOperatorSwitchTest_$11_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$11, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$11_$1

- (void)requestWithLong:(jlong)n {
  for (jint i = 0; i < n && emitted_ < 10 && ![((RxSubscriber *) nil_chk(val$observer_)) isUnsubscribed]; i++) {
    [((RxSchedulersTestScheduler *) nil_chk(this$0_->this$0_->scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
    emitted_++;
    [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:JreStrcat("CI", 'a', emitted_)];
  }
  if (emitted_ == 10) {
    [((RxSubscriber *) nil_chk(val$observer_)) onCompleted];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$11:(RxInternalOperatorsOperatorSwitchTest_$11 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$11:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$11;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "emitted_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorSwitchTest_$11;LRxSubscriber;", "(Lrx/internal/operators/OperatorSwitchTest$11;Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest_$11;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 3, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$11_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11_$1 *self, RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
  self->emitted_ = 0;
}

RxInternalOperatorsOperatorSwitchTest_$11_$1 *new_RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$11_$1, initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$11_$1 *create_RxInternalOperatorsOperatorSwitchTest_$11_$1_initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$11 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$11_$1, initWithRxInternalOperatorsOperatorSwitchTest_$11_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$12

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(self, observer)];
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testBackpressure", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$12;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest_$12 *self, RxInternalOperatorsOperatorSwitchTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$12 *new_RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$12, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$12 *create_RxInternalOperatorsOperatorSwitchTest_$12_initWithRxInternalOperatorsOperatorSwitchTest_(RxInternalOperatorsOperatorSwitchTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$12, initWithRxInternalOperatorsOperatorSwitchTest_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$12_$1

- (void)requestWithLong:(jlong)n {
  for (jint i = 0; i < n && emitted_ < 10 && ![((RxSubscriber *) nil_chk(val$observer_)) isUnsubscribed]; i++) {
    [((RxSchedulersTestScheduler *) nil_chk(this$0_->this$0_->scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
    emitted_++;
    [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:JreStrcat("CI", 'b', emitted_)];
  }
  if (emitted_ == 10) {
    [((RxSubscriber *) nil_chk(val$observer_)) onCompleted];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$12:(RxInternalOperatorsOperatorSwitchTest_$12 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$12:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$12;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "emitted_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorSwitchTest_$12;LRxSubscriber;", "(Lrx/internal/operators/OperatorSwitchTest$12;Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest_$12;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$12_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 3, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$12_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12_$1 *self, RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
  self->emitted_ = 0;
}

RxInternalOperatorsOperatorSwitchTest_$12_$1 *new_RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$12_$1, initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$12_$1 *create_RxInternalOperatorsOperatorSwitchTest_$12_$1_initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$12 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$12_$1, initWithRxInternalOperatorsOperatorSwitchTest_$12_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$13

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(observer)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testBackpressure", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$13;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$13_init(RxInternalOperatorsOperatorSwitchTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$13 *new_RxInternalOperatorsOperatorSwitchTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$13, init)
}

RxInternalOperatorsOperatorSwitchTest_$13 *create_RxInternalOperatorsOperatorSwitchTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$13, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$13_$1

- (void)requestWithLong:(jlong)n {
  for (jint i = 0; i < n && emitted_ < 10 && ![((RxSubscriber *) nil_chk(val$observer_)) isUnsubscribed]; i++) {
    emitted_++;
    [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:JreStrcat("CI", 'c', emitted_)];
  }
  if (emitted_ == 10) {
    [((RxSubscriber *) nil_chk(val$observer_)) onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "emitted_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Subscriber<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest_$13;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$13_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$13_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchTest_$13_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
  self->emitted_ = 0;
}

RxInternalOperatorsOperatorSwitchTest_$13_$1 *new_RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$13_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$13_$1 *create_RxInternalOperatorsOperatorSwitchTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$13_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$14

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 10, val$o1_);
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 20, val$o2_);
  RxInternalOperatorsOperatorSwitchTest_publishNextWithRxObserver_withLong_withId_(this$0_, observer, 30, val$o3_);
  RxInternalOperatorsOperatorSwitchTest_publishCompletedWithRxObserver_withLong_(this$0_, observer, 30);
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest:(RxInternalOperatorsOperatorSwitchTest *)outer$
                                             withRxObservable:(RxObservable *)capture$0
                                             withRxObservable:(RxObservable *)capture$1
                                             withRxObservable:(RxObservable *)capture$2 {
  RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$o1_);
  RELEASE_(val$o2_);
  RELEASE_(val$o3_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest:withRxObservable:withRxObservable:withRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$o1_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$o2_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$o3_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/String;>;>;)V", "LRxInternalOperatorsOperatorSwitchTest;LRxObservable;LRxObservable;LRxObservable;", "(Lrx/internal/operators/OperatorSwitchTest;Lrx/Observable<Ljava/lang/String;>;Lrx/Observable<Ljava/lang/String;>;Lrx/Observable<Ljava/lang/String;>;)V", "Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testBackpressure", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$14 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 4, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$14;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest_$14 *self, RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$o1_, capture$0);
  JreStrongAssign(&self->val$o2_, capture$1);
  JreStrongAssign(&self->val$o3_, capture$2);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$14 *new_RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$14, initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_, outer$, capture$0, capture$1, capture$2)
}

RxInternalOperatorsOperatorSwitchTest_$14 *create_RxInternalOperatorsOperatorSwitchTest_$14_initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_(RxInternalOperatorsOperatorSwitchTest *outer$, RxObservable *capture$0, RxObservable *capture$1, RxObservable *capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$14, initWithRxInternalOperatorsOperatorSwitchTest_withRxObservable_withRxObservable_withRxObservable_, outer$, capture$0, capture$1, capture$2)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$15

- (void)onStart {
  requested__ = 3;
  [self requestWithLong:3];
}

- (void)onCompleted {
  [((RxObserversTestSubscriber *) nil_chk(val$testSubscriber_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxObserversTestSubscriber *) nil_chk(val$testSubscriber_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(NSString *)s {
  [((RxObserversTestSubscriber *) nil_chk(val$testSubscriber_)) onNextWithId:s];
  requested__--;
  if (requested__ == 0) {
    requested__ = 3;
    [self requestWithLong:3];
  }
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorSwitchTest_$15 class]);
  RELEASE_(val$testSubscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "requested__", "I", .constantValue.asLong = 0, 0x2, 6, -1, -1, -1 },
    { "val$testSubscriber_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/lang/String;>;)V", "requested", "Lrx/observers/TestSubscriber<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testBackpressure", "Lrx/Subscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$15;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorSwitchTest_$15 *self, RxObserversTestSubscriber *capture$0) {
  JreStrongAssign(&self->val$testSubscriber_, capture$0);
  RxSubscriber_init(self);
  self->requested__ = 0;
}

RxInternalOperatorsOperatorSwitchTest_$15 *new_RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$15, initWithRxObserversTestSubscriber_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$15 *create_RxInternalOperatorsOperatorSwitchTest_$15_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$15, initWithRxObserversTestSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$16

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) onNextWithId:RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1))];
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$isUnsubscribed_)) setWithBoolean:[subscriber isUnsubscribed]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$isUnsubscribed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$isUnsubscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<Ljava/lang/Integer;>;>;)V", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorSwitchTest;", "testUnsubscribe", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$16;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchTest_$16 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$isUnsubscribed_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$16 *new_RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$16, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$16 *create_RxInternalOperatorsOperatorSwitchTest_$16_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$16, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$17

- (RxObservable *)callWithId:(NSString *)s {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(s))) mergeWithWithRxObservable:[((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(10, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(s)]])) takeWithInt:250];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "(Ljava/lang/String;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testIssue2654", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$17 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$17;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$17_init(RxInternalOperatorsOperatorSwitchTest_$17 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$17 *new_RxInternalOperatorsOperatorSwitchTest_$17_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$17, init)
}

RxInternalOperatorsOperatorSwitchTest_$17 *create_RxInternalOperatorsOperatorSwitchTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$17, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$17_$1

- (NSString *)callWithId:(JavaLangLong *)i {
  return JreStrcat("$C@", val$s_, ' ', i);
}

- (instancetype)initWithNSString:(NSString *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LNSString;", "LRxInternalOperatorsOperatorSwitchTest_$17;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$17_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$17_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(RxInternalOperatorsOperatorSwitchTest_$17_$1 *self, NSString *capture$0) {
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$17_$1 *new_RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$17_$1, initWithNSString_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$17_$1 *create_RxInternalOperatorsOperatorSwitchTest_$17_$1_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$17_$1, initWithNSString_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$18

- (void)onNextWithId:(NSString *)t {
  [super onNextWithId:t];
  if ([((id<JavaUtilList>) nil_chk([self getOnNextEvents])) size] == 250) {
    [self onCompleted];
    [self unsubscribe];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorSwitchTest_$18 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LNSString;", "(Ljava/lang/String;)V", "LRxInternalOperatorsOperatorSwitchTest;", "testIssue2654", "Lrx/observers/TestSubscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$18;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$18_init(RxInternalOperatorsOperatorSwitchTest_$18 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$18 *new_RxInternalOperatorsOperatorSwitchTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$18, init)
}

RxInternalOperatorsOperatorSwitchTest_$18 *create_RxInternalOperatorsOperatorSwitchTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$18, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$19

- (RxObservable *)callWithId:(JavaLangLong *)t {
  return RxObservable_justWithId_withId_withId_(JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testInitialRequestsAreAdditive", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$19 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$19;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$19_init(RxInternalOperatorsOperatorSwitchTest_$19 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$19 *new_RxInternalOperatorsOperatorSwitchTest_$19_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$19, init)
}

RxInternalOperatorsOperatorSwitchTest_$19 *create_RxInternalOperatorsOperatorSwitchTest_$19_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$19, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$20

- (RxObservable *)callWithId:(JavaLangLong *)t {
  return RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL) } count:3 type:JavaLangLong_class_()]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testInitialRequestsDontOverflow", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$20;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$20_init(RxInternalOperatorsOperatorSwitchTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$20 *new_RxInternalOperatorsOperatorSwitchTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$20, init)
}

RxInternalOperatorsOperatorSwitchTest_$20 *create_RxInternalOperatorsOperatorSwitchTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$20, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$21

- (RxObservable *)callWithId:(JavaLangLong *)t {
  return RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL) } count:3 type:JavaLangLong_class_()]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testSecondaryRequestsDontOverflow", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$21 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$21;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$21_init(RxInternalOperatorsOperatorSwitchTest_$21 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$21 *new_RxInternalOperatorsOperatorSwitchTest_$21_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$21, init)
}

RxInternalOperatorsOperatorSwitchTest_$21 *create_RxInternalOperatorsOperatorSwitchTest_$21_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$21, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$22

- (void)callWithId:(JavaLangLong *)n {
  [((id<JavaUtilList>) nil_chk(val$requests_)) addWithId:n];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "Ljava/util/List<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testSecondaryRequestsAdditivelyAreMoreThanLongMaxValueInducesMaxValueRequestFromUpstream", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$22;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(RxInternalOperatorsOperatorSwitchTest_$22 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$requests_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$22 *new_RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$22, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$22 *create_RxInternalOperatorsOperatorSwitchTest_$22_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$22, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$23

- (RxObservable *)callWithId:(JavaLangLong *)t {
  return [((RxObservable *) nil_chk(RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL) } count:3 type:JavaLangLong_class_()])))) doOnRequestWithRxFunctionsAction1:val$addRequest_];
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$addRequest_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxFunctionsAction1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$addRequest_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Ljava/lang/Long;>;)V", "Lrx/functions/Action1<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchTest;", "testSecondaryRequestsAdditivelyAreMoreThanLongMaxValueInducesMaxValueRequestFromUpstream", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$23 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$23;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(RxInternalOperatorsOperatorSwitchTest_$23 *self, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->val$addRequest_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$23 *new_RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$23, initWithRxFunctionsAction1_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$23 *create_RxInternalOperatorsOperatorSwitchTest_$23_initWithRxFunctionsAction1_(id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$23, initWithRxFunctionsAction1_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$24

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_rangeWithInt_withInt_([((JavaLangInteger *) nil_chk(v)) intValue], 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorSwitchTest;", "mainError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$24 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$24;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$24_init(RxInternalOperatorsOperatorSwitchTest_$24 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$24 *new_RxInternalOperatorsOperatorSwitchTest_$24_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$24, init)
}

RxInternalOperatorsOperatorSwitchTest_$24 *create_RxInternalOperatorsOperatorSwitchTest_$24_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$24, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$25

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return [((JavaLangInteger *) nil_chk(v)) intValue] == 1 ? RxObservable_errorWithNSException_(create_RxExceptionsTestException_init()) : RxObservable_rangeWithInt_withInt_([v intValue], 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorSwitchTest;", "innerError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$25 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$25;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$25_init(RxInternalOperatorsOperatorSwitchTest_$25 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$25 *new_RxInternalOperatorsOperatorSwitchTest_$25_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$25, init)
}

RxInternalOperatorsOperatorSwitchTest_$25 *create_RxInternalOperatorsOperatorSwitchTest_$25_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$25, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$26

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return [((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_([((JavaLangInteger *) nil_chk(v)) intValue], 2))) concatWithWithRxObservable:RxObservable_errorWithNSException_(create_RxExceptionsTestException_init())];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorSwitchTest;", "innerAllError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$26 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$26;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$26_init(RxInternalOperatorsOperatorSwitchTest_$26 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$26 *new_RxInternalOperatorsOperatorSwitchTest_$26_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$26, init)
}

RxInternalOperatorsOperatorSwitchTest_$26 *create_RxInternalOperatorsOperatorSwitchTest_$26_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$26, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$27

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_rangeWithInt_withInt_([((JavaLangInteger *) nil_chk(v)) intValue], 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorSwitchTest;", "backpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$27 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$27;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$27_init(RxInternalOperatorsOperatorSwitchTest_$27 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$27 *new_RxInternalOperatorsOperatorSwitchTest_$27_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$27, init)
}

RxInternalOperatorsOperatorSwitchTest_$27 *create_RxInternalOperatorsOperatorSwitchTest_$27_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$27, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$28

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_rangeWithInt_withInt_([((JavaLangInteger *) nil_chk(v)) intValue], 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorSwitchTest;", "backpressureWithSwitch", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$28 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$28;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$28_init(RxInternalOperatorsOperatorSwitchTest_$28 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$28 *new_RxInternalOperatorsOperatorSwitchTest_$28_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$28, init)
}

RxInternalOperatorsOperatorSwitchTest_$28 *create_RxInternalOperatorsOperatorSwitchTest_$28_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$28, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$29

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id)t {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchTest_$29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorSwitchTest_$29 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "LRxInternalOperatorsOperatorSwitchTest;", "producerIsNotRetained", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$29 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$29;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$29_init(RxInternalOperatorsOperatorSwitchTest_$29 *self) {
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$29 *new_RxInternalOperatorsOperatorSwitchTest_$29_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$29, init)
}

RxInternalOperatorsOperatorSwitchTest_$29 *create_RxInternalOperatorsOperatorSwitchTest_$29_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$29, init)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$30

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  *IOSLongArray_GetRef(nil_chk(val$lastSeen_), 0) = JavaLangSystem_currentTimeMillis();
  if (++count_ == val$j_) {
    count_ = 0;
    [self requestMoreWithLong:val$j_];
  }
}

- (instancetype)initWithLongArray:(IOSLongArray *)capture$0
                          withInt:(jint)capture$1
                         withLong:(jlong)arg$0 {
  RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(self, capture$0, capture$1, arg$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorSwitchTest_$30 class]);
  RELEASE_(val$lastSeen_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(initWithLongArray:withInt:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$lastSeen_", "[J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$j_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "[JIJ", "LRxInternalOperatorsOperatorSwitchTest;", "switchAsyncHeavily", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$30 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 3, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$30;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(RxInternalOperatorsOperatorSwitchTest_$30 *self, IOSLongArray *capture$0, jint capture$1, jlong arg$0) {
  JreStrongAssign(&self->val$lastSeen_, capture$0);
  self->val$j_ = capture$1;
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOperatorSwitchTest_$30 *new_RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(IOSLongArray *capture$0, jint capture$1, jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$30, initWithLongArray_withInt_withLong_, capture$0, capture$1, arg$0)
}

RxInternalOperatorsOperatorSwitchTest_$30 *create_RxInternalOperatorsOperatorSwitchTest_$30_initWithLongArray_withInt_withLong_(IOSLongArray *capture$0, jint capture$1, jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$30, initWithLongArray_withInt_withLong_, capture$0, capture$1, arg$0)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$31

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 1000))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation() withInt:val$j_])) doOnErrorWithRxFunctionsAction1:create_RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(self)];
}

- (instancetype)initWithInt:(jint)capture$0
          withJavaUtilQueue:(id<JavaUtilQueue>)capture$1 {
  RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$q_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithInt:withJavaUtilQueue:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$j_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$q_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "ILJavaUtilQueue;", "(ILjava/util/Queue<Ljava/lang/Throwable;>;)V", "Ljava/util/Queue<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorSwitchTest;", "switchAsyncHeavily", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$31 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$31;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(RxInternalOperatorsOperatorSwitchTest_$31 *self, jint capture$0, id<JavaUtilQueue> capture$1) {
  self->val$j_ = capture$0;
  JreStrongAssign(&self->val$q_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$31 *new_RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(jint capture$0, id<JavaUtilQueue> capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$31, initWithInt_withJavaUtilQueue_, capture$0, capture$1)
}

RxInternalOperatorsOperatorSwitchTest_$31 *create_RxInternalOperatorsOperatorSwitchTest_$31_initWithInt_withJavaUtilQueue_(jint capture$0, id<JavaUtilQueue> capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$31, initWithInt_withJavaUtilQueue_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$31_$1

- (void)callWithId:(NSException *)e {
  [((id<JavaUtilQueue>) nil_chk(this$0_->val$q_)) addWithId:e];
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchTest_$31:(RxInternalOperatorsOperatorSwitchTest_$31 *)outer$ {
  RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchTest_$31:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchTest_$31;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LRxInternalOperatorsOperatorSwitchTest_$31;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$31_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$31_$1;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31_$1 *self, RxInternalOperatorsOperatorSwitchTest_$31 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$31_$1 *new_RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$31_$1, initWithRxInternalOperatorsOperatorSwitchTest_$31_, outer$)
}

RxInternalOperatorsOperatorSwitchTest_$31_$1 *create_RxInternalOperatorsOperatorSwitchTest_$31_$1_initWithRxInternalOperatorsOperatorSwitchTest_$31_(RxInternalOperatorsOperatorSwitchTest_$31 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$31_$1, initWithRxInternalOperatorsOperatorSwitchTest_$31_, outer$)
}

@implementation RxInternalOperatorsOperatorSwitchTest_$32

- (void)callWithId:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$error_)) setWithId:e];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$error_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorSwitchTest;", "asyncInner", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchTest_$32 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorSwitchTest_$32;
}

@end

void RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorSwitchTest_$32 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$error_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchTest_$32 *new_RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchTest_$32, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorSwitchTest_$32 *create_RxInternalOperatorsOperatorSwitchTest_$32_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchTest_$32, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}
