//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorDoOnRequestTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsActions.h"
#include "RxInternalOperatorsOperatorDoOnRequestTest.h"
#include "RxObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$3();

@interface RxInternalOperatorsOperatorDoOnRequestTest_$1 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$unsubscribed_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$1, val$unsubscribed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDoOnRequestTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$1 *new_RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$1 *create_RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorDoOnRequestTest_$2 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(JavaLangLong *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$2_init(RxInternalOperatorsOperatorDoOnRequestTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$2 *new_RxInternalOperatorsOperatorDoOnRequestTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$2 *create_RxInternalOperatorsOperatorDoOnRequestTest_$2_init();

@interface RxInternalOperatorsOperatorDoOnRequestTest_$3 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$requests_;
}

- (void)callWithId:(JavaLangLong *)n;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$3, val$requests_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(RxInternalOperatorsOperatorDoOnRequestTest_$3 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$3 *new_RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$3 *create_RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorDoOnRequestTest_$4 : RxSubscriber

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$4_init(RxInternalOperatorsOperatorDoOnRequestTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$4 *new_RxInternalOperatorsOperatorDoOnRequestTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$4 *create_RxInternalOperatorsOperatorDoOnRequestTest_$4_init();

@interface RxInternalOperatorsOperatorDoOnRequestTest_$5 : NSObject < RxObservable_OnSubscribe > {
 @public
  id<JavaUtilList> val$requested_;
}

- (void)callWithId:(RxSubscriber *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$5, val$requested_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$5 *new_RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$5 *create_RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorDoOnRequestTest_$5 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorDoOnRequestTest_$5:(RxInternalOperatorsOperatorDoOnRequestTest_$5 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1, this$0_, RxInternalOperatorsOperatorDoOnRequestTest_$5 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *self, RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *new_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *create_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$);

@interface RxInternalOperatorsOperatorDoOnRequestTest_$6 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$producer_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$6, val$producer_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorDoOnRequestTest_$6 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$6 *new_RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$6 *create_RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface RxInternalOperatorsOperatorDoOnRequestTest_$7 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$r_;
}

- (void)callWithId:(id)v;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnRequestTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDoOnRequestTest_$7, val$r_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorDoOnRequestTest_$7 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$7 *new_RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDoOnRequestTest_$7 *create_RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@implementation RxInternalOperatorsOperatorDoOnRequestTest

- (void)testUnsubscribeHappensAgainstParent {
  JavaUtilConcurrentAtomicAtomicBoolean *unsubscribed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) doOnUnsubscribeWithRxFunctionsAction0:create_RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(unsubscribed)])) doOnRequestWithRxFunctionsAction1:create_RxInternalOperatorsOperatorDoOnRequestTest_$2_init()])) subscribe];
  OrgJunitAssert_assertTrueWithBoolean_([unsubscribed get]);
}

- (void)testDoRequest {
  id<JavaUtilList> requests = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) doOnRequestWithRxFunctionsAction1:create_RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(requests)])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorDoOnRequestTest_$4_init()];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(3LL), JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL), JavaLangLong_valueOfWithLong_(4LL), JavaLangLong_valueOfWithLong_(5LL) } count:6 type:JavaLangLong_class_()]), requests);
}

- (void)dontRequestIfDownstreamRequestsLate {
  id<JavaUtilList> requested = create_JavaUtilArrayList_init();
  id<RxFunctionsAction1> empty = RxFunctionsActions_empty();
  JavaUtilConcurrentAtomicAtomicReference *producer = create_JavaUtilConcurrentAtomicAtomicReference_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(requested)))) doOnRequestWithRxFunctionsAction1:empty])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(producer)];
  [((id<RxProducer>) nil_chk([producer get])) requestWithLong:1];
  jint s = [requested size];
  if (s == 1) {
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL) } count:1 type:JavaLangLong_class_()]), requested);
  }
  else {
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL), JavaLangLong_valueOfWithLong_(1LL) } count:2 type:JavaLangLong_class_()]), requested);
  }
}

- (void)canCallDoOnRequestWithActionOfTypeObject {
  JavaUtilConcurrentAtomicAtomicReference *r = create_JavaUtilConcurrentAtomicAtomicReference_init();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(@"a"))) doOnRequestWithRxFunctionsAction1:create_RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(r)])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithBoolean_([((JavaLangBoolean *) nil_chk([r get])) booleanValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDoOnRequestTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testUnsubscribeHappensAgainstParent);
  methods[1].selector = @selector(testDoRequest);
  methods[2].selector = @selector(dontRequestIfDownstreamRequestsLate);
  methods[3].selector = @selector(canCallDoOnRequestWithActionOfTypeObject);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorDoOnRequestTest__Annotations$0, (void *)&RxInternalOperatorsOperatorDoOnRequestTest__Annotations$1, (void *)&RxInternalOperatorsOperatorDoOnRequestTest__Annotations$2, (void *)&RxInternalOperatorsOperatorDoOnRequestTest__Annotations$3 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest = { "OperatorDoOnRequestTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_init(RxInternalOperatorsOperatorDoOnRequestTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest *new_RxInternalOperatorsOperatorDoOnRequestTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest, init)
}

RxInternalOperatorsOperatorDoOnRequestTest *create_RxInternalOperatorsOperatorDoOnRequestTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDoOnRequestTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorDoOnRequestTest)

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$unsubscribed_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unsubscribed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unsubscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "testUnsubscribeHappensAgainstParent" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$1;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDoOnRequestTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$unsubscribed_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$1 *new_RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorDoOnRequestTest_$1 *create_RxInternalOperatorsOperatorDoOnRequestTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$2

- (void)callWithId:(JavaLangLong *)n {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDoOnRequestTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "testUnsubscribeHappensAgainstParent", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$2;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$2_init(RxInternalOperatorsOperatorDoOnRequestTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$2 *new_RxInternalOperatorsOperatorDoOnRequestTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$2, init)
}

RxInternalOperatorsOperatorDoOnRequestTest_$2 *create_RxInternalOperatorsOperatorDoOnRequestTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$2, init)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$3

- (void)callWithId:(JavaLangLong *)n {
  [((id<JavaUtilList>) nil_chk(val$requests_)) addWithId:n];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requests_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "Ljava/util/List<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "testDoRequest", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$3;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(RxInternalOperatorsOperatorDoOnRequestTest_$3 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$requests_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$3 *new_RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$3, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorDoOnRequestTest_$3 *create_RxInternalOperatorsOperatorDoOnRequestTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$3, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$4

- (void)onStart {
  [self requestWithLong:3];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [self requestWithLong:[((JavaLangInteger *) nil_chk(t)) intValue]];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDoOnRequestTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "testDoRequest", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 5, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$4;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$4_init(RxInternalOperatorsOperatorDoOnRequestTest_$4 *self) {
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$4 *new_RxInternalOperatorsOperatorDoOnRequestTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$4, init)
}

RxInternalOperatorsOperatorDoOnRequestTest_$4 *create_RxInternalOperatorsOperatorDoOnRequestTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$4, init)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$5

- (void)callWithId:(RxSubscriber *)t {
  [((RxSubscriber *) nil_chk(t)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(self)];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Long;>;)V", "Ljava/util/List<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "dontRequestIfDownstreamRequestsLate", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$5;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$5 *new_RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$5, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorDoOnRequestTest_$5 *create_RxInternalOperatorsOperatorDoOnRequestTest_$5_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$5, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$5_$1

- (void)requestWithLong:(jlong)n {
  [((id<JavaUtilList>) nil_chk(this$0_->val$requested_)) addWithId:JavaLangLong_valueOfWithLong_(n)];
}

- (instancetype)initWithRxInternalOperatorsOperatorDoOnRequestTest_$5:(RxInternalOperatorsOperatorDoOnRequestTest_$5 *)outer$ {
  RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorDoOnRequestTest_$5:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorDoOnRequestTest_$5;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorDoOnRequestTest_$5;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *self, RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *new_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1, initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_, outer$)
}

RxInternalOperatorsOperatorDoOnRequestTest_$5_$1 *create_RxInternalOperatorsOperatorDoOnRequestTest_$5_$1_initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_(RxInternalOperatorsOperatorDoOnRequestTest_$5 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$5_$1, initWithRxInternalOperatorsOperatorDoOnRequestTest_$5_, outer$)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$6

- (void)onNextWithId:(id)t {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onCompleted {
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$producer_)) setWithId:p];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$producer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$producer_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "onError", "LNSException;", "setProducer", "LRxProducer;", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Lrx/Producer;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/Producer;>;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "dontRequestIfDownstreamRequestsLate", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 9, -1, 10, 11, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$6;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorDoOnRequestTest_$6 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$producer_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$6 *new_RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$6, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorDoOnRequestTest_$6 *create_RxInternalOperatorsOperatorDoOnRequestTest_$6_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$6, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation RxInternalOperatorsOperatorDoOnRequestTest_$7

- (void)callWithId:(id)v {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$r_)) setWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$r_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$r_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Boolean;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Boolean;>;", "LRxInternalOperatorsOperatorDoOnRequestTest;", "canCallDoOnRequestWithActionOfTypeObject", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDoOnRequestTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorDoOnRequestTest_$7;
}

@end

void RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorDoOnRequestTest_$7 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$r_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDoOnRequestTest_$7 *new_RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$7, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorDoOnRequestTest_$7 *create_RxInternalOperatorsOperatorDoOnRequestTest_$7_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDoOnRequestTest_$7, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}
