//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/misc/LinkedBlockingQueueTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxDopplMiscLinkedBlockingQueueTest.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/LinkedBlockingQueue.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxDopplMiscLinkedBlockingQueueTest__Annotations$0();

@implementation RxDopplMiscLinkedBlockingQueueTest

- (void)testLBQ {
  JavaUtilConcurrentLinkedBlockingQueue *events = create_JavaUtilConcurrentLinkedBlockingQueue_init();
  for (jint i = 0; i < 100000; i++) {
    [events addWithId:JreStrcat("$I", @"Heyo: ", i)];
  }
  for (NSString * __strong event in events) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"before: ", event)];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxDopplMiscLinkedBlockingQueueTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testLBQ);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxDopplMiscLinkedBlockingQueueTest__Annotations$0 };
  static const J2ObjcClassInfo _RxDopplMiscLinkedBlockingQueueTest = { "LinkedBlockingQueueTest", "rx.doppl.misc", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_RxDopplMiscLinkedBlockingQueueTest;
}

@end

void RxDopplMiscLinkedBlockingQueueTest_init(RxDopplMiscLinkedBlockingQueueTest *self) {
  NSObject_init(self);
}

RxDopplMiscLinkedBlockingQueueTest *new_RxDopplMiscLinkedBlockingQueueTest_init() {
  J2OBJC_NEW_IMPL(RxDopplMiscLinkedBlockingQueueTest, init)
}

RxDopplMiscLinkedBlockingQueueTest *create_RxDopplMiscLinkedBlockingQueueTest_init() {
  J2OBJC_CREATE_IMPL(RxDopplMiscLinkedBlockingQueueTest, init)
}

IOSObjectArray *RxDopplMiscLinkedBlockingQueueTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxDopplMiscLinkedBlockingQueueTest)
