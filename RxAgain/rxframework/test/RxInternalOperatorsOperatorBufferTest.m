//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorBufferTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsBackpressureUtils.h"
#include "RxInternalOperatorsOperatorBufferTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Long.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorBufferTest () {
 @public
  id<RxObserver> observer_;
  RxSchedulersTestScheduler *scheduler_;
  RxScheduler_Worker *innerScheduler_;
}

- (id<JavaUtilList>)listWithNSStringArray:(IOSObjectArray *)args;

- (void)pushWithRxObserver:(id<RxObserver>)observer
                    withId:(id)value
                   withInt:(jint)delay;

- (void)completeWithRxObserver:(id<RxObserver>)observer
                       withInt:(jint)delay;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest, observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest, scheduler_, RxSchedulersTestScheduler *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest, innerScheduler_, RxScheduler_Worker *)

__attribute__((unused)) static id<JavaUtilList> RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(RxInternalOperatorsOperatorBufferTest *self, IOSObjectArray *args);

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(RxInternalOperatorsOperatorBufferTest *self, id<RxObserver> observer, id value, jint delay);

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(RxInternalOperatorsOperatorBufferTest *self, id<RxObserver> observer, jint delay);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$28();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$29();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$30();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$31();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$32();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$33();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$34();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$35();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$36();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$37();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$38();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$39();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$40();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$41();

@interface RxInternalOperatorsOperatorBufferTest_LongTimeAction : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentCountDownLatch *latch_;
  jboolean fail_;
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch;

- (void)callWithId:(id<JavaUtilList>)t1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_LongTimeAction)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_LongTimeAction, latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorBufferTest_LongTimeAction *self, JavaUtilConcurrentCountDownLatch *latch);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_LongTimeAction *new_RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_LongTimeAction *create_RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferTest_LongTimeAction)

@interface RxInternalOperatorsOperatorBufferTest_$1 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$1_init(RxInternalOperatorsOperatorBufferTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$1 *new_RxInternalOperatorsOperatorBufferTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$1 *create_RxInternalOperatorsOperatorBufferTest_$1_init();

@interface RxInternalOperatorsOperatorBufferTest_$2 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$2_init(RxInternalOperatorsOperatorBufferTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$2 *new_RxInternalOperatorsOperatorBufferTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$2 *create_RxInternalOperatorsOperatorBufferTest_$2_init();

@interface RxInternalOperatorsOperatorBufferTest_$3 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$3_init(RxInternalOperatorsOperatorBufferTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$3 *new_RxInternalOperatorsOperatorBufferTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$3 *create_RxInternalOperatorsOperatorBufferTest_$3_init();

@interface RxInternalOperatorsOperatorBufferTest_$4 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$4_init(RxInternalOperatorsOperatorBufferTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$4 *new_RxInternalOperatorsOperatorBufferTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$4 *create_RxInternalOperatorsOperatorBufferTest_$4_init();

@interface RxInternalOperatorsOperatorBufferTest_$5 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$5, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$5 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$5 *new_RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$5 *create_RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$6 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$6, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$6 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$6 *new_RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$6 *create_RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$7 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$7, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$7 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$7 *new_RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$7 *create_RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$8 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$8, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$8 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$8 *new_RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$8 *create_RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$9 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (RxObservable *)callWithId:(id)opening;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$9, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$9 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$9 *new_RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$9 *create_RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$9_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest_$9 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$9:(RxInternalOperatorsOperatorBufferTest_$9 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$9_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$9_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$9 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9_$1 *self, RxInternalOperatorsOperatorBufferTest_$9 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$9_$1 *new_RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$9_$1 *create_RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$10 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$10, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$10 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$10 *new_RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$10 *create_RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$11 : NSObject < RxFunctionsFunc0 > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (RxObservable *)call;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$11)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$11, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$11 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$11 *new_RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$11 *create_RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$11_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxInternalOperatorsOperatorBufferTest_$11 *this$0_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$11:(RxInternalOperatorsOperatorBufferTest_$11 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$11_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$11_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$11 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11_$1 *self, RxInternalOperatorsOperatorBufferTest_$11 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$11_$1 *new_RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$11_$1 *create_RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$12 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
  id val$value_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$12, val$observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$12, val$value_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(RxInternalOperatorsOperatorBufferTest_$12 *self, id<RxObserver> capture$0, id capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$12 *new_RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$12 *create_RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1);

@interface RxInternalOperatorsOperatorBufferTest_$13 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxObserver> val$observer_;
}

- (void)call;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$13)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$13, val$observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(RxInternalOperatorsOperatorBufferTest_$13 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$13 *new_RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$13 *create_RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$14 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (RxObservable *)callWithId:(JavaLangLong *)t1;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$14)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$14, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$14 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$14 *new_RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$14 *create_RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$15 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$15_init(RxInternalOperatorsOperatorBufferTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$15 *new_RxInternalOperatorsOperatorBufferTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$15 *create_RxInternalOperatorsOperatorBufferTest_$15_init();

@interface RxInternalOperatorsOperatorBufferTest_$16 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$16)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$16_init(RxInternalOperatorsOperatorBufferTest_$16 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$16 *new_RxInternalOperatorsOperatorBufferTest_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$16 *create_RxInternalOperatorsOperatorBufferTest_$16_init();

@interface RxInternalOperatorsOperatorBufferTest_$17 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$17)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$17_init(RxInternalOperatorsOperatorBufferTest_$17 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$17 *new_RxInternalOperatorsOperatorBufferTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$17 *create_RxInternalOperatorsOperatorBufferTest_$17_init();

@interface RxInternalOperatorsOperatorBufferTest_$18 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$18)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$18, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$18 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$18 *new_RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$18 *create_RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$18_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$18 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$18:(RxInternalOperatorsOperatorBufferTest_$18 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$18_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$18_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$18 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18_$1 *self, RxInternalOperatorsOperatorBufferTest_$18 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$18_$1 *new_RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$18_$1 *create_RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$19 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$19)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$19, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$19 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$19 *new_RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$19 *create_RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$19_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$19 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$19:(RxInternalOperatorsOperatorBufferTest_$19 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$19_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$19_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$19 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19_$1 *self, RxInternalOperatorsOperatorBufferTest_$19 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$19_$1 *new_RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$19_$1 *create_RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$20 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$20)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$20, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$20 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$20 *new_RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$20 *create_RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$20_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$20 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$20:(RxInternalOperatorsOperatorBufferTest_$20 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$20_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$20_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$20 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20_$1 *self, RxInternalOperatorsOperatorBufferTest_$20 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$20_$1 *new_RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$20_$1 *create_RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$21 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$21)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$21, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$21 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$21 *new_RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$21 *create_RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$21_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$21 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$21:(RxInternalOperatorsOperatorBufferTest_$21 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$21_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$21_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$21 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21_$1 *self, RxInternalOperatorsOperatorBufferTest_$21 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$21_$1 *new_RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$21_$1 *create_RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$22 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$22, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$22 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$22 *new_RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$22 *create_RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$22_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$22 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$22:(RxInternalOperatorsOperatorBufferTest_$22 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$22_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$22_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$22 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22_$1 *self, RxInternalOperatorsOperatorBufferTest_$22 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$22_$1 *new_RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$22_$1 *create_RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$23 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$23)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$23, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$23 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$23 *new_RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$23 *create_RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$23_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$23 *this$0_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$23:(RxInternalOperatorsOperatorBufferTest_$23 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$23_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$23_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$23 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23_$1 *self, RxInternalOperatorsOperatorBufferTest_$23 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$23_$1 *new_RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$23_$1 *create_RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23 *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$24 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$requested_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$24)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$24, val$requested_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$24 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$24 *new_RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$24 *create_RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$24_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorBufferTest_$24 *this$0_;
  RxSubscriber *val$s_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$24:(RxInternalOperatorsOperatorBufferTest_$24 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$24_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$24_$1, this$0_, RxInternalOperatorsOperatorBufferTest_$24 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$24_$1, val$s_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24_$1 *self, RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$24_$1 *new_RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$24_$1 *create_RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorBufferTest_$25 : RxSubscriber

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id<JavaUtilList>)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$25)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$25_init(RxInternalOperatorsOperatorBufferTest_$25 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$25 *new_RxInternalOperatorsOperatorBufferTest_$25_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$25 *create_RxInternalOperatorsOperatorBufferTest_$25_init();

@interface RxInternalOperatorsOperatorBufferTest_$26 : RxSubscriber {
 @public
  id<RxObserver> val$o_;
  JavaUtilConcurrentCountDownLatch *val$cdl_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$26)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$26, val$o_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$26, val$cdl_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorBufferTest_$26 *self, id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$26 *new_RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$26 *create_RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

@interface RxInternalOperatorsOperatorBufferTest_$27 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (RxScheduler *)callWithId:(RxScheduler *)t;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$27)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$27, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$27 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$27 *new_RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$27 *create_RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@interface RxInternalOperatorsOperatorBufferTest_$28 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorBufferTest *this$0_;
}

- (RxScheduler *)callWithId:(RxScheduler *)t;

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferTest_$28)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferTest_$28, this$0_, RxInternalOperatorsOperatorBufferTest *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$28 *self, RxInternalOperatorsOperatorBufferTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$28 *new_RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferTest_$28 *create_RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$);

@implementation RxInternalOperatorsOperatorBufferTest

- (void)before {
  JreStrongAssign(&observer_, OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_()));
  JreStrongAssignAndConsume(&scheduler_, new_RxSchedulersTestScheduler_init());
  JreStrongAssign(&innerScheduler_, [scheduler_ createWorker]);
}

- (void)testComplete {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$1_init());
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithInt:3 withInt:3];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testSkipAndCountOverlappingBuffers {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$2_init());
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithInt:3 withInt:1];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"two", @"three", @"four" } count:3 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"three", @"four", @"five" } count:3 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
}

- (void)testSkipAndCountGaplessBuffers {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$3_init());
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithInt:3 withInt:3];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testSkipAndCountBuffersWithGaps {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$4_init());
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithInt:2 withInt:3];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testTimedAndCount {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(self));
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withInt:2 withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()])];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"three", @"four" } count:2 type:NSString_class_()])];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:300 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"five" } count:1 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testTimed {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(self));
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:101 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"three" } count:3 type:NSString_class_()])];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:201 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testObservableBasedOpenerAndCloser {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(self));
  RxObservable *openings = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(self));
  id<RxFunctionsFunc1> closer = create_RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(self);
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithRxObservable:openings withRxFunctionsFunc1:closer];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"two", @"three" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"five" } count:1 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testObservableBasedCloser {
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(self));
  id<RxFunctionsFunc0> closer = create_RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(self);
  RxObservable *buffered = [((RxObservable *) nil_chk(source)) bufferWithRxFunctionsFunc0:closer];
  [((RxObservable *) nil_chk(buffered)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"three", @"four" } count:2 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"five" } count:1 type:NSString_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyListOfWithIOSClass_(NSString_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testLongTimeAction {
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  RxInternalOperatorsOperatorBufferTest_LongTimeAction *action = create_RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(latch);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) bufferWithLong:10 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withInt:10])) subscribeWithRxFunctionsAction1:action];
  [latch await];
  OrgJunitAssert_assertFalseWithBoolean_(action->fail_);
}

- (id<JavaUtilList>)listWithNSStringArray:(IOSObjectArray *)args {
  return RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(self, args);
}

- (void)pushWithRxObserver:(id<RxObserver>)observer
                    withId:(id)value
                   withInt:(jint)delay {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(self, observer, value, delay);
}

- (void)completeWithRxObserver:(id<RxObserver>)observer
                       withInt:(jint)delay {
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(self, observer, delay);
}

- (void)testBufferStopsWhenUnsubscribed1 {
  RxObservable *source = RxObservable_never();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<RxSubscription> s = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithLong:100 withLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_])) subscribeWithRxObserver:o];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1001 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(5)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithLength:0 type:JavaLangInteger_class_()])];
  [((id<RxSubscription>) nil_chk(s)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:999 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [inOrder verifyNoMoreInteractions];
}

- (void)bufferWithBONormal1 {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((RxSubjectsPublishSubject *) nil_chk(boundary)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()])];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(5)];
  [boundary onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:2 type:JavaLangInteger_class_()])];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(6)];
  [boundary onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(6) } count:1 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithBOEmptyLastViaBoundary {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [((RxSubjectsPublishSubject *) nil_chk(boundary)) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithLength:0 type:NSObject_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithBOEmptyLastViaSource {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [source onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithLength:0 type:NSObject_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithBOEmptyLastViaBoth {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [source onCompleted];
  [((RxSubjectsPublishSubject *) nil_chk(boundary)) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithLength:0 type:NSObject_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithBOSourceThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)bufferWithBOBoundaryThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *boundary = RxSubjectsPublishSubject_create();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:boundary])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(boundary)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)bufferWithSizeTake1 {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) repeat];
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithInt:2])) takeWithInt:1];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(1) } count:2 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithSizeSkipTake1 {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) repeat];
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithInt:2 withInt:3])) takeWithInt:1];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(1) } count:2 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithTimeTake1 {
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(40, 40, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_])) takeWithInt:1];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL), JavaLangLong_valueOfWithLong_(1LL) } count:2 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithTimeSkipTake2 {
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(40, 40, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithLong:100 withLong:60 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_])) takeWithInt:2];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL), JavaLangLong_valueOfWithLong_(1LL) } count:2 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL) } count:2 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithBoundaryTake2 {
  RxObservable *boundary = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(60, 60, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(40, 40, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithRxObservable:boundary])) takeWithInt:2];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL) } count:1 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL) } count:1 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithStartEndBoundaryTake2 {
  RxObservable *start = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(61, 61, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  id<RxFunctionsFunc1> end = create_RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(self);
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(40, 40, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithRxObservable:start withRxFunctionsFunc1:end])) takeWithInt:2];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL) } count:3 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(3LL), JavaLangLong_valueOfWithLong_(4LL) } count:2 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithSizeThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithInt:2];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3) } count:1 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)bufferWithTimeThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3) } count:1 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)bufferWithTimeAndSize {
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(30, 30, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  RxObservable *result = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) bufferWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withInt:2 withRxScheduler:scheduler_])) takeWithInt:3];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL), JavaLangLong_valueOfWithLong_(1LL) } count:2 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(2LL) } count:1 type:JavaLangLong_class_()])];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)bufferWithStartEndStartThrows {
  RxSubjectsPublishSubject *start = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> end = create_RxInternalOperatorsOperatorBufferTest_$15_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:start withRxFunctionsFunc1:end];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSubjectsPublishSubject *) nil_chk(start)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [start onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
}

- (void)bufferWithStartEndEndFunctionThrows {
  RxSubjectsPublishSubject *start = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> end = create_RxInternalOperatorsOperatorBufferTest_$16_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:start withRxFunctionsFunc1:end];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSubjectsPublishSubject *) nil_chk(start)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
}

- (void)bufferWithStartEndEndThrows {
  RxSubjectsPublishSubject *start = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> end = create_RxInternalOperatorsOperatorBufferTest_$17_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) bufferWithRxObservable:start withRxFunctionsFunc1:end];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((RxSubjectsPublishSubject *) nil_chk(start)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
}

- (void)testProducerRequestThroughBufferWithSize1 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:3];
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:5 withInt:5])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(15, [requested get]);
  [ts requestMoreWithLong:4];
  OrgJunitAssert_assertEqualsWithLong_withLong_(20, [requested get]);
}

- (void)testProducerRequestThroughBufferWithSize2 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:5 withInt:5])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [requested get]);
}

- (void)testProducerRequestThroughBufferWithSize3 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:3];
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:5 withInt:2])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(9, [requested get]);
  [ts requestMoreWithLong:3];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [requested get]);
}

- (void)testProducerRequestThroughBufferWithSize4 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:5 withInt:2])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [requested get]);
}

- (void)testProducerRequestOverflowThroughBufferWithSize1 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE / 2];
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:3 withInt:3])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [requested get]);
}

- (void)testProducerRequestOverflowThroughBufferWithSize2 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:JavaLangLong_MAX_VALUE / 2];
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:3 withInt:2])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [requested get]);
}

- (void)testProducerRequestOverflowThroughBufferWithSize3 {
  JavaUtilConcurrentAtomicAtomicLong *requested = create_JavaUtilConcurrentAtomicAtomicLong_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(requested)))) bufferWithInt:3 withInt:2])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorBufferTest_$25_init()];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, [requested get]);
}

- (void)testBufferWithTimeDoesntUnsubscribeDownstream {
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  JavaUtilConcurrentCountDownLatch *cdl = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  RxSubscriber *s = create_RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(o, cdl);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 1))) delayWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) bufferWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) unsafeSubscribeWithRxSubscriber:s];
  [cdl await];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  OrgJunitAssert_assertFalseWithBoolean_([s isUnsubscribed]);
}

- (void)testPostCompleteBackpressure {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 10))) bufferWithInt:3 withInt:1];
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:7];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:3 type:JavaLangInteger_class_()]) } count:7 type:JavaUtilList_class_()]];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:3 type:JavaLangInteger_class_()]) } count:8 type:JavaUtilList_class_()]];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:2 type:JavaLangInteger_class_()]) } count:9 type:JavaUtilList_class_()]];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:3 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(10) } count:1 type:JavaLangInteger_class_()]) } count:10 type:JavaUtilList_class_()]];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)timeAndSkipOverlap {
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) bufferWithLong:2 withLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler_])) subscribeWithRxSubscriber:ts];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4) } count:1 type:JavaLangInteger_class_()]), JavaUtilCollections_emptyList() } count:5 type:JavaUtilList_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)timeAndSkipSkip {
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) bufferWithLong:2 withLong:3 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler_])) subscribeWithRxSubscriber:ts];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ps onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4) } count:1 type:JavaLangInteger_class_()]) } count:2 type:JavaUtilList_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)timeAndSkipOverlapScheduler {
  RxPluginsRxJavaHooks_setOnComputationSchedulerWithRxFunctionsFunc1_(create_RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(self));
  @try {
    RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) bufferWithLong:2 withLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) subscribeWithRxSubscriber:ts];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onCompleted];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4) } count:1 type:JavaLangInteger_class_()]), JavaUtilCollections_emptyList() } count:5 type:JavaUtilList_class_()]];
    [ts assertNoErrors];
    [ts assertCompleted];
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

- (void)timeAndSkipSkipDefaultScheduler {
  RxPluginsRxJavaHooks_setOnComputationSchedulerWithRxFunctionsFunc1_(create_RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(self));
  @try {
    RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) bufferWithLong:2 withLong:3 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)])) subscribeWithRxSubscriber:ts];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
    [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
    [ps onCompleted];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4) } count:1 type:JavaLangInteger_class_()]) } count:2 type:JavaUtilList_class_()]];
    [ts assertNoErrors];
    [ts assertCompleted];
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(observer_);
  RELEASE_(scheduler_);
  RELEASE_(innerScheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, 9, -1, 10, -1 },
    { NULL, "LJavaUtilList;", 0x82, 11, 12, -1, 13, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, 19, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 26, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 27, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 28, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 31, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 32, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 33, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 34, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 35, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 36, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 37, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 38, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 39, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 40, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 41, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 42, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 43, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 44, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 45, -1 },
    { NULL, "V", 0x1, -1, -1, 9, -1, 46, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 47, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 48, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 49, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 50, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 51, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testComplete);
  methods[2].selector = @selector(testSkipAndCountOverlappingBuffers);
  methods[3].selector = @selector(testSkipAndCountGaplessBuffers);
  methods[4].selector = @selector(testSkipAndCountBuffersWithGaps);
  methods[5].selector = @selector(testTimedAndCount);
  methods[6].selector = @selector(testTimed);
  methods[7].selector = @selector(testObservableBasedOpenerAndCloser);
  methods[8].selector = @selector(testObservableBasedCloser);
  methods[9].selector = @selector(testLongTimeAction);
  methods[10].selector = @selector(listWithNSStringArray:);
  methods[11].selector = @selector(pushWithRxObserver:withId:withInt:);
  methods[12].selector = @selector(completeWithRxObserver:withInt:);
  methods[13].selector = @selector(testBufferStopsWhenUnsubscribed1);
  methods[14].selector = @selector(bufferWithBONormal1);
  methods[15].selector = @selector(bufferWithBOEmptyLastViaBoundary);
  methods[16].selector = @selector(bufferWithBOEmptyLastViaSource);
  methods[17].selector = @selector(bufferWithBOEmptyLastViaBoth);
  methods[18].selector = @selector(bufferWithBOSourceThrows);
  methods[19].selector = @selector(bufferWithBOBoundaryThrows);
  methods[20].selector = @selector(bufferWithSizeTake1);
  methods[21].selector = @selector(bufferWithSizeSkipTake1);
  methods[22].selector = @selector(bufferWithTimeTake1);
  methods[23].selector = @selector(bufferWithTimeSkipTake2);
  methods[24].selector = @selector(bufferWithBoundaryTake2);
  methods[25].selector = @selector(bufferWithStartEndBoundaryTake2);
  methods[26].selector = @selector(bufferWithSizeThrows);
  methods[27].selector = @selector(bufferWithTimeThrows);
  methods[28].selector = @selector(bufferWithTimeAndSize);
  methods[29].selector = @selector(bufferWithStartEndStartThrows);
  methods[30].selector = @selector(bufferWithStartEndEndFunctionThrows);
  methods[31].selector = @selector(bufferWithStartEndEndThrows);
  methods[32].selector = @selector(testProducerRequestThroughBufferWithSize1);
  methods[33].selector = @selector(testProducerRequestThroughBufferWithSize2);
  methods[34].selector = @selector(testProducerRequestThroughBufferWithSize3);
  methods[35].selector = @selector(testProducerRequestThroughBufferWithSize4);
  methods[36].selector = @selector(testProducerRequestOverflowThroughBufferWithSize1);
  methods[37].selector = @selector(testProducerRequestOverflowThroughBufferWithSize2);
  methods[38].selector = @selector(testProducerRequestOverflowThroughBufferWithSize3);
  methods[39].selector = @selector(testBufferWithTimeDoesntUnsubscribeDownstream);
  methods[40].selector = @selector(testPostCompleteBackpressure);
  methods[41].selector = @selector(timeAndSkipOverlap);
  methods[42].selector = @selector(timeAndSkipSkip);
  methods[43].selector = @selector(timeAndSkipOverlapScheduler);
  methods[44].selector = @selector(timeAndSkipSkipDefaultScheduler);
  methods[45].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 52, -1 },
    { "scheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "innerScheduler_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$0, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$1, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$2, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$3, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$4, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$5, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$6, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$7, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$8, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$9, "list", "[LNSString;", "([Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;", "push", "LRxObserver;LNSObject;I", "<T:Ljava/lang/Object;>(Lrx/Observer<TT;>;TT;I)V", "complete", "LRxObserver;I", "(Lrx/Observer<*>;I)V", (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$10, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$11, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$12, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$13, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$14, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$15, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$16, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$17, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$18, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$19, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$20, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$21, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$22, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$23, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$24, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$25, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$26, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$27, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$28, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$29, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$30, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$31, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$32, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$33, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$34, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$35, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$36, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$37, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$38, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$39, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$40, (void *)&RxInternalOperatorsOperatorBufferTest__Annotations$41, "Lrx/Observer<Ljava/util/List<Ljava/lang/String;>;>;", "LRxInternalOperatorsOperatorBufferTest_LongTimeAction;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest = { "OperatorBufferTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 46, 3, -1, 53, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest;
}

@end

id<JavaUtilList> RxInternalOperatorsOperatorBufferTest_listWithNSStringArray_(RxInternalOperatorsOperatorBufferTest *self, IOSObjectArray *args) {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      [list addWithId:arg];
    }
  }
  return list;
}

void RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(RxInternalOperatorsOperatorBufferTest *self, id<RxObserver> observer, id value, jint delay) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(observer, value) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(RxInternalOperatorsOperatorBufferTest *self, id<RxObserver> observer, jint delay) {
  [((RxScheduler_Worker *) nil_chk(self->innerScheduler_)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(observer) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

void RxInternalOperatorsOperatorBufferTest_init(RxInternalOperatorsOperatorBufferTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest *new_RxInternalOperatorsOperatorBufferTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest, init)
}

RxInternalOperatorsOperatorBufferTest *create_RxInternalOperatorsOperatorBufferTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 2000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$32() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$33() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$34() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$35() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$36() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 3000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$37() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$38() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$39() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$40() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorBufferTest__Annotations$41() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferTest)

@implementation RxInternalOperatorsOperatorBufferTest_LongTimeAction

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch {
  RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(self, latch);
  return self;
}

- (void)callWithId:(id<JavaUtilList>)t1 {
  @try {
    if (fail_) {
      return;
    }
    JavaLangThread_sleepWithLong_(200);
  }
  @catch (JavaLangInterruptedException *e) {
    fail_ = true;
  }
  @finally {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(latch_)) countDown];
  }
}

- (void)dealloc {
  RELEASE_(latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fail_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentCountDownLatch;", "call", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_LongTimeAction = { "LongTimeAction", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 2, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_LongTimeAction;
}

@end

void RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorBufferTest_LongTimeAction *self, JavaUtilConcurrentCountDownLatch *latch) {
  NSObject_init(self);
  self->fail_ = false;
  JreStrongAssign(&self->latch_, latch);
}

RxInternalOperatorsOperatorBufferTest_LongTimeAction *new_RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_LongTimeAction, initWithJavaUtilConcurrentCountDownLatch_, latch)
}

RxInternalOperatorsOperatorBufferTest_LongTimeAction *create_RxInternalOperatorsOperatorBufferTest_LongTimeAction_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *latch) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_LongTimeAction, initWithJavaUtilConcurrentCountDownLatch_, latch)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferTest_LongTimeAction)

@implementation RxInternalOperatorsOperatorBufferTest_$1

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testComplete", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$1_init(RxInternalOperatorsOperatorBufferTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$1 *new_RxInternalOperatorsOperatorBufferTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$1, init)
}

RxInternalOperatorsOperatorBufferTest_$1 *create_RxInternalOperatorsOperatorBufferTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$1, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$2

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:@"one"];
  [observer onNextWithId:@"two"];
  [observer onNextWithId:@"three"];
  [observer onNextWithId:@"four"];
  [observer onNextWithId:@"five"];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testSkipAndCountOverlappingBuffers", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$2;
}

@end

void RxInternalOperatorsOperatorBufferTest_$2_init(RxInternalOperatorsOperatorBufferTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$2 *new_RxInternalOperatorsOperatorBufferTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$2, init)
}

RxInternalOperatorsOperatorBufferTest_$2 *create_RxInternalOperatorsOperatorBufferTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$2, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$3

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:@"one"];
  [observer onNextWithId:@"two"];
  [observer onNextWithId:@"three"];
  [observer onNextWithId:@"four"];
  [observer onNextWithId:@"five"];
  [observer onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testSkipAndCountGaplessBuffers", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$3;
}

@end

void RxInternalOperatorsOperatorBufferTest_$3_init(RxInternalOperatorsOperatorBufferTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$3 *new_RxInternalOperatorsOperatorBufferTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$3, init)
}

RxInternalOperatorsOperatorBufferTest_$3 *create_RxInternalOperatorsOperatorBufferTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$3, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$4

- (void)callWithId:(RxSubscriber *)observer {
  [((RxSubscriber *) nil_chk(observer)) onNextWithId:@"one"];
  [observer onNextWithId:@"two"];
  [observer onNextWithId:@"three"];
  [observer onNextWithId:@"four"];
  [observer onNextWithId:@"five"];
  [observer onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testSkipAndCountBuffersWithGaps", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$4;
}

@end

void RxInternalOperatorsOperatorBufferTest_$4_init(RxInternalOperatorsOperatorBufferTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$4 *new_RxInternalOperatorsOperatorBufferTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$4, init)
}

RxInternalOperatorsOperatorBufferTest_$4 *create_RxInternalOperatorsOperatorBufferTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$4, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$5

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 10);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 90);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 110);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 190);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 210);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testTimedAndCount", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$5;
}

@end

void RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$5 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$5 *new_RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$5, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$5 *create_RxInternalOperatorsOperatorBufferTest_$5_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$5, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$6

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 97);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 98);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 99);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 101);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 102);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_, observer, 150);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testTimed", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$6;
}

@end

void RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$6 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$6 *new_RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$6, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$6 *create_RxInternalOperatorsOperatorBufferTest_$6_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$6, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$7

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 10);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 60);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 110);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 160);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 210);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_, observer, 500);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$7;
}

@end

void RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$7 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$7 *new_RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$7, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$7 *create_RxInternalOperatorsOperatorBufferTest_$7_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$7, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$8

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, create_NSObject_init(), 50);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, create_NSObject_init(), 200);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$8;
}

@end

void RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$8 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$8 *new_RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$8, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$8 *create_RxInternalOperatorsOperatorBufferTest_$8_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$8, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$9

- (RxObservable *)callWithId:(id)opening {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(self));
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "(Ljava/lang/Object;)Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorBufferTest;", "testObservableBasedOpenerAndCloser", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$9;
}

@end

void RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$9 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$9 *new_RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$9, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$9 *create_RxInternalOperatorsOperatorBufferTest_$9_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$9, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$9_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 100);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_->this$0_, observer, 101);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$9:(RxInternalOperatorsOperatorBufferTest_$9 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$9:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$9;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorBufferTest_$9;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$9_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$9_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9_$1 *self, RxInternalOperatorsOperatorBufferTest_$9 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$9_$1 *new_RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$9_$1, initWithRxInternalOperatorsOperatorBufferTest_$9_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$9_$1 *create_RxInternalOperatorsOperatorBufferTest_$9_$1_initWithRxInternalOperatorsOperatorBufferTest_$9_(RxInternalOperatorsOperatorBufferTest_$9 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$9_$1, initWithRxInternalOperatorsOperatorBufferTest_$9_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$10

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"one", 10);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"two", 60);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"three", 110);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"four", 160);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_, observer, @"five", 210);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_, observer, 250);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testObservableBasedCloser", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$10;
}

@end

void RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$10 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$10 *new_RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$10, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$10 *create_RxInternalOperatorsOperatorBufferTest_$10_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$10, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$11

- (RxObservable *)call {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(self));
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorBufferTest;", "testObservableBasedCloser", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$11 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$11;
}

@end

void RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$11 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$11 *new_RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$11, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$11 *create_RxInternalOperatorsOperatorBufferTest_$11_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$11, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$11_$1

- (void)callWithId:(RxSubscriber *)observer {
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 100);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 200);
  RxInternalOperatorsOperatorBufferTest_pushWithRxObserver_withId_withInt_(this$0_->this$0_, observer, create_NSObject_init(), 300);
  RxInternalOperatorsOperatorBufferTest_completeWithRxObserver_withInt_(this$0_->this$0_, observer, 301);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$11:(RxInternalOperatorsOperatorBufferTest_$11 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$11:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$11;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LRxInternalOperatorsOperatorBufferTest_$11;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 0, 4, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$11_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11_$1 *self, RxInternalOperatorsOperatorBufferTest_$11 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$11_$1 *new_RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$11_$1, initWithRxInternalOperatorsOperatorBufferTest_$11_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$11_$1 *create_RxInternalOperatorsOperatorBufferTest_$11_$1_initWithRxInternalOperatorsOperatorBufferTest_$11_(RxInternalOperatorsOperatorBufferTest_$11 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$11_$1, initWithRxInternalOperatorsOperatorBufferTest_$11_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$12

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onNextWithId:val$value_];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
                            withId:(id)capture$1 {
  RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LNSObject;", "(Lrx/Observer<TT;>;TT;)V", "Lrx/Observer<TT;>;", "TT;", "LRxInternalOperatorsOperatorBufferTest;", "pushWithRxObserver:withId:withInt:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$12;
}

@end

void RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(RxInternalOperatorsOperatorBufferTest_$12 *self, id<RxObserver> capture$0, id capture$1) {
  JreStrongAssign(&self->val$observer_, capture$0);
  JreStrongAssign(&self->val$value_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$12 *new_RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$12, initWithRxObserver_withId_, capture$0, capture$1)
}

RxInternalOperatorsOperatorBufferTest_$12 *create_RxInternalOperatorsOperatorBufferTest_$12_initWithRxObserver_withId_(id<RxObserver> capture$0, id capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$12, initWithRxObserver_withId_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorBufferTest_$13

- (void)call {
  [((id<RxObserver>) nil_chk(val$observer_)) onCompleted];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;", "(Lrx/Observer<*>;)V", "Lrx/Observer<*>;", "LRxInternalOperatorsOperatorBufferTest;", "completeWithRxObserver:withInt:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$13 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$13;
}

@end

void RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(RxInternalOperatorsOperatorBufferTest_$13 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$13 *new_RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$13, initWithRxObserver_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$13 *create_RxInternalOperatorsOperatorBufferTest_$13_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$13, initWithRxObserver_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$14

- (RxObservable *)callWithId:(JavaLangLong *)t1 {
  return RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), this$0_->scheduler_);
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorBufferTest;", "bufferWithStartEndBoundaryTake2", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$14 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$14;
}

@end

void RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$14 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$14 *new_RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$14, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$14 *create_RxInternalOperatorsOperatorBufferTest_$14_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$14, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$15

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return RxObservable_never();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorBufferTest;", "bufferWithStartEndStartThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$15;
}

@end

void RxInternalOperatorsOperatorBufferTest_$15_init(RxInternalOperatorsOperatorBufferTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$15 *new_RxInternalOperatorsOperatorBufferTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$15, init)
}

RxInternalOperatorsOperatorBufferTest_$15 *create_RxInternalOperatorsOperatorBufferTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$15, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$16

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorBufferTest;", "bufferWithStartEndEndFunctionThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$16 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$16;
}

@end

void RxInternalOperatorsOperatorBufferTest_$16_init(RxInternalOperatorsOperatorBufferTest_$16 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$16 *new_RxInternalOperatorsOperatorBufferTest_$16_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$16, init)
}

RxInternalOperatorsOperatorBufferTest_$16 *create_RxInternalOperatorsOperatorBufferTest_$16_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$16, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$17

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return RxObservable_errorWithNSException_(create_RxExceptionsTestException_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorBufferTest;", "bufferWithStartEndEndThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$17 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$17;
}

@end

void RxInternalOperatorsOperatorBufferTest_$17_init(RxInternalOperatorsOperatorBufferTest_$17 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$17 *new_RxInternalOperatorsOperatorBufferTest_$17_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$17, init)
}

RxInternalOperatorsOperatorBufferTest_$17 *create_RxInternalOperatorsOperatorBufferTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$17, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$18

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestThroughBufferWithSize1", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$18 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$18;
}

@end

void RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$18 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$18 *new_RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$18, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$18 *create_RxInternalOperatorsOperatorBufferTest_$18_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$18, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$18_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$18:(RxInternalOperatorsOperatorBufferTest_$18 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$18:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$18;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$18;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$18_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$18_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18_$1 *self, RxInternalOperatorsOperatorBufferTest_$18 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$18_$1 *new_RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$18_$1, initWithRxInternalOperatorsOperatorBufferTest_$18_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$18_$1 *create_RxInternalOperatorsOperatorBufferTest_$18_$1_initWithRxInternalOperatorsOperatorBufferTest_$18_(RxInternalOperatorsOperatorBufferTest_$18 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$18_$1, initWithRxInternalOperatorsOperatorBufferTest_$18_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$19

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestThroughBufferWithSize2", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$19;
}

@end

void RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$19 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$19 *new_RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$19, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$19 *create_RxInternalOperatorsOperatorBufferTest_$19_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$19, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$19_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$19:(RxInternalOperatorsOperatorBufferTest_$19 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$19:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$19;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$19;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$19_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$19_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19_$1 *self, RxInternalOperatorsOperatorBufferTest_$19 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$19_$1 *new_RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$19_$1, initWithRxInternalOperatorsOperatorBufferTest_$19_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$19_$1 *create_RxInternalOperatorsOperatorBufferTest_$19_$1_initWithRxInternalOperatorsOperatorBufferTest_$19_(RxInternalOperatorsOperatorBufferTest_$19 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$19_$1, initWithRxInternalOperatorsOperatorBufferTest_$19_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$20

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestThroughBufferWithSize3", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$20 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$20;
}

@end

void RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$20 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$20 *new_RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$20, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$20 *create_RxInternalOperatorsOperatorBufferTest_$20_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$20, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$20_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$20:(RxInternalOperatorsOperatorBufferTest_$20 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$20:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$20;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$20;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$20_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$20_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20_$1 *self, RxInternalOperatorsOperatorBufferTest_$20 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$20_$1 *new_RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$20_$1, initWithRxInternalOperatorsOperatorBufferTest_$20_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$20_$1 *create_RxInternalOperatorsOperatorBufferTest_$20_$1_initWithRxInternalOperatorsOperatorBufferTest_$20_(RxInternalOperatorsOperatorBufferTest_$20 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$20_$1, initWithRxInternalOperatorsOperatorBufferTest_$20_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$21

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestThroughBufferWithSize4", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$21 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$21;
}

@end

void RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$21 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$21 *new_RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$21, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$21 *create_RxInternalOperatorsOperatorBufferTest_$21_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$21, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$21_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$21:(RxInternalOperatorsOperatorBufferTest_$21 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$21:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$21;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$21;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$21_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$21_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21_$1 *self, RxInternalOperatorsOperatorBufferTest_$21 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$21_$1 *new_RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$21_$1, initWithRxInternalOperatorsOperatorBufferTest_$21_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$21_$1 *create_RxInternalOperatorsOperatorBufferTest_$21_$1_initWithRxInternalOperatorsOperatorBufferTest_$21_(RxInternalOperatorsOperatorBufferTest_$21 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$21_$1, initWithRxInternalOperatorsOperatorBufferTest_$21_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$22

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestOverflowThroughBufferWithSize1", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$22;
}

@end

void RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$22 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$22 *new_RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$22, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$22 *create_RxInternalOperatorsOperatorBufferTest_$22_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$22, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$22_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$22:(RxInternalOperatorsOperatorBufferTest_$22 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$22:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$22;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$22;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$22_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$22_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22_$1 *self, RxInternalOperatorsOperatorBufferTest_$22 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$22_$1 *new_RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$22_$1, initWithRxInternalOperatorsOperatorBufferTest_$22_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$22_$1 *create_RxInternalOperatorsOperatorBufferTest_$22_$1_initWithRxInternalOperatorsOperatorBufferTest_$22_(RxInternalOperatorsOperatorBufferTest_$22 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$22_$1, initWithRxInternalOperatorsOperatorBufferTest_$22_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$23

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(self)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestOverflowThroughBufferWithSize2", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$23 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$23;
}

@end

void RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$23 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$23 *new_RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$23, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$23 *create_RxInternalOperatorsOperatorBufferTest_$23_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$23, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$23_$1

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$requested_)) setWithLong:n];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$23:(RxInternalOperatorsOperatorBufferTest_$23 *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$23:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$23;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$23;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$23_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$23_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23_$1 *self, RxInternalOperatorsOperatorBufferTest_$23 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$23_$1 *new_RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$23_$1, initWithRxInternalOperatorsOperatorBufferTest_$23_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$23_$1 *create_RxInternalOperatorsOperatorBufferTest_$23_$1_initWithRxInternalOperatorsOperatorBufferTest_$23_(RxInternalOperatorsOperatorBufferTest_$23 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$23_$1, initWithRxInternalOperatorsOperatorBufferTest_$23_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$24

- (void)callWithId:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(self, s)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$requested_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestOverflowThroughBufferWithSize3", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$24 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$24;
}

@end

void RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(RxInternalOperatorsOperatorBufferTest_$24 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$requested_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$24 *new_RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$24, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$24 *create_RxInternalOperatorsOperatorBufferTest_$24_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$24, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$24_$1

- (void)requestWithLong:(jlong)n {
  if (RxInternalOperatorsBackpressureUtils_getAndAddRequestWithJavaUtilConcurrentAtomicAtomicLong_withLong_(this$0_->val$requested_, n) == 0) {
    [((RxSubscriber *) nil_chk(val$s_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$s_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
    [val$s_ onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest_$24:(RxInternalOperatorsOperatorBufferTest_$24 *)outer$
                                                 withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest_$24:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest_$24;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorBufferTest_$24;LRxSubscriber;", "(Lrx/internal/operators/OperatorBufferTest$24;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorBufferTest_$24;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$24_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$24_$1;
}

@end

void RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24_$1 *self, RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$24_$1 *new_RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$24_$1, initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorBufferTest_$24_$1 *create_RxInternalOperatorsOperatorBufferTest_$24_$1_initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_(RxInternalOperatorsOperatorBufferTest_$24 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$24_$1, initWithRxInternalOperatorsOperatorBufferTest_$24_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorBufferTest_$25

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE / 2 - 4];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id<JavaUtilList>)t {
  [self requestWithLong:JavaLangLong_MAX_VALUE / 2];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorBufferTest_$25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorBufferTest;", "testProducerRequestOverflowThroughBufferWithSize3", "Lrx/Subscriber<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$25 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 5, 0, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$25;
}

@end

void RxInternalOperatorsOperatorBufferTest_$25_init(RxInternalOperatorsOperatorBufferTest_$25 *self) {
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorBufferTest_$25 *new_RxInternalOperatorsOperatorBufferTest_$25_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$25, init)
}

RxInternalOperatorsOperatorBufferTest_$25 *create_RxInternalOperatorsOperatorBufferTest_$25_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$25, init)
}

@implementation RxInternalOperatorsOperatorBufferTest_$26

- (void)onNextWithId:(id)t {
  [((id<RxObserver>) nil_chk(val$o_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxObserver>) nil_chk(val$o_)) onErrorWithNSException:e];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onCompleted {
  [((id<RxObserver>) nil_chk(val$o_)) onCompleted];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0
withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1 {
  RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$o_);
  RELEASE_(val$cdl_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(initWithRxObserver:withJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$o_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "onError", "LNSException;", "LRxObserver;LJavaUtilConcurrentCountDownLatch;", "(Lrx/Observer<Ljava/lang/Object;>;Ljava/util/concurrent/CountDownLatch;)V", "Lrx/Observer<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorBufferTest;", "testBufferWithTimeDoesntUnsubscribeDownstream", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$26 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$26;
}

@end

void RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorBufferTest_$26 *self, id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  JreStrongAssign(&self->val$o_, capture$0);
  JreStrongAssign(&self->val$cdl_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorBufferTest_$26 *new_RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$26, initWithRxObserver_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

RxInternalOperatorsOperatorBufferTest_$26 *create_RxInternalOperatorsOperatorBufferTest_$26_initWithRxObserver_withJavaUtilConcurrentCountDownLatch_(id<RxObserver> capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$26, initWithRxObserver_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorBufferTest_$27

- (RxScheduler *)callWithId:(RxScheduler *)t {
  return this$0_->scheduler_;
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxScheduler;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxScheduler;", "LRxInternalOperatorsOperatorBufferTest;", "timeAndSkipOverlapScheduler", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Scheduler;Lrx/Scheduler;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$27 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$27;
}

@end

void RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$27 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$27 *new_RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$27, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$27 *create_RxInternalOperatorsOperatorBufferTest_$27_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$27, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

@implementation RxInternalOperatorsOperatorBufferTest_$28

- (RxScheduler *)callWithId:(RxScheduler *)t {
  return this$0_->scheduler_;
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferTest:(RxInternalOperatorsOperatorBufferTest *)outer$ {
  RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxScheduler;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorBufferTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxScheduler;", "LRxInternalOperatorsOperatorBufferTest;", "timeAndSkipSkipDefaultScheduler", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Scheduler;Lrx/Scheduler;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferTest_$28 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorBufferTest_$28;
}

@end

void RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest_$28 *self, RxInternalOperatorsOperatorBufferTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferTest_$28 *new_RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferTest_$28, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}

RxInternalOperatorsOperatorBufferTest_$28 *create_RxInternalOperatorsOperatorBufferTest_$28_initWithRxInternalOperatorsOperatorBufferTest_(RxInternalOperatorsOperatorBufferTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferTest_$28, initWithRxInternalOperatorsOperatorBufferTest_, outer$)
}
