//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeFromEmitterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxEmitter.h"
#include "RxExceptionsMissingBackpressureException.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsCancellable.h"
#include "RxInternalOperatorsOnSubscribeFromEmitterTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$28();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$29();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$30();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$31();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$32();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$33();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$34();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$35();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$36();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$37();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$38();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$39();

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 : NSObject < RxObserver > {
 @public
  id<RxEmitter> val$t_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)v;

- (instancetype)initWithRxEmitter:(id<RxEmitter>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1, val$t_, id<RxEmitter>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *self, id<RxEmitter> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(id<RxEmitter> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(id<RxEmitter> capture$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 : NSObject < RxFunctionsCancellable > {
 @public
  id<RxSubscription> val$s_;
}

- (void)cancel;

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2, val$s_, id<RxSubscription>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *self, id<RxSubscription> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(id<RxSubscription> capture$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 : NSObject < RxObserver > {
 @public
  id<RxEmitter> val$t_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)v;

- (instancetype)initWithRxEmitter:(id<RxEmitter>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1, val$t_, id<RxEmitter>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *self, id<RxEmitter> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(id<RxEmitter> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(id<RxEmitter> capture$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$1 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(id<RxEmitter>)emitter;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init();

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$2 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(id<RxEmitter>)emitter;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init();

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$3 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromEmitterTest_$3, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$4 : NSObject < RxFunctionsAction1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (void)callWithId:(id<RxEmitter>)emitter;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromEmitterTest_$4, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$5 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init();

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$6 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *self, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(jlong arg$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$7 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init();

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$8 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *self, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(jlong arg$0);

@interface RxInternalOperatorsOnSubscribeFromEmitterTest_$9 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromEmitterTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *self, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(jlong arg$0);

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest

- (void)before {
  JreStrongAssignAndConsume(&source_, new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_init());
  JreStrongAssignAndConsume(&sourceNoCancel_, new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_init());
  JreStrongAssign(&ts_, RxObserversTestSubscriber_createWithLong_(0LL));
}

- (void)normalBuffered {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) requested]);
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)normalDrop {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, DROP)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)normalLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)normalNone {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, NONE)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)normalNoneRequested {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, NONE)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)normalError {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
  OrgJunitAssert_assertEqualsWithId_withId_(@"fromEmitter: could not emit value due to lack of requests", [((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([((RxObserversTestSubscriber *) nil_chk(ts_)) getOnErrorEvents])) getWithInt:0])) getMessage]);
}

- (void)overflowErrorIsNotFollowedByAnotherErrorDueToOnNextFromUpstream {
  id<RxFunctionsAction1> source = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init();
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) unsafeSubscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
  OrgJunitAssert_assertEqualsWithId_withId_(@"fromEmitter: could not emit value due to lack of requests", [((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([((RxObserversTestSubscriber *) nil_chk(ts_)) getOnErrorEvents])) getWithInt:0])) getMessage]);
}

- (void)overflowErrorIsNotFollowedByAnotherCompletedDueToCompletedFromUpstream {
  id<RxFunctionsAction1> source = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init();
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) unsafeSubscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
  OrgJunitAssert_assertEqualsWithId_withId_(@"fromEmitter: could not emit value due to lack of requests", [((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([((RxObserversTestSubscriber *) nil_chk(ts_)) getOnErrorEvents])) getWithInt:0])) getMessage]);
}

- (void)overflowErrorIsNotFollowedByAnotherErrorDueToOnErrorFromUpstreamAndSecondErrorIsReportedToHook {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(list));
    JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
    id<RxFunctionsAction1> source = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(e);
    [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) unsafeSubscribeWithRxSubscriber:ts_];
    [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
    [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
    [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
    OrgJunitAssert_assertEqualsWithId_withId_(@"fromEmitter: could not emit value due to lack of requests", [((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([((RxObserversTestSubscriber *) nil_chk(ts_)) getOnErrorEvents])) getWithInt:0])) getMessage]);
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:JavaLangRuntimeException_class_()]), list);
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

- (void)errorBuffered {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)errorLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)errorNone {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, NONE)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedBuffer {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedError {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedDrop {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, DROP)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNone {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, NONE)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNoCancelBuffer {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNoCancelLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNoCancelError {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, ERROR)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNoCancelDrop {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, DROP)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribedNoCancelNone {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, NONE)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoValues];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)deferredRequest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)take {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) takeWithInt:2])) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)takeOne {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) takeWithInt:1])) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)requestExact {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(source_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *) nil_chk(source_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)takeNoCancel {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) takeWithInt:2])) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)takeOneNoCancel {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) takeWithInt:1])) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)unsubscribeNoCancel {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) unsubscribe];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)unsubscribeInline {
  RxObserversTestSubscriber *ts1 = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init();
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts1 assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
}

- (void)completeInline {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)errorInline {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)requestInline {
  RxObserversTestSubscriber *ts1 = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(1);
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, BUFFER)))) subscribeWithRxSubscriber:ts1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts1 assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
}

- (void)unsubscribeInlineLatest {
  RxObserversTestSubscriber *ts1 = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init();
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts1 assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
}

- (void)unsubscribeInlineExactLatest {
  RxObserversTestSubscriber *ts1 = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(1LL);
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts1 assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
}

- (void)completeInlineLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)completeInlineExactLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNoErrors];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertCompleted];
}

- (void)errorInlineLatest {
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts_];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) requestMoreWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [((RxObserversTestSubscriber *) nil_chk(ts_)) assertNotCompleted];
}

- (void)requestInlineLatest {
  RxObserversTestSubscriber *ts1 = create_RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(1);
  [((RxObservable *) nil_chk(RxObservable_fromEmitterWithRxFunctionsAction1_withRxEmitter_BackpressureMode_(sourceNoCancel_, JreLoadEnum(RxEmitter_BackpressureMode, LATEST)))) subscribeWithRxSubscriber:ts1];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *) nil_chk(sourceNoCancel_)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts1 assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(sourceNoCancel_);
  RELEASE_(ts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 26, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 27, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 28, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 31, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 32, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 33, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 34, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 35, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 36, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 37, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 38, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 39, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(normalBuffered);
  methods[2].selector = @selector(normalDrop);
  methods[3].selector = @selector(normalLatest);
  methods[4].selector = @selector(normalNone);
  methods[5].selector = @selector(normalNoneRequested);
  methods[6].selector = @selector(normalError);
  methods[7].selector = @selector(overflowErrorIsNotFollowedByAnotherErrorDueToOnNextFromUpstream);
  methods[8].selector = @selector(overflowErrorIsNotFollowedByAnotherCompletedDueToCompletedFromUpstream);
  methods[9].selector = @selector(overflowErrorIsNotFollowedByAnotherErrorDueToOnErrorFromUpstreamAndSecondErrorIsReportedToHook);
  methods[10].selector = @selector(errorBuffered);
  methods[11].selector = @selector(errorLatest);
  methods[12].selector = @selector(errorNone);
  methods[13].selector = @selector(unsubscribedBuffer);
  methods[14].selector = @selector(unsubscribedLatest);
  methods[15].selector = @selector(unsubscribedError);
  methods[16].selector = @selector(unsubscribedDrop);
  methods[17].selector = @selector(unsubscribedNone);
  methods[18].selector = @selector(unsubscribedNoCancelBuffer);
  methods[19].selector = @selector(unsubscribedNoCancelLatest);
  methods[20].selector = @selector(unsubscribedNoCancelError);
  methods[21].selector = @selector(unsubscribedNoCancelDrop);
  methods[22].selector = @selector(unsubscribedNoCancelNone);
  methods[23].selector = @selector(deferredRequest);
  methods[24].selector = @selector(take);
  methods[25].selector = @selector(takeOne);
  methods[26].selector = @selector(requestExact);
  methods[27].selector = @selector(takeNoCancel);
  methods[28].selector = @selector(takeOneNoCancel);
  methods[29].selector = @selector(unsubscribeNoCancel);
  methods[30].selector = @selector(unsubscribeInline);
  methods[31].selector = @selector(completeInline);
  methods[32].selector = @selector(errorInline);
  methods[33].selector = @selector(requestInline);
  methods[34].selector = @selector(unsubscribeInlineLatest);
  methods[35].selector = @selector(unsubscribeInlineExactLatest);
  methods[36].selector = @selector(completeInlineLatest);
  methods[37].selector = @selector(completeInlineExactLatest);
  methods[38].selector = @selector(errorInlineLatest);
  methods[39].selector = @selector(requestInlineLatest);
  methods[40].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sourceNoCancel_", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "ts_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x0, -1, -1, 40, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$10, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$11, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$12, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$13, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$14, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$15, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$16, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$17, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$18, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$19, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$20, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$21, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$22, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$23, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$24, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$25, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$26, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$27, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$28, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$29, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$30, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$31, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$32, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$33, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$34, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$35, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$36, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$37, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$38, (void *)&RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$39, "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter;LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest = { "OnSubscribeFromEmitterTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 41, 3, -1, 41, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_init(RxInternalOperatorsOnSubscribeFromEmitterTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest *new_RxInternalOperatorsOnSubscribeFromEmitterTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest *create_RxInternalOperatorsOnSubscribeFromEmitterTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$32() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$33() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$34() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$35() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$36() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$37() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$38() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFromEmitterTest__Annotations$39() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFromEmitterTest)

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)requested {
  return [((id<RxEmitter>) nil_chk(current_)) requested];
}

- (void)callWithId:(id<RxEmitter>)t {
  JreStrongAssign(&self->current_, t);
  id<RxSubscription> s = [((RxSubjectsPublishSubject *) nil_chk(subject_)) subscribeWithRxObserver:create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(t)];
  [((id<RxEmitter>) nil_chk(t)) setCancellationWithRxFunctionsCancellable:create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(s)];
  ;
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onCompleted];
}

- (void)dealloc {
  RELEASE_(subject_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(requested);
  methods[2].selector = @selector(callWithId:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(onErrorWithNSException:);
  methods[5].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subject_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "current_", "LRxEmitter;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "onNext", "LJavaLangInteger;", "onError", "LNSException;", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "Lrx/Emitter<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Emitter<Ljava/lang/Integer;>;>;Lrx/Observer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter = { "PublishEmitter", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 6, 2, 9, -1, -1, 10, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_init(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *self) {
  NSObject_init(self);
  JreStrongAssign(&self->subject_, RxSubjectsPublishSubject_create());
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter)

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1

- (void)onCompleted {
  [((id<RxEmitter>) nil_chk(val$t_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxEmitter>) nil_chk(val$t_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(JavaLangInteger *)v {
  [((id<RxEmitter>) nil_chk(val$t_)) onNextWithId:v];
}

- (instancetype)initWithRxEmitter:(id<RxEmitter>)capture$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxEmitter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$t_", "LRxEmitter;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "Lrx/Emitter<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter;", "callWithId:", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *self, id<RxEmitter> capture$0) {
  JreStrongAssign(&self->val$t_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(id<RxEmitter> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1, initWithRxEmitter_, capture$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1_initWithRxEmitter_(id<RxEmitter> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$1, initWithRxEmitter_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2

- (void)cancel {
  [((id<RxSubscription>) nil_chk(val$s_)) unsubscribe];
}

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(cancel);
  methods[1].selector = @selector(initWithRxSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LRxSubscription;", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *self, id<RxSubscription> capture$0) {
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2, initWithRxSubscription_, capture$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitter_$2, initWithRxSubscription_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)callWithId:(id<RxEmitter>)t {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) subscribeWithRxObserver:create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(t)];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubjectsPublishSubject *) nil_chk(subject_)) onCompleted];
}

- (void)dealloc {
  RELEASE_(subject_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(callWithId:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onCompleted);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subject_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "onNext", "LJavaLangInteger;", "onError", "LNSException;", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Emitter<Ljava/lang/Integer;>;>;Lrx/Observer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel = { "PublishEmitterNoCancel", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 1, 8, -1, -1, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_init(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *self) {
  NSObject_init(self);
  JreStrongAssign(&self->subject_, RxSubjectsPublishSubject_create());
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel)

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1

- (void)onCompleted {
  [((id<RxEmitter>) nil_chk(val$t_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxEmitter>) nil_chk(val$t_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(JavaLangInteger *)v {
  [((id<RxEmitter>) nil_chk(val$t_)) onNextWithId:v];
}

- (instancetype)initWithRxEmitter:(id<RxEmitter>)capture$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxEmitter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$t_", "LRxEmitter;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "Lrx/Emitter<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel;", "callWithId:", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *self, id<RxEmitter> capture$0) {
  JreStrongAssign(&self->val$t_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(id<RxEmitter> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1, initWithRxEmitter_, capture$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1_initWithRxEmitter_(id<RxEmitter> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_PublishEmitterNoCancel_$1, initWithRxEmitter_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$1

- (void)callWithId:(id<RxEmitter>)emitter {
  [((id<RxEmitter>) nil_chk(emitter)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [emitter onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "overflowErrorIsNotFollowedByAnotherErrorDueToOnNextFromUpstream", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Emitter<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$1, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$1 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$2

- (void)callWithId:(id<RxEmitter>)emitter {
  [((id<RxEmitter>) nil_chk(emitter)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [emitter onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "overflowErrorIsNotFollowedByAnotherCompletedDueToCompletedFromUpstream", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Emitter<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$2, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$2 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$3

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "overflowErrorIsNotFollowedByAnotherErrorDueToOnErrorFromUpstreamAndSecondErrorIsReportedToHook", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$3, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$3 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$3, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$4

- (void)callWithId:(id<RxEmitter>)emitter {
  [((id<RxEmitter>) nil_chk(emitter)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [emitter onErrorWithNSException:val$e_];
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxEmitter;", "(Lrx/Emitter<Ljava/lang/Integer;>;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "overflowErrorIsNotFollowedByAnotherErrorDueToOnErrorFromUpstreamAndSecondErrorIsReportedToHook", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Emitter<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$4, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$4 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$4_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$4, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$5

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "unsubscribeInline", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$5, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$5 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$5, init)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$6

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self requestMoreWithLong:1];
}

- (instancetype)initWithLong:(jlong)arg$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "J", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "requestInline", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *self, jlong arg$0) {
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$6, initWithLong_, arg$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$6 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$6_initWithLong_(jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$6, initWithLong_, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$7

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "unsubscribeInlineLatest", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init(RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$7, init)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$7 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$8

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self unsubscribe];
}

- (instancetype)initWithLong:(jlong)arg$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "J", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "unsubscribeInlineExactLatest", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *self, jlong arg$0) {
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$8, initWithLong_, arg$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$8 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$8_initWithLong_(jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$8, initWithLong_, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeFromEmitterTest_$9

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self requestMoreWithLong:1];
}

- (instancetype)initWithLong:(jlong)arg$0 {
  RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "J", "LRxInternalOperatorsOnSubscribeFromEmitterTest;", "requestInlineLatest", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFromEmitterTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeFromEmitterTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *self, jlong arg$0) {
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *new_RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$9, initWithLong_, arg$0)
}

RxInternalOperatorsOnSubscribeFromEmitterTest_$9 *create_RxInternalOperatorsOnSubscribeFromEmitterTest_$9_initWithLong_(jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFromEmitterTest_$9, initWithLong_, arg$0)
}
