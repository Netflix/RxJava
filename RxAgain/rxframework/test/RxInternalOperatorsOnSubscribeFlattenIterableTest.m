//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeFlattenIterableTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOnSubscribeFlattenIterableTest.h"
#include "RxObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/function/Consumer.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$19();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 : NSObject < RxFunctionsFunc1 >

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 : NSObject < JavaUtilIterator > {
 @public
  jint count_;
}

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 : NSObject < JavaLangIterable >

- (id<JavaUtilIterator>)iterator;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 : NSObject < JavaUtilIterator >

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 : NSObject < RxFunctionsFunc1 >

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 : NSObject < RxFunctionsFunc1 >

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 : NSObject < RxFunctionsFunc1 >

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 : NSObject < JavaLangIterable > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$counter_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16, val$counter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 : NSObject < JavaUtilIterator > {
 @public
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *this$0_;
}

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

- (instancetype)initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16:(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1, this$0_, RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *self, RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaLangIterable> val$it_;
}

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17, val$it_, id<JavaLangIterable>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 : NSObject < RxFunctionsFunc1 >

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init();

@interface RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFlattenIterableTest_$19)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init();

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest

- (void)normal {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:10 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)normalViaFlatMap {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) flatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:10 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)normalBackpressured {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:2];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2) } count:3 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:7];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:10 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)longRunning {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  jint n = 100 * 100;
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, n))) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValueCountWithInt:n * 2];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)asIntermediate {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  jint n = 100 * 100;
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, n))) concatMapIterableWithRxFunctionsFunc1:mapper_])) concatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init()])) subscribeWithRxSubscriber:ts];
  [ts assertValueCountWithInt:n * 2];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)just {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)justHidden {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) asObservable])) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)empty {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)error {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) concatWithWithRxObservable:RxObservable_errorWithNSException_(create_RxExceptionsTestException_init())])) concatMapIterableWithRxFunctionsFunc1:mapper_])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)iteratorHasNextThrowsImmediately {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 2))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(it)])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)iteratorHasNextThrowsImmediatelyJust {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(it)])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)iteratorHasNextThrowsSecondCall {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 2))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(it)])) subscribeWithRxSubscriber:ts];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)iteratorNextThrows {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 2))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(it)])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)iteratorNextThrowsAndUnsubscribes {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init();
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(it)])) unsafeSubscribeWithRxSubscriber:ts];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"PublishSubject has Observers?!", [ps hasObservers]);
}

- (void)mixture {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 1000))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init()])) subscribeWithRxSubscriber:ts];
  [ts assertValueCountWithInt:500];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)emptyInnerThenSingleBackpressured {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(1);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 2))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init()])) subscribeWithRxSubscriber:ts];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)manyEmptyInnerThenSingleBackpressured {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(1);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 1000))) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init()])) subscribeWithRxSubscriber:ts];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)hasNextIsNotCalledAfterChildUnsubscribedOnNext {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  JavaUtilConcurrentAtomicAtomicInteger *counter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  id<JavaLangIterable> it = create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(counter);
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) concatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(it)])) takeWithInt:1])) unsafeSubscribeWithRxSubscriber:ts];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"PublishSubject has Observers?!", [ps hasObservers]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [counter get]);
}

- (void)normalPrefetchViaFlatMap {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) flatMapIterableWithRxFunctionsFunc1:mapper_ withInt:2])) subscribeWithRxSubscriber:ts];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:10 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)withResultSelectorMaxConcurrent {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 5))) flatMapIterableWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init() withRxFunctionsFunc2:create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init() withInt:2])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(11), JavaLangInteger_valueOfWithInt_(21), JavaLangInteger_valueOfWithInt_(31), JavaLangInteger_valueOfWithInt_(41), JavaLangInteger_valueOfWithInt_(51) } count:5 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(normal);
  methods[1].selector = @selector(normalViaFlatMap);
  methods[2].selector = @selector(normalBackpressured);
  methods[3].selector = @selector(longRunning);
  methods[4].selector = @selector(asIntermediate);
  methods[5].selector = @selector(just);
  methods[6].selector = @selector(justHidden);
  methods[7].selector = @selector(empty);
  methods[8].selector = @selector(error);
  methods[9].selector = @selector(iteratorHasNextThrowsImmediately);
  methods[10].selector = @selector(iteratorHasNextThrowsImmediatelyJust);
  methods[11].selector = @selector(iteratorHasNextThrowsSecondCall);
  methods[12].selector = @selector(iteratorNextThrows);
  methods[13].selector = @selector(iteratorNextThrowsAndUnsubscribes);
  methods[14].selector = @selector(mixture);
  methods[15].selector = @selector(emptyInnerThenSingleBackpressured);
  methods[16].selector = @selector(manyEmptyInnerThenSingleBackpressured);
  methods[17].selector = @selector(hasNextIsNotCalledAfterChildUnsubscribedOnNext);
  methods[18].selector = @selector(normalPrefetchViaFlatMap);
  methods[19].selector = @selector(withResultSelectorMaxConcurrent);
  methods[20].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 20, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$10, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$11, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$12, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$13, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$14, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$15, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$16, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$17, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$18, (void *)&RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$19, "Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest = { "OnSubscribeFlattenIterableTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 21, 1, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_init(RxInternalOperatorsOnSubscribeFlattenIterableTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mapper_, new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init());
}

RxInternalOperatorsOnSubscribeFlattenIterableTest *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeFlattenIterableTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeFlattenIterableTest)

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$1

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ v, JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(v)) intValue] + 1) } count:2 type:JavaLangInteger_class_()]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$2

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_justWithId_(v);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "asIntermediate", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$2, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$2 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$3

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsImmediately", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$3 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1

- (jboolean)hasNext {
  @throw create_RxExceptionsTestException_init();
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$3;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$3_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$4

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsImmediately", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$4 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$4, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$5

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsImmediatelyJust", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$5 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1

- (jboolean)hasNext {
  @throw create_RxExceptionsTestException_init();
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$5;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$5_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$6

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsImmediatelyJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$6 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$6_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$6, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$7

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsSecondCall", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$7 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1

- (jboolean)hasNext {
  if (++count_ >= 2) {
    @throw create_RxExceptionsTestException_init();
  }
  return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$7;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$7_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$8

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorHasNextThrowsSecondCall", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$8 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$8_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$8, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$9

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorNextThrows", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$9 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1

- (jboolean)hasNext {
  return true;
}

- (JavaLangInteger *)next {
  @throw create_RxExceptionsTestException_init();
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$9;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$9_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$10

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorNextThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$10 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$10_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$10, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$11

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorNextThrowsAndUnsubscribes", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$11 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1

- (jboolean)hasNext {
  return true;
}

- (JavaLangInteger *)next {
  @throw create_RxExceptionsTestException_init();
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$11;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$11_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$12

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "iteratorNextThrowsAndUnsubscribes", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$12 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$12_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$12, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$13

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return ([((JavaLangInteger *) nil_chk(v)) intValue] % 2) == 0 ? JavaUtilCollections_singletonWithId_(JavaLangInteger_valueOfWithInt_(1)) : JavaUtilCollections_emptySet();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "mixture", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$13, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$13 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$13, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$14

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return [((JavaLangInteger *) nil_chk(v)) intValue] == 2 ? JavaUtilCollections_singletonWithId_(JavaLangInteger_valueOfWithInt_(1)) : JavaUtilCollections_emptySet();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "emptyInnerThenSingleBackpressured", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$14, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$14 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$14, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$15

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return [((JavaLangInteger *) nil_chk(v)) intValue] == 1000 ? JavaUtilCollections_singletonWithId_(JavaLangInteger_valueOfWithInt_(1)) : JavaUtilCollections_emptySet();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "manyEmptyInnerThenSingleBackpressured", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$15, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$15 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$15, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$16

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(self);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(val$counter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$counter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "hasNextIsNotCalledAfterChildUnsubscribedOnNext", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$counter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1

- (jboolean)hasNext {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(this$0_->val$counter_)) getAndIncrement];
  return true;
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_(1);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16:(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *)outer$ {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(self, outer$);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$16;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeFlattenIterableTest_$16;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *self, RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1, initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_, outer$)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1_initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$16_$1, initWithRxInternalOperatorsOnSubscribeFlattenIterableTest_$16_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$17

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return val$it_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$it_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$it_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Integer;>;)V", "Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "hasNextIsNotCalledAfterChildUnsubscribedOnNext", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *self, id<JavaLangIterable> capture$0) {
  JreStrongAssign(&self->val$it_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17, initWithJavaLangIterable_, capture$0)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$17 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$17_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$17, initWithJavaLangIterable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$18

- (id<JavaLangIterable>)callWithId:(JavaLangInteger *)v {
  return JavaUtilCollections_singletonListWithId_(JavaLangInteger_valueOfWithInt_(1));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangIterable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Ljava/lang/Iterable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "withResultSelectorMaxConcurrent", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Iterable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$18, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$18 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$18, init)
}

@implementation RxInternalOperatorsOnSubscribeFlattenIterableTest_$19

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(a)) intValue] * 10 + [((JavaLangInteger *) nil_chk(b)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeFlattenIterableTest;", "withResultSelectorMaxConcurrent", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19;
}

@end

void RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init(RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *new_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$19, init)
}

RxInternalOperatorsOnSubscribeFlattenIterableTest_$19 *create_RxInternalOperatorsOnSubscribeFlattenIterableTest_$19_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeFlattenIterableTest_$19, init)
}
