//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/BackpressureUtilsTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxInternalOperatorsBackpressureUtils.h"
#include "RxInternalOperatorsBackpressureUtilsTest.h"
#include "RxTestUtil.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$2();

@implementation RxInternalOperatorsBackpressureUtilsTest

- (void)constructorShouldBePrivate {
  RxTestUtil_checkUtilityClassWithIOSClass_(RxInternalOperatorsBackpressureUtils_class_());
}

- (void)testAddCap {
  OrgJunitAssert_assertEqualsWithLong_withLong_(2LL, RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(1, 1));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(1, JavaLangLong_MAX_VALUE - 1));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(1, JavaLangLong_MAX_VALUE));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(JavaLangLong_MAX_VALUE - 1, JavaLangLong_MAX_VALUE - 1));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(JavaLangLong_MAX_VALUE, JavaLangLong_MAX_VALUE));
}

- (void)testMultiplyCap {
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, RxInternalOperatorsBackpressureUtils_multiplyCapWithLong_withLong_(2, 3));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_multiplyCapWithLong_withLong_(2, JavaLangLong_MAX_VALUE));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_multiplyCapWithLong_withLong_(JavaLangLong_MAX_VALUE, JavaLangLong_MAX_VALUE));
  OrgJunitAssert_assertEqualsWithLong_withLong_(JavaLangLong_MAX_VALUE, RxInternalOperatorsBackpressureUtils_multiplyCapWithLong_withLong_(JreLShift64(1LL, 32), JreLShift64(1LL, 32)));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsBackpressureUtilsTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(constructorShouldBePrivate);
  methods[1].selector = @selector(testAddCap);
  methods[2].selector = @selector(testMultiplyCap);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsBackpressureUtilsTest__Annotations$0, (void *)&RxInternalOperatorsBackpressureUtilsTest__Annotations$1, (void *)&RxInternalOperatorsBackpressureUtilsTest__Annotations$2 };
  static const J2ObjcClassInfo _RxInternalOperatorsBackpressureUtilsTest = { "BackpressureUtilsTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsBackpressureUtilsTest;
}

@end

void RxInternalOperatorsBackpressureUtilsTest_init(RxInternalOperatorsBackpressureUtilsTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsBackpressureUtilsTest *new_RxInternalOperatorsBackpressureUtilsTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsBackpressureUtilsTest, init)
}

RxInternalOperatorsBackpressureUtilsTest *create_RxInternalOperatorsBackpressureUtilsTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsBackpressureUtilsTest, init)
}

IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsBackpressureUtilsTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBackpressureUtilsTest)
