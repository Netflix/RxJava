//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/CovarianceTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxCovarianceTest.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxObservable.h"
#include "RxObservablesGroupedObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxCovarianceTest__Annotations$7();

@interface RxCovarianceTest_$3 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(RxCovarianceTest_Media *)t1
                         withId:(RxCovarianceTest_Media *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$3)

__attribute__((unused)) static void RxCovarianceTest_$3_init(RxCovarianceTest_$3 *self);

__attribute__((unused)) static RxCovarianceTest_$3 *new_RxCovarianceTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$3 *create_RxCovarianceTest_$3_init();

@interface RxCovarianceTest_$4 : NSObject < RxFunctionsFunc1 >

- (IOSClass *)callWithId:(RxCovarianceTest_Movie *)m;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$4)

__attribute__((unused)) static void RxCovarianceTest_$4_init(RxCovarianceTest_$4 *self);

__attribute__((unused)) static RxCovarianceTest_$4 *new_RxCovarianceTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$4 *create_RxCovarianceTest_$4_init();

@interface RxCovarianceTest_$5 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$5)

__attribute__((unused)) static void RxCovarianceTest_$5_init(RxCovarianceTest_$5 *self);

__attribute__((unused)) static RxCovarianceTest_$5 *new_RxCovarianceTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$5 *create_RxCovarianceTest_$5_init();

@interface RxCovarianceTest_$5_$1 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)m;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$5_$1)

__attribute__((unused)) static void RxCovarianceTest_$5_$1_init(RxCovarianceTest_$5_$1 *self);

__attribute__((unused)) static RxCovarianceTest_$5_$1 *new_RxCovarianceTest_$5_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$5_$1 *create_RxCovarianceTest_$5_$1_init();

@interface RxCovarianceTest_$5_$2 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxCovarianceTest_Movie *)m;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$5_$2)

__attribute__((unused)) static void RxCovarianceTest_$5_$2_init(RxCovarianceTest_$5_$2 *self);

__attribute__((unused)) static RxCovarianceTest_$5_$2 *new_RxCovarianceTest_$5_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$5_$2 *create_RxCovarianceTest_$5_$2_init();

@interface RxCovarianceTest_$6 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$6)

__attribute__((unused)) static void RxCovarianceTest_$6_init(RxCovarianceTest_$6 *self);

__attribute__((unused)) static RxCovarianceTest_$6 *new_RxCovarianceTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$6 *create_RxCovarianceTest_$6_init();

@interface RxCovarianceTest_$7 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$7)

__attribute__((unused)) static void RxCovarianceTest_$7_init(RxCovarianceTest_$7 *self);

__attribute__((unused)) static RxCovarianceTest_$7 *new_RxCovarianceTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$7 *create_RxCovarianceTest_$7_init();

@interface RxCovarianceTest_$8 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$8)

__attribute__((unused)) static void RxCovarianceTest_$8_init(RxCovarianceTest_$8 *self);

__attribute__((unused)) static RxCovarianceTest_$8 *new_RxCovarianceTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$8 *create_RxCovarianceTest_$8_init();

@interface RxCovarianceTest_$8_$1 : NSObject < RxFunctionsFunc1 >

- (RxCovarianceTest_HorrorMovie *)callWithId:(RxCovarianceTest_HorrorMovie *)horrorMovie;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$8_$1)

__attribute__((unused)) static void RxCovarianceTest_$8_$1_init(RxCovarianceTest_$8_$1 *self);

__attribute__((unused)) static RxCovarianceTest_$8_$1 *new_RxCovarianceTest_$8_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$8_$1 *create_RxCovarianceTest_$8_$1_init();

@interface RxCovarianceTest_$9 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$9)

__attribute__((unused)) static void RxCovarianceTest_$9_init(RxCovarianceTest_$9 *self);

__attribute__((unused)) static RxCovarianceTest_$9 *new_RxCovarianceTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$9 *create_RxCovarianceTest_$9_init();

@interface RxCovarianceTest_$9_$1 : NSObject < RxFunctionsFunc1 >

- (RxCovarianceTest_HorrorMovie *)callWithId:(RxCovarianceTest_HorrorMovie *)horrorMovie;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$9_$1)

__attribute__((unused)) static void RxCovarianceTest_$9_$1_init(RxCovarianceTest_$9_$1 *self);

__attribute__((unused)) static RxCovarianceTest_$9_$1 *new_RxCovarianceTest_$9_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$9_$1 *create_RxCovarianceTest_$9_$1_init();

@interface RxCovarianceTest_$1 : NSObject < RxObservable_Transformer >

- (RxObservable *)callWithId:(RxObservable *)movieList;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$1)

__attribute__((unused)) static void RxCovarianceTest_$1_init(RxCovarianceTest_$1 *self);

__attribute__((unused)) static RxCovarianceTest_$1 *new_RxCovarianceTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$1 *create_RxCovarianceTest_$1_init();

@interface RxCovarianceTest_$2 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(id<JavaUtilList>)listOfLists;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCovarianceTest_$2)

__attribute__((unused)) static void RxCovarianceTest_$2_init(RxCovarianceTest_$2 *self);

__attribute__((unused)) static RxCovarianceTest_$2 *new_RxCovarianceTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCovarianceTest_$2 *create_RxCovarianceTest_$2_init();

J2OBJC_INITIALIZED_DEFN(RxCovarianceTest)

id<RxObservable_Transformer> RxCovarianceTest_deltaTransformer;
id<RxFunctionsFunc1> RxCovarianceTest_calculateDelta;

@implementation RxCovarianceTest

- (void)testCovarianceOfFrom {
  RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  RxObservable_fromWithJavaLangIterable_(create_JavaUtilArrayList_init());
}

- (void)testSortedList {
  id<RxFunctionsFunc2> SORT_FUNCTION = create_RxCovarianceTest_$3_init();
  RxObservable *o = RxObservable_justWithId_withId_withId_(create_RxCovarianceTest_Movie_init(), create_RxCovarianceTest_TVSeason_init(), create_RxCovarianceTest_Album_init());
  [((RxObservable *) nil_chk(o)) toSortedListWithRxFunctionsFunc2:SORT_FUNCTION];
  RxObservable *o2 = RxObservable_justWithId_withId_withId_(create_RxCovarianceTest_Movie_init(), create_RxCovarianceTest_ActionMovie_init(), create_RxCovarianceTest_HorrorMovie_init());
  [((RxObservable *) nil_chk(o2)) toSortedListWithRxFunctionsFunc2:SORT_FUNCTION];
}

- (void)testGroupByCompose {
  RxObservable *movies = RxObservable_justWithId_withId_withId_(create_RxCovarianceTest_HorrorMovie_init(), create_RxCovarianceTest_ActionMovie_init(), create_RxCovarianceTest_Movie_init());
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(movies)) groupByWithRxFunctionsFunc1:create_RxCovarianceTest_$4_init()])) flatMapWithRxFunctionsFunc1:create_RxCovarianceTest_$5_init()])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testCovarianceOfCompose {
  __unused RxObservable *movie = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused RxObservable *movie2 = [((RxObservable *) nil_chk(movie)) composeWithRxObservable_Transformer:create_RxCovarianceTest_$6_init()];
}

- (void)testCovarianceOfCompose2 {
  __unused RxObservable *movie = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused RxObservable *movie2 = [((RxObservable *) nil_chk(movie)) composeWithRxObservable_Transformer:create_RxCovarianceTest_$7_init()];
}

- (void)testCovarianceOfCompose3 {
  __unused RxObservable *movie = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused RxObservable *movie2 = [((RxObservable *) nil_chk(movie)) composeWithRxObservable_Transformer:create_RxCovarianceTest_$8_init()];
}

- (void)testCovarianceOfCompose4 {
  __unused RxObservable *movie = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused RxObservable *movie2 = [((RxObservable *) nil_chk(movie)) composeWithRxObservable_Transformer:create_RxCovarianceTest_$9_init()];
}

- (void)testComposeWithDeltaLogic {
  id<JavaUtilList> list1 = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ create_RxCovarianceTest_Movie_init(), create_RxCovarianceTest_HorrorMovie_init(), create_RxCovarianceTest_ActionMovie_init() } count:3 type:RxCovarianceTest_Movie_class_()]);
  id<JavaUtilList> list2 = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ create_RxCovarianceTest_ActionMovie_init(), create_RxCovarianceTest_Movie_init(), create_RxCovarianceTest_HorrorMovie_init(), create_RxCovarianceTest_ActionMovie_init() } count:4 type:RxCovarianceTest_Movie_class_()]);
  RxObservable *movies = RxObservable_justWithId_withId_(list1, list2);
  [((RxObservable *) nil_chk(movies)) composeWithRxObservable_Transformer:RxCovarianceTest_deltaTransformer];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testCovarianceOfFrom);
  methods[1].selector = @selector(testSortedList);
  methods[2].selector = @selector(testGroupByCompose);
  methods[3].selector = @selector(testCovarianceOfCompose);
  methods[4].selector = @selector(testCovarianceOfCompose2);
  methods[5].selector = @selector(testCovarianceOfCompose3);
  methods[6].selector = @selector(testCovarianceOfCompose4);
  methods[7].selector = @selector(testComposeWithDeltaLogic);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "deltaTransformer", "LRxObservable_Transformer;", .constantValue.asLong = 0, 0x8, -1, 8, 9, -1 },
    { "calculateDelta", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x8, -1, 10, 11, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxCovarianceTest__Annotations$0, (void *)&RxCovarianceTest__Annotations$1, (void *)&RxCovarianceTest__Annotations$2, (void *)&RxCovarianceTest__Annotations$3, (void *)&RxCovarianceTest__Annotations$4, (void *)&RxCovarianceTest__Annotations$5, (void *)&RxCovarianceTest__Annotations$6, (void *)&RxCovarianceTest__Annotations$7, &RxCovarianceTest_deltaTransformer, "Lrx/Observable$Transformer<Ljava/util/List<Lrx/CovarianceTest$Movie;>;Lrx/CovarianceTest$Movie;>;", &RxCovarianceTest_calculateDelta, "Lrx/functions/Func1<Ljava/util/List<Ljava/util/List<Lrx/CovarianceTest$Movie;>;>;Lrx/Observable<Lrx/CovarianceTest$Movie;>;>;", "LRxCovarianceTest_Media;LRxCovarianceTest_Movie;LRxCovarianceTest_HorrorMovie;LRxCovarianceTest_ActionMovie;LRxCovarianceTest_Album;LRxCovarianceTest_TVSeason;LRxCovarianceTest_Rating;LRxCovarianceTest_CoolRating;LRxCovarianceTest_Result;LRxCovarianceTest_ExtendedResult;" };
  static const J2ObjcClassInfo _RxCovarianceTest = { "CovarianceTest", "rx", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, 12, -1, -1, -1 };
  return &_RxCovarianceTest;
}

+ (void)initialize {
  if (self == [RxCovarianceTest class]) {
    JreStrongAssignAndConsume(&RxCovarianceTest_deltaTransformer, new_RxCovarianceTest_$1_init());
    JreStrongAssignAndConsume(&RxCovarianceTest_calculateDelta, new_RxCovarianceTest_$2_init());
    J2OBJC_SET_INITIALIZED(RxCovarianceTest)
  }
}

@end

void RxCovarianceTest_init(RxCovarianceTest *self) {
  NSObject_init(self);
}

RxCovarianceTest *new_RxCovarianceTest_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest, init)
}

RxCovarianceTest *create_RxCovarianceTest_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest, init)
}

IOSObjectArray *RxCovarianceTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCovarianceTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest)

@implementation RxCovarianceTest_Media

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_Media_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_Media = { "Media", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_Media;
}

@end

void RxCovarianceTest_Media_init(RxCovarianceTest_Media *self) {
  NSObject_init(self);
}

RxCovarianceTest_Media *new_RxCovarianceTest_Media_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_Media, init)
}

RxCovarianceTest_Media *create_RxCovarianceTest_Media_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_Media, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_Media)

@implementation RxCovarianceTest_Movie

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_Movie_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_Movie = { "Movie", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_Movie;
}

@end

void RxCovarianceTest_Movie_init(RxCovarianceTest_Movie *self) {
  RxCovarianceTest_Media_init(self);
}

RxCovarianceTest_Movie *new_RxCovarianceTest_Movie_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_Movie, init)
}

RxCovarianceTest_Movie *create_RxCovarianceTest_Movie_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_Movie, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_Movie)

@implementation RxCovarianceTest_HorrorMovie

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_HorrorMovie_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_HorrorMovie = { "HorrorMovie", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_HorrorMovie;
}

@end

void RxCovarianceTest_HorrorMovie_init(RxCovarianceTest_HorrorMovie *self) {
  RxCovarianceTest_Movie_init(self);
}

RxCovarianceTest_HorrorMovie *new_RxCovarianceTest_HorrorMovie_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_HorrorMovie, init)
}

RxCovarianceTest_HorrorMovie *create_RxCovarianceTest_HorrorMovie_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_HorrorMovie, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_HorrorMovie)

@implementation RxCovarianceTest_ActionMovie

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_ActionMovie_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_ActionMovie = { "ActionMovie", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_ActionMovie;
}

@end

void RxCovarianceTest_ActionMovie_init(RxCovarianceTest_ActionMovie *self) {
  RxCovarianceTest_Movie_init(self);
}

RxCovarianceTest_ActionMovie *new_RxCovarianceTest_ActionMovie_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_ActionMovie, init)
}

RxCovarianceTest_ActionMovie *create_RxCovarianceTest_ActionMovie_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_ActionMovie, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_ActionMovie)

@implementation RxCovarianceTest_Album

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_Album_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_Album = { "Album", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_Album;
}

@end

void RxCovarianceTest_Album_init(RxCovarianceTest_Album *self) {
  RxCovarianceTest_Media_init(self);
}

RxCovarianceTest_Album *new_RxCovarianceTest_Album_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_Album, init)
}

RxCovarianceTest_Album *create_RxCovarianceTest_Album_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_Album, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_Album)

@implementation RxCovarianceTest_TVSeason

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_TVSeason_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_TVSeason = { "TVSeason", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_TVSeason;
}

@end

void RxCovarianceTest_TVSeason_init(RxCovarianceTest_TVSeason *self) {
  RxCovarianceTest_Media_init(self);
}

RxCovarianceTest_TVSeason *new_RxCovarianceTest_TVSeason_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_TVSeason, init)
}

RxCovarianceTest_TVSeason *create_RxCovarianceTest_TVSeason_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_TVSeason, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_TVSeason)

@implementation RxCovarianceTest_Rating

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_Rating_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_Rating = { "Rating", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_Rating;
}

@end

void RxCovarianceTest_Rating_init(RxCovarianceTest_Rating *self) {
  NSObject_init(self);
}

RxCovarianceTest_Rating *new_RxCovarianceTest_Rating_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_Rating, init)
}

RxCovarianceTest_Rating *create_RxCovarianceTest_Rating_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_Rating, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_Rating)

@implementation RxCovarianceTest_CoolRating

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_CoolRating_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_CoolRating = { "CoolRating", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_CoolRating;
}

@end

void RxCovarianceTest_CoolRating_init(RxCovarianceTest_CoolRating *self) {
  RxCovarianceTest_Rating_init(self);
}

RxCovarianceTest_CoolRating *new_RxCovarianceTest_CoolRating_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_CoolRating, init)
}

RxCovarianceTest_CoolRating *create_RxCovarianceTest_CoolRating_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_CoolRating, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_CoolRating)

@implementation RxCovarianceTest_Result

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_Result_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_Result = { "Result", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_Result;
}

@end

void RxCovarianceTest_Result_init(RxCovarianceTest_Result *self) {
  NSObject_init(self);
}

RxCovarianceTest_Result *new_RxCovarianceTest_Result_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_Result, init)
}

RxCovarianceTest_Result *create_RxCovarianceTest_Result_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_Result, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_Result)

@implementation RxCovarianceTest_ExtendedResult

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_ExtendedResult_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxCovarianceTest;" };
  static const J2ObjcClassInfo _RxCovarianceTest_ExtendedResult = { "ExtendedResult", "rx", ptrTable, methods, NULL, 7, 0x8, 1, 0, 0, -1, -1, -1, -1 };
  return &_RxCovarianceTest_ExtendedResult;
}

@end

void RxCovarianceTest_ExtendedResult_init(RxCovarianceTest_ExtendedResult *self) {
  RxCovarianceTest_Result_init(self);
}

RxCovarianceTest_ExtendedResult *new_RxCovarianceTest_ExtendedResult_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_ExtendedResult, init)
}

RxCovarianceTest_ExtendedResult *create_RxCovarianceTest_ExtendedResult_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_ExtendedResult, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCovarianceTest_ExtendedResult)

@implementation RxCovarianceTest_$3

- (JavaLangInteger *)callWithId:(RxCovarianceTest_Media *)t1
                         withId:(RxCovarianceTest_Media *)t2 {
  return JavaLangInteger_valueOfWithInt_(1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Media;LRxCovarianceTest_Media;", "LRxCovarianceTest;", "testSortedList", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/CovarianceTest$Media;Lrx/CovarianceTest$Media;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$3 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxCovarianceTest_$3;
}

@end

void RxCovarianceTest_$3_init(RxCovarianceTest_$3 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$3 *new_RxCovarianceTest_$3_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$3, init)
}

RxCovarianceTest_$3 *create_RxCovarianceTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$3, init)
}

@implementation RxCovarianceTest_$4

- (IOSClass *)callWithId:(RxCovarianceTest_Movie *)m {
  return [((RxCovarianceTest_Movie *) nil_chk(m)) java_getClass];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Movie;", "(Lrx/CovarianceTest$Movie;)Ljava/lang/Class<+Lrx/CovarianceTest$Movie;>;", "LRxCovarianceTest;", "testGroupByCompose", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/CovarianceTest$Movie;Ljava/lang/Class<+Lrx/CovarianceTest$Movie;>;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$4 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$4;
}

@end

void RxCovarianceTest_$4_init(RxCovarianceTest_$4 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$4 *new_RxCovarianceTest_$4_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$4, init)
}

RxCovarianceTest_$4 *create_RxCovarianceTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$4, init)
}

@implementation RxCovarianceTest_$5

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(g)) composeWithRxObservable_Transformer:create_RxCovarianceTest_$5_$1_init()])) mapWithRxFunctionsFunc1:create_RxCovarianceTest_$5_$2_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Class<+Lrx/CovarianceTest$Movie;>;Lrx/CovarianceTest$Movie;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxCovarianceTest;", "testGroupByCompose", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Class<+Lrx/CovarianceTest$Movie;>;Lrx/CovarianceTest$Movie;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$5 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$5;
}

@end

void RxCovarianceTest_$5_init(RxCovarianceTest_$5 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$5 *new_RxCovarianceTest_$5_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$5, init)
}

RxCovarianceTest_$5 *create_RxCovarianceTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$5, init)
}

@implementation RxCovarianceTest_$5_$1

- (RxObservable *)callWithId:(RxObservable *)m {
  return [((RxObservable *) nil_chk(m)) concatWithWithRxObservable:RxObservable_justWithId_(create_RxCovarianceTest_ActionMovie_init())];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$5_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$Movie;>;)Lrx/Observable<Lrx/CovarianceTest$Movie;>;", "LRxCovarianceTest_$5;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$Transformer<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$5_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$5_$1;
}

@end

void RxCovarianceTest_$5_$1_init(RxCovarianceTest_$5_$1 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$5_$1 *new_RxCovarianceTest_$5_$1_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$5_$1, init)
}

RxCovarianceTest_$5_$1 *create_RxCovarianceTest_$5_$1_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$5_$1, init)
}

@implementation RxCovarianceTest_$5_$2

- (NSString *)callWithId:(RxCovarianceTest_Movie *)m {
  return [((RxCovarianceTest_Movie *) nil_chk(m)) description];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$5_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Movie;", "LRxCovarianceTest_$5;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/CovarianceTest$Movie;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$5_$2 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxCovarianceTest_$5_$2;
}

@end

void RxCovarianceTest_$5_$2_init(RxCovarianceTest_$5_$2 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$5_$2 *new_RxCovarianceTest_$5_$2_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$5_$2, init)
}

RxCovarianceTest_$5_$2 *create_RxCovarianceTest_$5_$2_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$5_$2, init)
}

@implementation RxCovarianceTest_$6

- (RxObservable *)callWithId:(RxObservable *)t1 {
  return RxObservable_justWithId_(create_RxCovarianceTest_Movie_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$Movie;>;)Lrx/Observable<Lrx/CovarianceTest$Movie;>;", "LRxCovarianceTest;", "testCovarianceOfCompose", "Ljava/lang/Object;Lrx/Observable$Transformer<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$6 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$6;
}

@end

void RxCovarianceTest_$6_init(RxCovarianceTest_$6 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$6 *new_RxCovarianceTest_$6_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$6, init)
}

RxCovarianceTest_$6 *create_RxCovarianceTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$6, init)
}

@implementation RxCovarianceTest_$7

- (RxObservable *)callWithId:(RxObservable *)t1 {
  return RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$Movie;>;)Lrx/Observable<Lrx/CovarianceTest$HorrorMovie;>;", "LRxCovarianceTest;", "testCovarianceOfCompose2", "Ljava/lang/Object;Lrx/Observable$Transformer<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$HorrorMovie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$7 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$7;
}

@end

void RxCovarianceTest_$7_init(RxCovarianceTest_$7 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$7 *new_RxCovarianceTest_$7_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$7, init)
}

RxCovarianceTest_$7 *create_RxCovarianceTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$7, init)
}

@implementation RxCovarianceTest_$8

- (RxObservable *)callWithId:(RxObservable *)t1 {
  return [((RxObservable *) nil_chk(RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init()))) mapWithRxFunctionsFunc1:create_RxCovarianceTest_$8_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$Movie;>;)Lrx/Observable<Lrx/CovarianceTest$HorrorMovie;>;", "LRxCovarianceTest;", "testCovarianceOfCompose3", "Ljava/lang/Object;Lrx/Observable$Transformer<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$HorrorMovie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$8 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$8;
}

@end

void RxCovarianceTest_$8_init(RxCovarianceTest_$8 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$8 *new_RxCovarianceTest_$8_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$8, init)
}

RxCovarianceTest_$8 *create_RxCovarianceTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$8, init)
}

@implementation RxCovarianceTest_$8_$1

- (RxCovarianceTest_HorrorMovie *)callWithId:(RxCovarianceTest_HorrorMovie *)horrorMovie {
  return horrorMovie;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$8_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxCovarianceTest_HorrorMovie;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_HorrorMovie;", "LRxCovarianceTest_$8;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/CovarianceTest$HorrorMovie;Lrx/CovarianceTest$HorrorMovie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$8_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxCovarianceTest_$8_$1;
}

@end

void RxCovarianceTest_$8_$1_init(RxCovarianceTest_$8_$1 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$8_$1 *new_RxCovarianceTest_$8_$1_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$8_$1, init)
}

RxCovarianceTest_$8_$1 *create_RxCovarianceTest_$8_$1_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$8_$1, init)
}

@implementation RxCovarianceTest_$9

- (RxObservable *)callWithId:(RxObservable *)t1 {
  return [((RxObservable *) nil_chk(t1)) mapWithRxFunctionsFunc1:create_RxCovarianceTest_$9_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$HorrorMovie;>;)Lrx/Observable<Lrx/CovarianceTest$HorrorMovie;>;", "LRxCovarianceTest;", "testCovarianceOfCompose4", "Ljava/lang/Object;Lrx/Observable$Transformer<Lrx/CovarianceTest$HorrorMovie;Lrx/CovarianceTest$HorrorMovie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$9 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxCovarianceTest_$9;
}

@end

void RxCovarianceTest_$9_init(RxCovarianceTest_$9 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$9 *new_RxCovarianceTest_$9_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$9, init)
}

RxCovarianceTest_$9 *create_RxCovarianceTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$9, init)
}

@implementation RxCovarianceTest_$9_$1

- (RxCovarianceTest_HorrorMovie *)callWithId:(RxCovarianceTest_HorrorMovie *)horrorMovie {
  return horrorMovie;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$9_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxCovarianceTest_HorrorMovie;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_HorrorMovie;", "LRxCovarianceTest_$9;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/CovarianceTest$HorrorMovie;Lrx/CovarianceTest$HorrorMovie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$9_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxCovarianceTest_$9_$1;
}

@end

void RxCovarianceTest_$9_$1_init(RxCovarianceTest_$9_$1 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$9_$1 *new_RxCovarianceTest_$9_$1_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$9_$1, init)
}

RxCovarianceTest_$9_$1 *create_RxCovarianceTest_$9_$1_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$9_$1, init)
}

@implementation RxCovarianceTest_$1

- (RxObservable *)callWithId:(RxObservable *)movieList {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(movieList)) startWithWithId:create_JavaUtilArrayList_init()])) bufferWithInt:2 withInt:1])) skipWithInt:1])) flatMapWithRxFunctionsFunc1:JreLoadStatic(RxCovarianceTest, calculateDelta)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<Ljava/util/List<Lrx/CovarianceTest$Movie;>;>;)Lrx/Observable<Lrx/CovarianceTest$Movie;>;", "LRxCovarianceTest;", "Ljava/lang/Object;Lrx/Observable$Transformer<Ljava/util/List<Lrx/CovarianceTest$Movie;>;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxCovarianceTest_$1;
}

@end

void RxCovarianceTest_$1_init(RxCovarianceTest_$1 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$1 *new_RxCovarianceTest_$1_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$1, init)
}

RxCovarianceTest_$1 *create_RxCovarianceTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$1, init)
}

@implementation RxCovarianceTest_$2

- (RxObservable *)callWithId:(id<JavaUtilList>)listOfLists {
  if ([((id<JavaUtilList>) nil_chk(listOfLists)) size] == 1) {
    return RxObservable_fromWithJavaLangIterable_([listOfLists getWithInt:0]);
  }
  else {
    id<JavaUtilList> newList = [listOfLists getWithInt:1];
    id<JavaUtilList> oldList = create_JavaUtilArrayList_initWithJavaUtilCollection_([listOfLists getWithInt:0]);
    id<JavaUtilSet> delta = create_JavaUtilLinkedHashSet_init();
    [delta addAllWithJavaUtilCollection:newList];
    [delta removeAllWithJavaUtilCollection:oldList];
    [oldList removeAllWithJavaUtilCollection:newList];
    for (RxCovarianceTest_Movie * __strong old in oldList) {
      [delta addWithId:create_RxCovarianceTest_Movie_init()];
    }
    return RxObservable_fromWithJavaLangIterable_(delta);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCovarianceTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaUtilList;", "(Ljava/util/List<Ljava/util/List<Lrx/CovarianceTest$Movie;>;>;)Lrx/Observable<Lrx/CovarianceTest$Movie;>;", "LRxCovarianceTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/util/List<Ljava/util/List<Lrx/CovarianceTest$Movie;>;>;Lrx/Observable<Lrx/CovarianceTest$Movie;>;>;" };
  static const J2ObjcClassInfo _RxCovarianceTest_$2 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxCovarianceTest_$2;
}

@end

void RxCovarianceTest_$2_init(RxCovarianceTest_$2 *self) {
  NSObject_init(self);
}

RxCovarianceTest_$2 *new_RxCovarianceTest_$2_init() {
  J2OBJC_NEW_IMPL(RxCovarianceTest_$2, init)
}

RxCovarianceTest_$2 *create_RxCovarianceTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxCovarianceTest_$2, init)
}
