//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/util/ScalarSynchronousSingleTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalUtilScalarSynchronousSingle.h"
#include "RxInternalUtilScalarSynchronousSingleTest.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Mockito.h"

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$12();

@interface RxInternalUtilScalarSynchronousSingleTest_$1 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$1)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$1_init(RxInternalUtilScalarSynchronousSingleTest_$1 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$1_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$2 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$2)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$2_init(RxInternalUtilScalarSynchronousSingleTest_$2 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$2 *new_RxInternalUtilScalarSynchronousSingleTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$2 *create_RxInternalUtilScalarSynchronousSingleTest_$2_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$3 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$3)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$3_init(RxInternalUtilScalarSynchronousSingleTest_$3 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$3 *new_RxInternalUtilScalarSynchronousSingleTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$3 *create_RxInternalUtilScalarSynchronousSingleTest_$3_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$4 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$4)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$4_init(RxInternalUtilScalarSynchronousSingleTest_$4 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$4 *new_RxInternalUtilScalarSynchronousSingleTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$4 *create_RxInternalUtilScalarSynchronousSingleTest_$4_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$5 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$5)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$5_init(RxInternalUtilScalarSynchronousSingleTest_$5 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$5 *new_RxInternalUtilScalarSynchronousSingleTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$5 *create_RxInternalUtilScalarSynchronousSingleTest_$5_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$6 : NSObject < RxSingle_OnSubscribe > {
 @public
  id<RxFunctionsAction0> val$unSubscribe_;
}

- (void)callWithId:(RxSingleSubscriber *)subscriber;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$6)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousSingleTest_$6, val$unSubscribe_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(RxInternalUtilScalarSynchronousSingleTest_$6 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$6 *new_RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$6 *create_RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

@interface RxInternalUtilScalarSynchronousSingleTest_$7 : NSObject < RxFunctionsFunc1 > {
 @public
  NSException *val$error_;
}

- (RxSingle *)callWithId:(JavaLangInteger *)integer;

- (instancetype)initWithNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$7)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousSingleTest_$7, val$error_, NSException *)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(RxInternalUtilScalarSynchronousSingleTest_$7 *self, NSException *capture$0);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$7 *new_RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$7 *create_RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(NSException *capture$0);

@interface RxInternalUtilScalarSynchronousSingleTest_$7_$1 : NSObject < RxSingle_OnSubscribe > {
 @public
  RxInternalUtilScalarSynchronousSingleTest_$7 *this$0_;
}

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber;

- (instancetype)initWithRxInternalUtilScalarSynchronousSingleTest_$7:(RxInternalUtilScalarSynchronousSingleTest_$7 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$7_$1)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousSingleTest_$7_$1, this$0_, RxInternalUtilScalarSynchronousSingleTest_$7 *)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7_$1 *self, RxInternalUtilScalarSynchronousSingleTest_$7 *outer$);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$7_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$7_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7 *outer$);

@interface RxInternalUtilScalarSynchronousSingleTest_$8 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(JavaLangInteger *)integer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$8)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$8_init(RxInternalUtilScalarSynchronousSingleTest_$8 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$8 *new_RxInternalUtilScalarSynchronousSingleTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$8 *create_RxInternalUtilScalarSynchronousSingleTest_$8_init();

@interface RxInternalUtilScalarSynchronousSingleTest_$8_$1 : NSObject < RxSingle_OnSubscribe > {
 @public
  JavaLangInteger *val$integer_;
}

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber;

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousSingleTest_$8_$1)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousSingleTest_$8_$1, val$integer_, JavaLangInteger *)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(RxInternalUtilScalarSynchronousSingleTest_$8_$1 *self, JavaLangInteger *capture$0);

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$8_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(JavaLangInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousSingleTest_$8_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(JavaLangInteger *capture$0);

@implementation RxInternalUtilScalarSynchronousSingleTest

- (void)backPressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)backPressureSubscribeOn {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)backPressureObserveOn {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)backPressureSubscribeOn2 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)backPressureObserveOn2 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) observeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)backPressureFlatMapJust {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousSingleTest_$1_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:@"1"];
  [ts assertCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:@"1"];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)syncObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousSingleTest_$2_init();
  [((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)syncFlatMapJustObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousSingleTest_$3_init();
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousSingleTest_$4_init()])) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)asyncObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousSingleTest_$5_init();
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) unsafeSubscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)scalarFlatMap {
  id<RxFunctionsAction0> unSubscribe = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction0_class_());
  RxSingle *s = RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(unSubscribe));
  id<RxSubscription> subscription = [((RxSingle *) nil_chk(RxSingle_mergeWithRxSingle_(RxSingle_justWithId_(s)))) subscribe];
  [((id<RxSubscription>) nil_chk(subscription)) unsubscribe];
  [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_(unSubscribe))) call];
}

- (void)scalarFlatMapError {
  NSException *error = create_JavaLangIllegalStateException_init();
  RxSingle *s = RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(s)) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(error)])) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertNoValues];
  [testSubscriber assertErrorWithNSException:error];
}

- (void)scalarFlatMapSuccess {
  RxSingle *s = RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  RxObserversTestSubscriber *testSubscriber = create_RxObserversTestSubscriber_init();
  [((RxSingle *) nil_chk([((RxSingle *) nil_chk(s)) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousSingleTest_$8_init()])) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber assertNoErrors];
  [testSubscriber assertValueWithId:@"1"];
}

- (void)getValue {
  RxSingle *s = RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(1), [((RxInternalUtilScalarSynchronousSingle *) nil_chk(((RxInternalUtilScalarSynchronousSingle *) cast_chk(s, [RxInternalUtilScalarSynchronousSingle class])))) get]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(backPressure);
  methods[1].selector = @selector(backPressureSubscribeOn);
  methods[2].selector = @selector(backPressureObserveOn);
  methods[3].selector = @selector(backPressureSubscribeOn2);
  methods[4].selector = @selector(backPressureObserveOn2);
  methods[5].selector = @selector(backPressureFlatMapJust);
  methods[6].selector = @selector(syncObserverNextThrows);
  methods[7].selector = @selector(syncFlatMapJustObserverNextThrows);
  methods[8].selector = @selector(asyncObserverNextThrows);
  methods[9].selector = @selector(scalarFlatMap);
  methods[10].selector = @selector(scalarFlatMapError);
  methods[11].selector = @selector(scalarFlatMapSuccess);
  methods[12].selector = @selector(getValue);
  methods[13].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$0, "LJavaLangException;", (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$1, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$2, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$3, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$4, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$5, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$6, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$7, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$8, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$9, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$10, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$11, (void *)&RxInternalUtilScalarSynchronousSingleTest__Annotations$12 };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest = { "ScalarSynchronousSingleTest", "rx.internal.util", ptrTable, methods, NULL, 7, 0x1, 14, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_init(RxInternalUtilScalarSynchronousSingleTest *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest *new_RxInternalUtilScalarSynchronousSingleTest_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest, init)
}

RxInternalUtilScalarSynchronousSingleTest *create_RxInternalUtilScalarSynchronousSingleTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest, init)
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousSingleTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilScalarSynchronousSingleTest)

@implementation RxInternalUtilScalarSynchronousSingleTest_$1

- (RxSingle *)callWithId:(JavaLangInteger *)v {
  return RxSingle_justWithId_(NSString_valueOf_(v));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalUtilScalarSynchronousSingleTest;", "backPressureFlatMapJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$1 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$1;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$1_init(RxInternalUtilScalarSynchronousSingleTest_$1 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$1, init)
}

RxInternalUtilScalarSynchronousSingleTest_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$1, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$2

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousSingleTest;", "syncObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$2 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$2;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$2_init(RxInternalUtilScalarSynchronousSingleTest_$2 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$2 *new_RxInternalUtilScalarSynchronousSingleTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$2, init)
}

RxInternalUtilScalarSynchronousSingleTest_$2 *create_RxInternalUtilScalarSynchronousSingleTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$2, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$3

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousSingleTest;", "syncFlatMapJustObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$3 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$3;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$3_init(RxInternalUtilScalarSynchronousSingleTest_$3 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$3 *new_RxInternalUtilScalarSynchronousSingleTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$3, init)
}

RxInternalUtilScalarSynchronousSingleTest_$3 *create_RxInternalUtilScalarSynchronousSingleTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$3, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$4

- (RxSingle *)callWithId:(JavaLangInteger *)v {
  return RxSingle_justWithId_(v);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Single<Ljava/lang/Integer;>;", "LRxInternalUtilScalarSynchronousSingleTest;", "syncFlatMapJustObserverNextThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Single<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$4 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$4;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$4_init(RxInternalUtilScalarSynchronousSingleTest_$4 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$4 *new_RxInternalUtilScalarSynchronousSingleTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$4, init)
}

RxInternalUtilScalarSynchronousSingleTest_$4 *create_RxInternalUtilScalarSynchronousSingleTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$4, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$5

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousSingleTest;", "asyncObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$5 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$5;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$5_init(RxInternalUtilScalarSynchronousSingleTest_$5 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$5 *new_RxInternalUtilScalarSynchronousSingleTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$5, init)
}

RxInternalUtilScalarSynchronousSingleTest_$5 *create_RxInternalUtilScalarSynchronousSingleTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$5, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$6

- (void)callWithId:(RxSingleSubscriber *)subscriber {
  [((RxSingleSubscriber *) nil_chk(subscriber)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(val$unSubscribe_)];
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unSubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unSubscribe_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-Ljava/lang/Integer;>;)V", "LRxFunctionsAction0;", "LRxInternalUtilScalarSynchronousSingleTest;", "scalarFlatMap", "Ljava/lang/Object;Lrx/Single$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$6 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$6;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(RxInternalUtilScalarSynchronousSingleTest_$6 *self, id<RxFunctionsAction0> capture$0) {
  JreStrongAssign(&self->val$unSubscribe_, capture$0);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$6 *new_RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$6, initWithRxFunctionsAction0_, capture$0)
}

RxInternalUtilScalarSynchronousSingleTest_$6 *create_RxInternalUtilScalarSynchronousSingleTest_$6_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$6, initWithRxFunctionsAction0_, capture$0)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$7

- (RxSingle *)callWithId:(JavaLangInteger *)integer {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(self));
}

- (instancetype)initWithNSException:(NSException *)capture$0 {
  RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$error_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Single<Ljava/lang/String;>;", "LNSException;", "LRxInternalUtilScalarSynchronousSingleTest;", "scalarFlatMapError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$7 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$7;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(RxInternalUtilScalarSynchronousSingleTest_$7 *self, NSException *capture$0) {
  JreStrongAssign(&self->val$error_, capture$0);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$7 *new_RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$7, initWithNSException_, capture$0)
}

RxInternalUtilScalarSynchronousSingleTest_$7 *create_RxInternalUtilScalarSynchronousSingleTest_$7_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$7, initWithNSException_, capture$0)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$7_$1

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber {
  [((RxSingleSubscriber *) nil_chk(singleSubscriber)) onErrorWithNSException:this$0_->val$error_];
}

- (instancetype)initWithRxInternalUtilScalarSynchronousSingleTest_$7:(RxInternalUtilScalarSynchronousSingleTest_$7 *)outer$ {
  RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalUtilScalarSynchronousSingleTest_$7:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalUtilScalarSynchronousSingleTest_$7;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-Ljava/lang/String;>;)V", "LRxInternalUtilScalarSynchronousSingleTest_$7;", "callWithId:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$7_$1 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$7_$1;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7_$1 *self, RxInternalUtilScalarSynchronousSingleTest_$7 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$7_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$7_$1, initWithRxInternalUtilScalarSynchronousSingleTest_$7_, outer$)
}

RxInternalUtilScalarSynchronousSingleTest_$7_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$7_$1_initWithRxInternalUtilScalarSynchronousSingleTest_$7_(RxInternalUtilScalarSynchronousSingleTest_$7 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$7_$1, initWithRxInternalUtilScalarSynchronousSingleTest_$7_, outer$)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$8

- (RxSingle *)callWithId:(JavaLangInteger *)integer {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(integer));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousSingleTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalUtilScalarSynchronousSingleTest;", "scalarFlatMapSuccess", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$8 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$8;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$8_init(RxInternalUtilScalarSynchronousSingleTest_$8 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$8 *new_RxInternalUtilScalarSynchronousSingleTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$8, init)
}

RxInternalUtilScalarSynchronousSingleTest_$8 *create_RxInternalUtilScalarSynchronousSingleTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$8, init)
}

@implementation RxInternalUtilScalarSynchronousSingleTest_$8_$1

- (void)callWithId:(RxSingleSubscriber *)singleSubscriber {
  [((RxSingleSubscriber *) nil_chk(singleSubscriber)) onSuccessWithId:NSString_valueOf_(val$integer_)];
}

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0 {
  RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$integer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$integer_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-Ljava/lang/String;>;)V", "LJavaLangInteger;", "LRxInternalUtilScalarSynchronousSingleTest_$8;", "callWithId:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousSingleTest_$8_$1 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalUtilScalarSynchronousSingleTest_$8_$1;
}

@end

void RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(RxInternalUtilScalarSynchronousSingleTest_$8_$1 *self, JavaLangInteger *capture$0) {
  JreStrongAssign(&self->val$integer_, capture$0);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousSingleTest_$8_$1 *new_RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousSingleTest_$8_$1, initWithJavaLangInteger_, capture$0)
}

RxInternalUtilScalarSynchronousSingleTest_$8_$1 *create_RxInternalUtilScalarSynchronousSingleTest_$8_$1_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousSingleTest_$8_$1, initWithJavaLangInteger_, capture$0)
}
