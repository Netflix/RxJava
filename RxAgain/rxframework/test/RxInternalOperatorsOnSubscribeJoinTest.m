//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeJoinTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOnSubscribeJoinTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$11();

@interface RxInternalOperatorsOnSubscribeJoinTest_$1 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeJoinTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeJoinTest_$1_init(RxInternalOperatorsOnSubscribeJoinTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$1 *new_RxInternalOperatorsOnSubscribeJoinTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$1 *create_RxInternalOperatorsOnSubscribeJoinTest_$1_init();

@interface RxInternalOperatorsOnSubscribeJoinTest_$2 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservable *val$observable_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeJoinTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeJoinTest_$2, val$observable_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxInternalOperatorsOnSubscribeJoinTest_$2 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$2 *new_RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$2 *create_RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxObservable *capture$0);

@interface RxInternalOperatorsOnSubscribeJoinTest_$3 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeJoinTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeJoinTest_$3_init(RxInternalOperatorsOnSubscribeJoinTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$3 *new_RxInternalOperatorsOnSubscribeJoinTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$3 *create_RxInternalOperatorsOnSubscribeJoinTest_$3_init();

@interface RxInternalOperatorsOnSubscribeJoinTest_$4 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeJoinTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeJoinTest_$4_init(RxInternalOperatorsOnSubscribeJoinTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$4 *new_RxInternalOperatorsOnSubscribeJoinTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$4 *create_RxInternalOperatorsOnSubscribeJoinTest_$4_init();

@interface RxInternalOperatorsOnSubscribeJoinTest_$5 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeJoinTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeJoinTest_$5_init(RxInternalOperatorsOnSubscribeJoinTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$5 *new_RxInternalOperatorsOnSubscribeJoinTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeJoinTest_$5 *create_RxInternalOperatorsOnSubscribeJoinTest_$5_init();

@implementation RxInternalOperatorsOnSubscribeJoinTest

- (id<RxFunctionsFunc1>)justWithRxObservable:(RxObservable *)observable {
  return create_RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(observable);
}

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)normal1 {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(16)];
  [source2 onNextWithId:JavaLangInteger_valueOfWithInt_(32)];
  [source2 onNextWithId:JavaLangInteger_valueOfWithInt_(64)];
  [source1 onCompleted];
  [source2 onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(17)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(18)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(20)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(33)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(34)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(36)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(65)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(66)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(68)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)normal1WithDuration {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *duration1 = RxSubjectsPublishSubject_create();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:duration1] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(16)];
  [((RxSubjectsPublishSubject *) nil_chk(duration1)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(8)];
  [source1 onCompleted];
  [source2 onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(17)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(18)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(20)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(24)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)normal2 {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source1 onCompleted];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(16)];
  [source2 onNextWithId:JavaLangInteger_valueOfWithInt_(32)];
  [source2 onNextWithId:JavaLangInteger_valueOfWithInt_(64)];
  [source2 onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(17)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(18)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(33)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(34)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(65)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangInteger_valueOfWithInt_(66)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)leftThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source1 onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"Forced failure")];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)rightThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"Forced failure")];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)leftDurationThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *duration1 = RxObservable_errorWithNSException_(create_JavaLangRuntimeException_initWithNSString_(@"Forced failure"));
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:duration1] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)rightDurationThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  RxObservable *duration1 = RxObservable_errorWithNSException_(create_JavaLangRuntimeException_initWithNSString_(@"Forced failure"));
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:duration1] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)leftDurationSelectorThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> fail = create_RxInternalOperatorsOnSubscribeJoinTest_$3_init();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:fail withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)rightDurationSelectorThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> fail = create_RxInternalOperatorsOnSubscribeJoinTest_$4_init();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:fail withRxFunctionsFunc2:add_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)resultSelectorThrows {
  RxSubjectsPublishSubject *source1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *source2 = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc2> fail = create_RxInternalOperatorsOnSubscribeJoinTest_$5_init();
  RxObservable *m = [((RxSubjectsPublishSubject *) nil_chk(source1)) joinWithRxObservable:source2 withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc1:[self justWithRxObservable:RxObservable_never()] withRxFunctionsFunc2:fail];
  [((RxObservable *) nil_chk(m)) subscribeWithRxObserver:observer_];
  [source1 onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(source2)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeJoinTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(observer_);
  RELEASE_(add_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxFunctionsFunc1;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(justWithRxObservable:);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(normal1);
  methods[3].selector = @selector(normal1WithDuration);
  methods[4].selector = @selector(normal2);
  methods[5].selector = @selector(leftThrows);
  methods[6].selector = @selector(rightThrows);
  methods[7].selector = @selector(leftDurationThrows);
  methods[8].selector = @selector(rightDurationThrows);
  methods[9].selector = @selector(leftDurationSelectorThrows);
  methods[10].selector = @selector(rightDurationSelectorThrows);
  methods[11].selector = @selector(resultSelectorThrows);
  methods[12].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 14, 15 },
    { "add_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x0, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "just", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<TT;>;>;", (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$10, "Lrx/Observer<Ljava/lang/Object;>;", (void *)&RxInternalOperatorsOnSubscribeJoinTest__Annotations$11, "Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest = { "OnSubscribeJoinTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 13, 2, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_init(RxInternalOperatorsOnSubscribeJoinTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->add_, new_RxInternalOperatorsOnSubscribeJoinTest_$1_init());
}

RxInternalOperatorsOnSubscribeJoinTest *new_RxInternalOperatorsOnSubscribeJoinTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest, init)
}

RxInternalOperatorsOnSubscribeJoinTest *create_RxInternalOperatorsOnSubscribeJoinTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeJoinTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeJoinTest)

@implementation RxInternalOperatorsOnSubscribeJoinTest_$1

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeJoinTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeJoinTest;", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_$1_init(RxInternalOperatorsOnSubscribeJoinTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeJoinTest_$1 *new_RxInternalOperatorsOnSubscribeJoinTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$1, init)
}

RxInternalOperatorsOnSubscribeJoinTest_$1 *create_RxInternalOperatorsOnSubscribeJoinTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeJoinTest_$2

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$observable_;
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observable_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<TT;>;", "LRxObservable;", "(Lrx/Observable<TT;>;)V", "Lrx/Observable<TT;>;", "LRxInternalOperatorsOnSubscribeJoinTest;", "justWithRxObservable:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<TT;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxInternalOperatorsOnSubscribeJoinTest_$2 *self, RxObservable *capture$0) {
  JreStrongAssign(&self->val$observable_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeJoinTest_$2 *new_RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$2, initWithRxObservable_, capture$0)
}

RxInternalOperatorsOnSubscribeJoinTest_$2 *create_RxInternalOperatorsOnSubscribeJoinTest_$2_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$2, initWithRxObservable_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeJoinTest_$3

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeJoinTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeJoinTest;", "leftDurationSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_$3_init(RxInternalOperatorsOnSubscribeJoinTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeJoinTest_$3 *new_RxInternalOperatorsOnSubscribeJoinTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$3, init)
}

RxInternalOperatorsOnSubscribeJoinTest_$3 *create_RxInternalOperatorsOnSubscribeJoinTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$3, init)
}

@implementation RxInternalOperatorsOnSubscribeJoinTest_$4

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeJoinTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeJoinTest;", "rightDurationSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_$4_init(RxInternalOperatorsOnSubscribeJoinTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeJoinTest_$4 *new_RxInternalOperatorsOnSubscribeJoinTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$4, init)
}

RxInternalOperatorsOnSubscribeJoinTest_$4 *create_RxInternalOperatorsOnSubscribeJoinTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$4, init)
}

@implementation RxInternalOperatorsOnSubscribeJoinTest_$5

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeJoinTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeJoinTest;", "resultSelectorThrows", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeJoinTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeJoinTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeJoinTest_$5_init(RxInternalOperatorsOnSubscribeJoinTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeJoinTest_$5 *new_RxInternalOperatorsOnSubscribeJoinTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$5, init)
}

RxInternalOperatorsOnSubscribeJoinTest_$5 *create_RxInternalOperatorsOnSubscribeJoinTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeJoinTest_$5, init)
}
