//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorMapNotificationTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorMapNotification.h"
#include "RxInternalOperatorsOperatorMapNotificationTest.h"
#include "RxObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$2();

@interface RxInternalOperatorsOperatorMapNotificationTest_$1 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)item;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$1_init(RxInternalOperatorsOperatorMapNotificationTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$1 *new_RxInternalOperatorsOperatorMapNotificationTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$1 *create_RxInternalOperatorsOperatorMapNotificationTest_$1_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$2 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$2_init(RxInternalOperatorsOperatorMapNotificationTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$2 *new_RxInternalOperatorsOperatorMapNotificationTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$2 *create_RxInternalOperatorsOperatorMapNotificationTest_$2_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$3 : NSObject < RxFunctionsFunc0 >

- (RxObservable *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$3_init(RxInternalOperatorsOperatorMapNotificationTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$3 *new_RxInternalOperatorsOperatorMapNotificationTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$3 *create_RxInternalOperatorsOperatorMapNotificationTest_$3_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$4 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)item;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$4_init(RxInternalOperatorsOperatorMapNotificationTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$4 *new_RxInternalOperatorsOperatorMapNotificationTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$4 *create_RxInternalOperatorsOperatorMapNotificationTest_$4_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$5 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$5_init(RxInternalOperatorsOperatorMapNotificationTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$5 *new_RxInternalOperatorsOperatorMapNotificationTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$5 *create_RxInternalOperatorsOperatorMapNotificationTest_$5_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$6 : NSObject < RxFunctionsFunc0 >

- (JavaLangInteger *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$6_init(RxInternalOperatorsOperatorMapNotificationTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$6 *new_RxInternalOperatorsOperatorMapNotificationTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$6 *create_RxInternalOperatorsOperatorMapNotificationTest_$6_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$7 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)item;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$7_init(RxInternalOperatorsOperatorMapNotificationTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$7 *new_RxInternalOperatorsOperatorMapNotificationTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$7 *create_RxInternalOperatorsOperatorMapNotificationTest_$7_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$8 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSException *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$8_init(RxInternalOperatorsOperatorMapNotificationTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$8 *new_RxInternalOperatorsOperatorMapNotificationTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$8 *create_RxInternalOperatorsOperatorMapNotificationTest_$8_init();

@interface RxInternalOperatorsOperatorMapNotificationTest_$9 : NSObject < RxFunctionsFunc0 >

- (JavaLangInteger *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotificationTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOperatorMapNotificationTest_$9_init(RxInternalOperatorsOperatorMapNotificationTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$9 *new_RxInternalOperatorsOperatorMapNotificationTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMapNotificationTest_$9 *create_RxInternalOperatorsOperatorMapNotificationTest_$9_init();

@implementation RxInternalOperatorsOperatorMapNotificationTest

- (void)testJust {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorMapNotificationTest_$1_init() withRxFunctionsFunc1:create_RxInternalOperatorsOperatorMapNotificationTest_$2_init() withRxFunctionsFunc0:create_RxInternalOperatorsOperatorMapNotificationTest_$3_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoErrors];
  [ts assertNotCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(2)];
}

- (void)backpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 3))) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(create_RxInternalOperatorsOperatorMapNotificationTest_$4_init(), create_RxInternalOperatorsOperatorMapNotificationTest_$5_init(), create_RxInternalOperatorsOperatorMapNotificationTest_$6_init())])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:3];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:3 type:NSObject_class_()]];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:4 type:NSObject_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)noBackpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(create_RxInternalOperatorsOperatorMapNotificationTest_$7_init(), create_RxInternalOperatorsOperatorMapNotificationTest_$8_init(), create_RxInternalOperatorsOperatorMapNotificationTest_$9_init())])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [ps onCompleted];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(0)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testJust);
  methods[1].selector = @selector(backpressure);
  methods[2].selector = @selector(noBackpressure);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorMapNotificationTest__Annotations$0, (void *)&RxInternalOperatorsOperatorMapNotificationTest__Annotations$1, (void *)&RxInternalOperatorsOperatorMapNotificationTest__Annotations$2 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest = { "OperatorMapNotificationTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_init(RxInternalOperatorsOperatorMapNotificationTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest *new_RxInternalOperatorsOperatorMapNotificationTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest, init)
}

RxInternalOperatorsOperatorMapNotificationTest *create_RxInternalOperatorsOperatorMapNotificationTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMapNotificationTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMapNotificationTest)

@implementation RxInternalOperatorsOperatorMapNotificationTest_$1

- (RxObservable *)callWithId:(JavaLangInteger *)item {
  return RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(([((JavaLangInteger *) nil_chk(item)) intValue] + 1)));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorMapNotificationTest;", "testJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$1;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$1_init(RxInternalOperatorsOperatorMapNotificationTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$1 *new_RxInternalOperatorsOperatorMapNotificationTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$1, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$1 *create_RxInternalOperatorsOperatorMapNotificationTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$1, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$2

- (RxObservable *)callWithId:(NSException *)e {
  return RxObservable_errorWithNSException_(e);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorMapNotificationTest;", "testJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$2;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$2_init(RxInternalOperatorsOperatorMapNotificationTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$2 *new_RxInternalOperatorsOperatorMapNotificationTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$2, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$2 *create_RxInternalOperatorsOperatorMapNotificationTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$2, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$3

- (RxObservable *)call {
  return RxObservable_never();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorMapNotificationTest;", "testJust", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$3;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$3_init(RxInternalOperatorsOperatorMapNotificationTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$3 *new_RxInternalOperatorsOperatorMapNotificationTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$3, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$3 *create_RxInternalOperatorsOperatorMapNotificationTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$3, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$4

- (JavaLangInteger *)callWithId:(JavaLangInteger *)item {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(item)) intValue] + 1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorMapNotificationTest;", "backpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$4;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$4_init(RxInternalOperatorsOperatorMapNotificationTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$4 *new_RxInternalOperatorsOperatorMapNotificationTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$4, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$4 *create_RxInternalOperatorsOperatorMapNotificationTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$4, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$5

- (JavaLangInteger *)callWithId:(NSException *)e {
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxInternalOperatorsOperatorMapNotificationTest;", "backpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$5;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$5_init(RxInternalOperatorsOperatorMapNotificationTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$5 *new_RxInternalOperatorsOperatorMapNotificationTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$5, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$5 *create_RxInternalOperatorsOperatorMapNotificationTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$5, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$6

- (JavaLangInteger *)call {
  return JavaLangInteger_valueOfWithInt_(5);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorMapNotificationTest;", "backpressure", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$6;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$6_init(RxInternalOperatorsOperatorMapNotificationTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$6 *new_RxInternalOperatorsOperatorMapNotificationTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$6, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$6 *create_RxInternalOperatorsOperatorMapNotificationTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$6, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$7

- (JavaLangInteger *)callWithId:(JavaLangInteger *)item {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(item)) intValue] + 1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorMapNotificationTest;", "noBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$7;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$7_init(RxInternalOperatorsOperatorMapNotificationTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$7 *new_RxInternalOperatorsOperatorMapNotificationTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$7, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$7 *create_RxInternalOperatorsOperatorMapNotificationTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$7, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$8

- (JavaLangInteger *)callWithId:(NSException *)e {
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSException;", "LRxInternalOperatorsOperatorMapNotificationTest;", "noBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$8;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$8_init(RxInternalOperatorsOperatorMapNotificationTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$8 *new_RxInternalOperatorsOperatorMapNotificationTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$8, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$8 *create_RxInternalOperatorsOperatorMapNotificationTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$8, init)
}

@implementation RxInternalOperatorsOperatorMapNotificationTest_$9

- (JavaLangInteger *)call {
  return JavaLangInteger_valueOfWithInt_(5);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMapNotificationTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorMapNotificationTest;", "noBackpressure", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMapNotificationTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorMapNotificationTest_$9;
}

@end

void RxInternalOperatorsOperatorMapNotificationTest_$9_init(RxInternalOperatorsOperatorMapNotificationTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMapNotificationTest_$9 *new_RxInternalOperatorsOperatorMapNotificationTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$9, init)
}

RxInternalOperatorsOperatorMapNotificationTest_$9 *create_RxInternalOperatorsOperatorMapNotificationTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMapNotificationTest_$9, init)
}
