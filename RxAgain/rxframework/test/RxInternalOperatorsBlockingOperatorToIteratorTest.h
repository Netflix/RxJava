//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/BlockingOperatorToIteratorTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest")
#ifdef RESTRICT_RxInternalOperatorsBlockingOperatorToIteratorTest
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest 0
#else
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest 1
#endif
#undef RESTRICT_RxInternalOperatorsBlockingOperatorToIteratorTest

#if !defined (RxInternalOperatorsBlockingOperatorToIteratorTest_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest || defined(INCLUDE_RxInternalOperatorsBlockingOperatorToIteratorTest))
#define RxInternalOperatorsBlockingOperatorToIteratorTest_

@interface RxInternalOperatorsBlockingOperatorToIteratorTest : NSObject

#pragma mark Public

- (instancetype)init;

- (void)constructorShouldBePrivate;

- (void)testExceptionThrownFromOnSubscribe;

- (void)testIteratorExertBackpressure;

- (void)testToIterator;

- (void)testToIteratorWithException;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorToIteratorTest)

FOUNDATION_EXPORT void RxInternalOperatorsBlockingOperatorToIteratorTest_init(RxInternalOperatorsBlockingOperatorToIteratorTest *self);

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorToIteratorTest *new_RxInternalOperatorsBlockingOperatorToIteratorTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorToIteratorTest *create_RxInternalOperatorsBlockingOperatorToIteratorTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorToIteratorTest)

#endif

#if !defined (RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest || defined(INCLUDE_RxInternalOperatorsBlockingOperatorToIteratorTest_Counter))
#define RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class JavaLangInteger;

@interface RxInternalOperatorsBlockingOperatorToIteratorTest_Counter : NSObject < JavaUtilIterator > {
 @public
  jint count_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)hasNext;

- (JavaLangInteger *)next;

- (void)remove;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsBlockingOperatorToIteratorTest_Counter)

inline jint RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_get_MAX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_MAX;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalOperatorsBlockingOperatorToIteratorTest_Counter, MAX, jint)

FOUNDATION_EXPORT void RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_init(RxInternalOperatorsBlockingOperatorToIteratorTest_Counter *self);

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorToIteratorTest_Counter *new_RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsBlockingOperatorToIteratorTest_Counter *create_RxInternalOperatorsBlockingOperatorToIteratorTest_Counter_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorToIteratorTest_Counter)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorToIteratorTest")
