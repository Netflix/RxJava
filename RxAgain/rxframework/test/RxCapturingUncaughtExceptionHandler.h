//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/CapturingUncaughtExceptionHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxCapturingUncaughtExceptionHandler")
#ifdef RESTRICT_RxCapturingUncaughtExceptionHandler
#define INCLUDE_ALL_RxCapturingUncaughtExceptionHandler 0
#else
#define INCLUDE_ALL_RxCapturingUncaughtExceptionHandler 1
#endif
#undef RESTRICT_RxCapturingUncaughtExceptionHandler

#if !defined (RxCapturingUncaughtExceptionHandler_) && (INCLUDE_ALL_RxCapturingUncaughtExceptionHandler || defined(INCLUDE_RxCapturingUncaughtExceptionHandler))
#define RxCapturingUncaughtExceptionHandler_

#define RESTRICT_JavaLangThread 1
#define INCLUDE_JavaLangThread_UncaughtExceptionHandler 1
#include "java/lang/Thread.h"

@class JavaLangThread;
@class JavaUtilConcurrentCountDownLatch;

@interface RxCapturingUncaughtExceptionHandler : NSObject < JavaLangThread_UncaughtExceptionHandler > {
 @public
  jint count_;
  NSException *caught_;
  JavaUtilConcurrentCountDownLatch *completed_;
}

#pragma mark Public

- (instancetype)init;

- (void)uncaughtExceptionWithJavaLangThread:(JavaLangThread *)t
                            withNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCapturingUncaughtExceptionHandler)

J2OBJC_FIELD_SETTER(RxCapturingUncaughtExceptionHandler, caught_, NSException *)
J2OBJC_FIELD_SETTER(RxCapturingUncaughtExceptionHandler, completed_, JavaUtilConcurrentCountDownLatch *)

FOUNDATION_EXPORT void RxCapturingUncaughtExceptionHandler_init(RxCapturingUncaughtExceptionHandler *self);

FOUNDATION_EXPORT RxCapturingUncaughtExceptionHandler *new_RxCapturingUncaughtExceptionHandler_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxCapturingUncaughtExceptionHandler *create_RxCapturingUncaughtExceptionHandler_init();

J2OBJC_TYPE_LITERAL_HEADER(RxCapturingUncaughtExceptionHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_RxCapturingUncaughtExceptionHandler")
