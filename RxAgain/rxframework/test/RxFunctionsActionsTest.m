//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/functions/ActionsTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsAction3.h"
#include "RxFunctionsAction4.h"
#include "RxFunctionsAction5.h"
#include "RxFunctionsAction6.h"
#include "RxFunctionsAction7.h"
#include "RxFunctionsAction8.h"
#include "RxFunctionsAction9.h"
#include "RxFunctionsActionN.h"
#include "RxFunctionsActions.h"
#include "RxFunctionsActionsTest.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxFunctionsFunc3.h"
#include "RxFunctionsFunc4.h"
#include "RxFunctionsFunc5.h"
#include "RxFunctionsFunc6.h"
#include "RxFunctionsFunc7.h"
#include "RxFunctionsFunc8.h"
#include "RxFunctionsFunc9.h"
#include "RxFunctionsFuncN.h"
#include "RxTestUtil.h"
#include "java/lang/Integer.h"
#include "java/lang/Void.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxFunctionsActionsTest__Annotations$12();

@interface RxFunctionsActionsTest_$1 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$1)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$1, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$1 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$1 *new_RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$1 *create_RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$2 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$2)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$2, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$2 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$2 *new_RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$2 *create_RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$3 : NSObject < RxFunctionsAction2 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$3)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$3, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$3 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$3 *new_RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$3 *create_RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$4 : NSObject < RxFunctionsAction3 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$4)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$4, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$4 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$4 *new_RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$4 *create_RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$5 : NSObject < RxFunctionsAction4 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$5)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$5, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$5 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$5 *new_RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$5 *create_RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$6 : NSObject < RxFunctionsAction5 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$6)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$6, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$6 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$6 *new_RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$6 *create_RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$7 : NSObject < RxFunctionsAction6 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$7)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$7, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$7 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$7 *new_RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$7 *create_RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$8 : NSObject < RxFunctionsAction7 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$8)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$8, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$8 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$8 *new_RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$8 *create_RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$9 : NSObject < RxFunctionsAction8 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7
            withId:(JavaLangInteger *)t8;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$9)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$9, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$9 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$9 *new_RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$9 *create_RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$10 : NSObject < RxFunctionsAction9 > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7
            withId:(JavaLangInteger *)t8
            withId:(JavaLangInteger *)t9;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$10)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$10, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$10 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$10 *new_RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$10 *create_RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@interface RxFunctionsActionsTest_$11 : NSObject < RxFunctionsActionN > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$value_;
}

- (void)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxFunctionsActionsTest_$11)

J2OBJC_FIELD_SETTER(RxFunctionsActionsTest_$11, val$value_, JavaUtilConcurrentAtomicAtomicLong *)

__attribute__((unused)) static void RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$11 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0);

__attribute__((unused)) static RxFunctionsActionsTest_$11 *new_RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxFunctionsActionsTest_$11 *create_RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0);

@implementation RxFunctionsActionsTest

- (void)testEmptyArities {
  id<RxFunctionsAction0> a0 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction0>) nil_chk(a0)) call];
  id<RxFunctionsAction1> a1 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction1>) nil_chk(a1)) callWithId:JavaLangInteger_valueOfWithInt_(1)];
  id<RxFunctionsAction2> a2 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction2>) nil_chk(a2)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2)];
  id<RxFunctionsAction3> a3 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction3>) nil_chk(a3)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3)];
  id<RxFunctionsAction4> a4 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction4>) nil_chk(a4)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4)];
  id<RxFunctionsAction5> a5 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction5>) nil_chk(a5)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(5)];
  id<RxFunctionsAction6> a6 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction6>) nil_chk(a6)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(5) withId:JavaLangInteger_valueOfWithInt_(6)];
  id<RxFunctionsAction7> a7 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction7>) nil_chk(a7)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(5) withId:JavaLangInteger_valueOfWithInt_(6) withId:JavaLangInteger_valueOfWithInt_(7)];
  id<RxFunctionsAction8> a8 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction8>) nil_chk(a8)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(5) withId:JavaLangInteger_valueOfWithInt_(6) withId:JavaLangInteger_valueOfWithInt_(7) withId:JavaLangInteger_valueOfWithInt_(8)];
  id<RxFunctionsAction9> a9 = RxFunctionsActions_empty();
  [((id<RxFunctionsAction9>) nil_chk(a9)) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(3) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(5) withId:JavaLangInteger_valueOfWithInt_(6) withId:JavaLangInteger_valueOfWithInt_(7) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(9)];
  id<RxFunctionsActionN> an0 = RxFunctionsActions_empty();
  [((id<RxFunctionsActionN>) nil_chk(an0)) callWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  id<RxFunctionsActionN> an1 = RxFunctionsActions_empty();
  [((id<RxFunctionsActionN>) nil_chk(an1)) callWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:NSObject_class_()]];
  id<RxFunctionsActionN> ann = RxFunctionsActions_empty();
  [((id<RxFunctionsActionN>) nil_chk(ann)) callWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10) } count:10 type:NSObject_class_()]];
  id<RxFunctionsActionN> annn = RxFunctionsActions_empty();
  [((id<RxFunctionsActionN>) nil_chk(annn)) callWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9), JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(11), JavaLangInteger_valueOfWithInt_(12), JavaLangInteger_valueOfWithInt_(13), JavaLangInteger_valueOfWithInt_(14), JavaLangInteger_valueOfWithInt_(15), JavaLangInteger_valueOfWithInt_(16), JavaLangInteger_valueOfWithInt_(17), JavaLangInteger_valueOfWithInt_(18), JavaLangInteger_valueOfWithInt_(19), JavaLangInteger_valueOfWithInt_(20) } count:20 type:NSObject_class_()]];
}

- (void)testToFunc0 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction0> action = create_RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc0>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction0_(action))) call]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc0>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction0_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) call]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [value get]);
}

- (void)testToFunc1 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction1> action = create_RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc1>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction1_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc1>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction1_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [value get]);
}

- (void)testToFunc2 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction2> action = create_RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc2>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction2_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2)]);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc2>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction2_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc2>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction2_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [value get]);
}

- (void)testToFunc3 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction3> action = create_RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc3>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction3_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(7, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc3>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction3_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(7, [value get]);
}

- (void)testToFunc4 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction4> action = create_RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc4>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction4_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(15, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc4>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction4_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(15, [value get]);
}

- (void)testToFunc5 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction5> action = create_RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc5>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction5_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(31, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc5>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction5_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(31, [value get]);
}

- (void)testToFunc6 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction6> action = create_RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc6>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction6_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(63, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc6>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction6_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(63, [value get]);
}

- (void)testToFunc7 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction7> action = create_RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc7>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction7_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(127, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc7>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction7_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(127, [value get]);
}

- (void)testToFunc8 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction8> action = create_RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc8>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction8_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64) withId:JavaLangInteger_valueOfWithInt_(128)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(255, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc8>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction8_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64) withId:JavaLangInteger_valueOfWithInt_(128)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(255, [value get]);
}

- (void)testToFunc9 {
  JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
  id<RxFunctionsAction9> action = create_RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
  OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFunc9>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction9_(action))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64) withId:JavaLangInteger_valueOfWithInt_(128) withId:JavaLangInteger_valueOfWithInt_(256)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(511, [value get]);
  [value setWithLong:-1LL];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFunc9>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsAction9_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithId:JavaLangInteger_valueOfWithInt_(1) withId:JavaLangInteger_valueOfWithInt_(2) withId:JavaLangInteger_valueOfWithInt_(4) withId:JavaLangInteger_valueOfWithInt_(8) withId:JavaLangInteger_valueOfWithInt_(16) withId:JavaLangInteger_valueOfWithInt_(32) withId:JavaLangInteger_valueOfWithInt_(64) withId:JavaLangInteger_valueOfWithInt_(128) withId:JavaLangInteger_valueOfWithInt_(256)]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(511, [value get]);
}

- (void)testToFuncN {
  for (jint i = 0; i < 100; i++) {
    JavaUtilConcurrentAtomicAtomicLong *value = create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(-1LL);
    id<RxFunctionsActionN> action = create_RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(value);
    IOSObjectArray *arr = [IOSObjectArray arrayWithLength:i type:NSObject_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(arr, JavaLangInteger_valueOfWithInt_(1));
    OrgJunitAssert_assertNullWithId_([((id<RxFunctionsFuncN>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsActionN_(action))) callWithNSObjectArray:arr]);
    OrgJunitAssert_assertEqualsWithLong_withLong_(i, [value get]);
    [value setWithLong:-1LL];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(0), [((id<RxFunctionsFuncN>) nil_chk(RxFunctionsActions_toFuncWithRxFunctionsActionN_withId_(action, JavaLangInteger_valueOfWithInt_(0)))) callWithNSObjectArray:arr]);
    OrgJunitAssert_assertEqualsWithLong_withLong_(i, [value get]);
  }
}

- (void)constructorShouldBePrivate {
  RxTestUtil_checkUtilityClassWithIOSClass_(RxFunctionsActions_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxFunctionsActionsTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testEmptyArities);
  methods[1].selector = @selector(testToFunc0);
  methods[2].selector = @selector(testToFunc1);
  methods[3].selector = @selector(testToFunc2);
  methods[4].selector = @selector(testToFunc3);
  methods[5].selector = @selector(testToFunc4);
  methods[6].selector = @selector(testToFunc5);
  methods[7].selector = @selector(testToFunc6);
  methods[8].selector = @selector(testToFunc7);
  methods[9].selector = @selector(testToFunc8);
  methods[10].selector = @selector(testToFunc9);
  methods[11].selector = @selector(testToFuncN);
  methods[12].selector = @selector(constructorShouldBePrivate);
  methods[13].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxFunctionsActionsTest__Annotations$0, (void *)&RxFunctionsActionsTest__Annotations$1, (void *)&RxFunctionsActionsTest__Annotations$2, (void *)&RxFunctionsActionsTest__Annotations$3, (void *)&RxFunctionsActionsTest__Annotations$4, (void *)&RxFunctionsActionsTest__Annotations$5, (void *)&RxFunctionsActionsTest__Annotations$6, (void *)&RxFunctionsActionsTest__Annotations$7, (void *)&RxFunctionsActionsTest__Annotations$8, (void *)&RxFunctionsActionsTest__Annotations$9, (void *)&RxFunctionsActionsTest__Annotations$10, (void *)&RxFunctionsActionsTest__Annotations$11, (void *)&RxFunctionsActionsTest__Annotations$12 };
  static const J2ObjcClassInfo _RxFunctionsActionsTest = { "ActionsTest", "rx.functions", ptrTable, methods, NULL, 7, 0x1, 14, 0, -1, -1, -1, -1, -1 };
  return &_RxFunctionsActionsTest;
}

@end

void RxFunctionsActionsTest_init(RxFunctionsActionsTest *self) {
  NSObject_init(self);
}

RxFunctionsActionsTest *new_RxFunctionsActionsTest_init() {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest, init)
}

RxFunctionsActionsTest *create_RxFunctionsActionsTest_init() {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest, init)
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxFunctionsActionsTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxFunctionsActionsTest)

@implementation RxFunctionsActionsTest_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:0];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc0" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$1 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxFunctionsActionsTest_$1;
}

@end

void RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$1 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$1 *new_RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$1, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$1 *create_RxFunctionsActionsTest_$1_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$1, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$2

- (void)callWithId:(JavaLangInteger *)t1 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc1", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$2 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$2;
}

@end

void RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$2 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$2 *new_RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$2, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$2 *create_RxFunctionsActionsTest_$2_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$2, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$3

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc2", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$3 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$3;
}

@end

void RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$3 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$3 *new_RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$3, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$3 *create_RxFunctionsActionsTest_$3_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$3, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$4

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc3", "Ljava/lang/Object;Lrx/functions/Action3<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$4 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$4;
}

@end

void RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$4 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$4 *new_RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$4, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$4 *create_RxFunctionsActionsTest_$4_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$4, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$5

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc4", "Ljava/lang/Object;Lrx/functions/Action4<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$5 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$5;
}

@end

void RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$5 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$5 *new_RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$5, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$5 *create_RxFunctionsActionsTest_$5_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$5, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$6

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue] | [((JavaLangInteger *) nil_chk(t5)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc5", "Ljava/lang/Object;Lrx/functions/Action5<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$6 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$6;
}

@end

void RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$6 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$6 *new_RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$6, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$6 *create_RxFunctionsActionsTest_$6_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$6, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$7

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue] | [((JavaLangInteger *) nil_chk(t5)) intValue] | [((JavaLangInteger *) nil_chk(t6)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc6", "Ljava/lang/Object;Lrx/functions/Action6<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$7 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$7;
}

@end

void RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$7 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$7 *new_RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$7, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$7 *create_RxFunctionsActionsTest_$7_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$7, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$8

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue] | [((JavaLangInteger *) nil_chk(t5)) intValue] | [((JavaLangInteger *) nil_chk(t6)) intValue] | [((JavaLangInteger *) nil_chk(t7)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc7", "Ljava/lang/Object;Lrx/functions/Action7<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$8 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$8;
}

@end

void RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$8 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$8 *new_RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$8, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$8 *create_RxFunctionsActionsTest_$8_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$8, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$9

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7
            withId:(JavaLangInteger *)t8 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue] | [((JavaLangInteger *) nil_chk(t5)) intValue] | [((JavaLangInteger *) nil_chk(t6)) intValue] | [((JavaLangInteger *) nil_chk(t7)) intValue] | [((JavaLangInteger *) nil_chk(t8)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc8", "Ljava/lang/Object;Lrx/functions/Action8<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$9 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$9;
}

@end

void RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$9 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$9 *new_RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$9, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$9 *create_RxFunctionsActionsTest_$9_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$9, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$10

- (void)callWithId:(JavaLangInteger *)t1
            withId:(JavaLangInteger *)t2
            withId:(JavaLangInteger *)t3
            withId:(JavaLangInteger *)t4
            withId:(JavaLangInteger *)t5
            withId:(JavaLangInteger *)t6
            withId:(JavaLangInteger *)t7
            withId:(JavaLangInteger *)t8
            withId:(JavaLangInteger *)t9 {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:[((JavaLangInteger *) nil_chk(t1)) intValue] | [((JavaLangInteger *) nil_chk(t2)) intValue] | [((JavaLangInteger *) nil_chk(t3)) intValue] | [((JavaLangInteger *) nil_chk(t4)) intValue] | [((JavaLangInteger *) nil_chk(t5)) intValue] | [((JavaLangInteger *) nil_chk(t6)) intValue] | [((JavaLangInteger *) nil_chk(t7)) intValue] | [((JavaLangInteger *) nil_chk(t8)) intValue] | [((JavaLangInteger *) nil_chk(t9)) intValue]];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFunc9", "Ljava/lang/Object;Lrx/functions/Action9<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$10 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxFunctionsActionsTest_$10;
}

@end

void RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$10 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$10 *new_RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$10, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$10 *create_RxFunctionsActionsTest_$10_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$10, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

@implementation RxFunctionsActionsTest_$11

- (void)callWithNSObjectArray:(IOSObjectArray *)args {
  jint sum = 0;
  {
    IOSObjectArray *a__ = args;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id o = *b__++;
      sum += [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(o, [JavaLangInteger class]))) intValue];
    }
  }
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(val$value_)) setWithLong:sum];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0 {
  RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "LJavaUtilConcurrentAtomicAtomicLong;", "LRxFunctionsActionsTest;", "testToFuncN" };
  static const J2ObjcClassInfo _RxFunctionsActionsTest_$11 = { "", "rx.functions", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxFunctionsActionsTest_$11;
}

@end

void RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(RxFunctionsActionsTest_$11 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxFunctionsActionsTest_$11 *new_RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_NEW_IMPL(RxFunctionsActionsTest_$11, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}

RxFunctionsActionsTest_$11 *create_RxFunctionsActionsTest_$11_initWithJavaUtilConcurrentAtomicAtomicLong_(JavaUtilConcurrentAtomicAtomicLong *capture$0) {
  J2OBJC_CREATE_IMPL(RxFunctionsActionsTest_$11, initWithJavaUtilConcurrentAtomicAtomicLong_, capture$0)
}
