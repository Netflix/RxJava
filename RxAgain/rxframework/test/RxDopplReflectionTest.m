//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/ReflectionTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxDopplReflectionTest.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/ExecutorService.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxDopplReflectionTest__Annotations$0();

@implementation RxDopplReflectionTest

- (void)testGetMethods {
  IOSObjectArray *methods = [JavaUtilConcurrentExecutorService_class_() getMethods];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"asdf"];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxDopplReflectionTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testGetMethods);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxDopplReflectionTest__Annotations$0 };
  static const J2ObjcClassInfo _RxDopplReflectionTest = { "ReflectionTest", "rx.doppl", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_RxDopplReflectionTest;
}

@end

void RxDopplReflectionTest_init(RxDopplReflectionTest *self) {
  NSObject_init(self);
}

RxDopplReflectionTest *new_RxDopplReflectionTest_init() {
  J2OBJC_NEW_IMPL(RxDopplReflectionTest, init)
}

RxDopplReflectionTest *create_RxDopplReflectionTest_init() {
  J2OBJC_CREATE_IMPL(RxDopplReflectionTest, init)
}

IOSObjectArray *RxDopplReflectionTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxDopplReflectionTest)
