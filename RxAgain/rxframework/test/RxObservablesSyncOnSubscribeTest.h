//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/observables/SyncOnSubscribeTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxObservablesSyncOnSubscribeTest")
#ifdef RESTRICT_RxObservablesSyncOnSubscribeTest
#define INCLUDE_ALL_RxObservablesSyncOnSubscribeTest 0
#else
#define INCLUDE_ALL_RxObservablesSyncOnSubscribeTest 1
#endif
#undef RESTRICT_RxObservablesSyncOnSubscribeTest

#if !defined (RxObservablesSyncOnSubscribeTest_) && (INCLUDE_ALL_RxObservablesSyncOnSubscribeTest || defined(INCLUDE_RxObservablesSyncOnSubscribeTest))
#define RxObservablesSyncOnSubscribeTest_

@interface RxObservablesSyncOnSubscribeTest : NSObject

#pragma mark Public

- (instancetype)init;

- (void)testCanRequestInOnNext;

- (void)testConcurrentRequests;

- (void)testConcurrentRequestsLoop;

- (void)testConcurrentUnsubscribe3000Iterations;

- (void)testEmpty;

- (void)testError;

- (void)testExtendingBase;

- (void)testFromIterable;

- (void)testGenericsCreateSingleState;

- (void)testGenericsCreateSingleStateWithUnsub;

- (void)testGenericsCreateStateful;

- (void)testGenericsCreateStatefulWithUnsub;

- (void)testGenericsCreateStateless;

- (void)testGenericsCreateStatelessWithUnsub;

- (void)testIndependentStates;

- (void)testInfiniteRequestSome;

- (void)testInfiniteTake;

- (void)testMultipleOnCompleted;

- (void)testMultipleOnErrors;

- (void)testMultipleOnNextValuesCallsOnError;

- (void)testNever;

- (void)testObservableJustEquivalent;

- (void)testObserveOn;

- (void)testOnNextAfterOnComplete;

- (void)testRange;

- (void)testStateAfterTerminal;

- (void)testStateThrows;

- (void)testSubscribeOn;

- (void)testThrowAfterCompleteFastPath;

- (void)testThrows;

- (void)testThrowsSlowPath;

- (void)testUnsubscribeDownstream;

- (void)testUnsubscribeOutsideOfLoop;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesSyncOnSubscribeTest)

FOUNDATION_EXPORT void RxObservablesSyncOnSubscribeTest_init(RxObservablesSyncOnSubscribeTest *self);

FOUNDATION_EXPORT RxObservablesSyncOnSubscribeTest *new_RxObservablesSyncOnSubscribeTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObservablesSyncOnSubscribeTest *create_RxObservablesSyncOnSubscribeTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesSyncOnSubscribeTest)

#endif

#pragma pop_macro("INCLUDE_ALL_RxObservablesSyncOnSubscribeTest")
