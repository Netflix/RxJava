//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/producers/ProducersTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsMissingBackpressureException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalProducersProducerArbiter.h"
#include "RxInternalProducersProducerObserverArbiter.h"
#include "RxInternalProducersProducersTest.h"
#include "RxInternalProducersQueuedProducer.h"
#include "RxInternalProducersQueuedValueProducer.h"
#include "RxInternalProducersSingleDelayedProducer.h"
#include "RxInternalProducersSingleProducer.h"
#include "RxInternalUtilUnsafeSpscArrayQueue.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSerialSubscription.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Mockito.h"

__attribute__((unused)) static id<RxFunctionsFunc1> RxInternalProducersProducersTest_plusWithLong_(RxInternalProducersProducersTest *self, jlong n);

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalProducersProducersTest__Annotations$18();

@interface RxInternalProducersProducersTest_SwitchTimer_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalProducersProducersTest_SwitchTimer *this$0_;
  IOSIntArray *val$index_;
  RxInternalProducersProducerObserverArbiter *val$poa_;
  RxSubscriptionsSerialSubscription *val$ssub_;
}

- (void)call;

- (instancetype)initWithRxInternalProducersProducersTest_SwitchTimer:(RxInternalProducersProducersTest_SwitchTimer *)outer$
                                                        withIntArray:(IOSIntArray *)capture$0
                      withRxInternalProducersProducerObserverArbiter:(RxInternalProducersProducerObserverArbiter *)capture$1
                               withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_SwitchTimer_$1)

J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_SwitchTimer_$1, this$0_, RxInternalProducersProducersTest_SwitchTimer *)
J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_SwitchTimer_$1, val$index_, IOSIntArray *)
J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_SwitchTimer_$1, val$poa_, RxInternalProducersProducerObserverArbiter *)
J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_SwitchTimer_$1, val$ssub_, RxSubscriptionsSerialSubscription *)

__attribute__((unused)) static void RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer_$1 *self, RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2);

__attribute__((unused)) static RxInternalProducersProducersTest_SwitchTimer_$1 *new_RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_SwitchTimer_$1 *create_RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2);

@interface RxInternalProducersProducersTest_SwitchTimer_$1_$1 : RxSubscriber {
 @public
  RxInternalProducersProducersTest_SwitchTimer_$1 *this$0_;
  jint val$idx_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalProducersProducersTest_SwitchTimer_$1:(RxInternalProducersProducersTest_SwitchTimer_$1 *)outer$
                                                                withInt:(jint)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_SwitchTimer_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_SwitchTimer_$1_$1, this$0_, RxInternalProducersProducersTest_SwitchTimer_$1 *)

__attribute__((unused)) static void RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1_$1 *self, RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0);

__attribute__((unused)) static RxInternalProducersProducersTest_SwitchTimer_$1_$1 *new_RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_SwitchTimer_$1_$1 *create_RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0);

@interface RxInternalProducersProducersTest_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  jlong val$n_;
}

- (JavaLangLong *)callWithId:(JavaLangLong *)t;

- (instancetype)initWithLong:(jlong)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_$1)

__attribute__((unused)) static void RxInternalProducersProducersTest_$1_initWithLong_(RxInternalProducersProducersTest_$1 *self, jlong capture$0);

__attribute__((unused)) static RxInternalProducersProducersTest_$1 *new_RxInternalProducersProducersTest_$1_initWithLong_(jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_$1 *create_RxInternalProducersProducersTest_$1_initWithLong_(jlong capture$0);

@interface RxInternalProducersProducersTest_$2 : NSObject < RxObservable_Operator >

- (RxSubscriber *)callWithId:(RxSubscriber *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_$2)

__attribute__((unused)) static void RxInternalProducersProducersTest_$2_init(RxInternalProducersProducersTest_$2 *self);

__attribute__((unused)) static RxInternalProducersProducersTest_$2 *new_RxInternalProducersProducersTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_$2 *create_RxInternalProducersProducersTest_$2_init();

@interface RxInternalProducersProducersTest_$2_$1 : RxSubscriber {
 @public
  RxInternalProducersProducerObserverArbiter *val$poa_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

- (instancetype)initWithRxInternalProducersProducerObserverArbiter:(RxInternalProducersProducerObserverArbiter *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_$2_$1)

J2OBJC_FIELD_SETTER(RxInternalProducersProducersTest_$2_$1, val$poa_, RxInternalProducersProducerObserverArbiter *)

__attribute__((unused)) static void RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducersTest_$2_$1 *self, RxInternalProducersProducerObserverArbiter *capture$0);

__attribute__((unused)) static RxInternalProducersProducersTest_$2_$1 *new_RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducerObserverArbiter *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_$2_$1 *create_RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducerObserverArbiter *capture$0);

@interface RxInternalProducersProducersTest_$3 : RxObserversTestSubscriber {
 @public
  jint count_;
}

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalProducersProducersTest_$3)

__attribute__((unused)) static void RxInternalProducersProducersTest_$3_init(RxInternalProducersProducersTest_$3 *self);

__attribute__((unused)) static RxInternalProducersProducersTest_$3 *new_RxInternalProducersProducersTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalProducersProducersTest_$3 *create_RxInternalProducersProducersTest_$3_init();

@implementation RxInternalProducersProducersTest

- (void)testSingleNoBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxInternalProducersSingleProducer *sp = create_RxInternalProducersSingleProducer_initWithRxSubscriber_withId_(ts, JavaLangInteger_valueOfWithInt_(1));
  [ts setProducerWithRxProducer:sp];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
}

- (void)testSingleWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:0];
  RxInternalProducersSingleProducer *sp = create_RxInternalProducersSingleProducer_initWithRxSubscriber_withId_(ts, JavaLangInteger_valueOfWithInt_(1));
  [ts setProducerWithRxProducer:sp];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
}

- (void)testSingleDelayedNoBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxInternalProducersSingleDelayedProducer *sdp = create_RxInternalProducersSingleDelayedProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:sdp];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
  [sdp setValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [sdp setValueWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
}

- (void)testSingleDelayedWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:0];
  RxInternalProducersSingleDelayedProducer *sdp = create_RxInternalProducersSingleDelayedProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:sdp];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
  [sdp setValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [ts getCompletions]);
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [sdp setValueWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
}

- (void)testQueuedValueNoBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxInternalProducersQueuedValueProducer *qvp = create_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:qvp];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(2)];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(3)];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(4)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
}

- (void)testQueuedValueWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:0];
  RxInternalProducersQueuedValueProducer *qvp = create_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:qvp];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(3)];
  [qvp offerWithId:JavaLangInteger_valueOfWithInt_(4)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
}

- (void)testQueuedNoBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:qp];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(2)];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(3)];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(4)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
  [qp onCompleted];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
}

- (void)testQueuedWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:0];
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:qp];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(2)];
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [ts requestMoreWithLong:2];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()])];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(3)];
  [qp offerWithId:JavaLangInteger_valueOfWithInt_(4)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
  [qp onCompleted];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4) } count:4 type:JavaLangInteger_class_()])];
}

- (void)testArbiter {
  id<RxProducer> p1 = OrgMockitoMockito_mockWithIOSClass_(RxProducer_class_());
  id<RxProducer> p2 = OrgMockitoMockito_mockWithIOSClass_(RxProducer_class_());
  RxInternalProducersProducerArbiter *pa = create_RxInternalProducersProducerArbiter_init();
  [pa requestWithLong:100];
  [pa setProducerWithRxProducer:p1];
  [((id<RxProducer>) nil_chk(OrgMockitoMockito_verifyWithId_(p1))) requestWithLong:100];
  [pa producedWithLong:50];
  [pa setProducerWithRxProducer:p2];
  [((id<RxProducer>) nil_chk(OrgMockitoMockito_verifyWithId_(p2))) requestWithLong:50];
}

- (void)testObserverArbiterWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:0];
  RxInternalProducersProducerObserverArbiter *poa = create_RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(ts);
  [ts setProducerWithRxProducer:poa];
  [poa setProducerWithRxProducer:create_RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(poa)];
  [ts requestMoreWithLong:1];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [poa setProducerWithRxProducer:nil];
  [ts requestMoreWithLong:5];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()])];
  [poa setProducerWithRxProducer:create_RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(poa)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(5) } count:2 type:JavaLangInteger_class_()])];
  [poa onCompleted];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(5) } count:2 type:JavaLangInteger_class_()])];
}

- (id<RxFunctionsFunc1>)plusWithLong:(jlong)n {
  return RxInternalProducersProducersTest_plusWithLong_(self, n);
}

- (void)testObserverArbiterAsync {
  RxSchedulersTestScheduler *test = RxSchedulersSchedulers_test();
  id<JavaUtilList> timers = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), test), [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), test))) mapWithRxFunctionsFunc1:RxInternalProducersProducersTest_plusWithLong_(self, 20)], [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), test))) mapWithRxFunctionsFunc1:RxInternalProducersProducersTest_plusWithLong_(self, 40)] } count:3 type:RxObservable_class_()]);
  RxObservable *source = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalProducersProducersTest_SwitchTimer_initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(timers, 550, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), test));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:100];
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:ts];
  [((RxSchedulersTestScheduler *) nil_chk(test)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MINUTES)];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(0LL), JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL), JavaLangLong_valueOfWithLong_(4LL), JavaLangLong_valueOfWithLong_(20LL), JavaLangLong_valueOfWithLong_(21LL), JavaLangLong_valueOfWithLong_(22LL), JavaLangLong_valueOfWithLong_(23LL), JavaLangLong_valueOfWithLong_(24LL), JavaLangLong_valueOfWithLong_(40LL), JavaLangLong_valueOfWithLong_(41LL), JavaLangLong_valueOfWithLong_(42LL), JavaLangLong_valueOfWithLong_(43LL), JavaLangLong_valueOfWithLong_(44LL) } count:15 type:JavaLangLong_class_()])];
}

- (void)testProducerObserverArbiterUnbounded {
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, JavaLangInteger_MAX_VALUE))) liftWithRxObservable_Operator:create_RxInternalProducersProducersTest_$2_init()])) subscribeWithRxSubscriber:create_RxInternalProducersProducersTest_$3_init()];
}

- (void)queuedProducerRequestNegative {
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_(create_RxObserversTestSubscriber_init());
  @try {
    [qp requestWithLong:-99];
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"n >= 0 required", [((JavaLangIllegalArgumentException *) nil_chk(ex)) getMessage]);
  }
}

- (void)queuedProducerOfferNull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_(ts);
  [qp offerWithId:nil];
  [qp requestWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:nil];
}

- (void)queuedProducerFull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_withJavaUtilQueue_(ts, create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(1));
  OrgJunitAssert_assertTrueWithBoolean_([qp offerWithId:JavaLangInteger_valueOfWithInt_(1)]);
  OrgJunitAssert_assertFalseWithBoolean_([qp offerWithId:JavaLangInteger_valueOfWithInt_(2)]);
  [qp requestWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
}

- (void)queuedProducerOnNextFull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_withJavaUtilQueue_(ts, create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(1));
  [qp onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [qp onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [qp requestWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
}

- (void)queuedProducerOnNextFullWithNull {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_withJavaUtilQueue_(ts, create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(1));
  [qp onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [qp onNextWithId:nil];
  [qp requestWithLong:1];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:RxExceptionsMissingBackpressureException_class_()];
}

- (void)queuedProducerRequestCompletes {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_withJavaUtilQueue_(ts, create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(1));
  [qp onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [qp onCompleted];
  [qp requestWithLong:2];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)queuedProducerUnsubscribed {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObserversTestSubscriber *) nil_chk(ts)) unsubscribe];
  RxInternalProducersQueuedProducer *qp = create_RxInternalProducersQueuedProducer_initWithRxSubscriber_withJavaUtilQueue_(ts, create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(1));
  [qp onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [qp onCompleted];
  [qp requestWithLong:2];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalProducersProducersTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x10, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testSingleNoBackpressure);
  methods[1].selector = @selector(testSingleWithBackpressure);
  methods[2].selector = @selector(testSingleDelayedNoBackpressure);
  methods[3].selector = @selector(testSingleDelayedWithBackpressure);
  methods[4].selector = @selector(testQueuedValueNoBackpressure);
  methods[5].selector = @selector(testQueuedValueWithBackpressure);
  methods[6].selector = @selector(testQueuedNoBackpressure);
  methods[7].selector = @selector(testQueuedWithBackpressure);
  methods[8].selector = @selector(testArbiter);
  methods[9].selector = @selector(testObserverArbiterWithBackpressure);
  methods[10].selector = @selector(plusWithLong:);
  methods[11].selector = @selector(testObserverArbiterAsync);
  methods[12].selector = @selector(testProducerObserverArbiterUnbounded);
  methods[13].selector = @selector(queuedProducerRequestNegative);
  methods[14].selector = @selector(queuedProducerOfferNull);
  methods[15].selector = @selector(queuedProducerFull);
  methods[16].selector = @selector(queuedProducerOnNextFull);
  methods[17].selector = @selector(queuedProducerOnNextFullWithNull);
  methods[18].selector = @selector(queuedProducerRequestCompletes);
  methods[19].selector = @selector(queuedProducerUnsubscribed);
  methods[20].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalProducersProducersTest__Annotations$0, (void *)&RxInternalProducersProducersTest__Annotations$1, (void *)&RxInternalProducersProducersTest__Annotations$2, (void *)&RxInternalProducersProducersTest__Annotations$3, (void *)&RxInternalProducersProducersTest__Annotations$4, (void *)&RxInternalProducersProducersTest__Annotations$5, (void *)&RxInternalProducersProducersTest__Annotations$6, (void *)&RxInternalProducersProducersTest__Annotations$7, (void *)&RxInternalProducersProducersTest__Annotations$8, (void *)&RxInternalProducersProducersTest__Annotations$9, "plus", "J", "(J)Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/Long;>;", (void *)&RxInternalProducersProducersTest__Annotations$10, (void *)&RxInternalProducersProducersTest__Annotations$11, (void *)&RxInternalProducersProducersTest__Annotations$12, (void *)&RxInternalProducersProducersTest__Annotations$13, (void *)&RxInternalProducersProducersTest__Annotations$14, (void *)&RxInternalProducersProducersTest__Annotations$15, (void *)&RxInternalProducersProducersTest__Annotations$16, (void *)&RxInternalProducersProducersTest__Annotations$17, (void *)&RxInternalProducersProducersTest__Annotations$18, "LRxInternalProducersProducersTest_TestProducer;LRxInternalProducersProducersTest_SwitchTimer;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest = { "ProducersTest", "rx.internal.producers", ptrTable, methods, NULL, 7, 0x1, 21, 0, -1, 22, -1, -1, -1 };
  return &_RxInternalProducersProducersTest;
}

@end

id<RxFunctionsFunc1> RxInternalProducersProducersTest_plusWithLong_(RxInternalProducersProducersTest *self, jlong n) {
  return create_RxInternalProducersProducersTest_$1_initWithLong_(n);
}

void RxInternalProducersProducersTest_init(RxInternalProducersProducersTest *self) {
  NSObject_init(self);
}

RxInternalProducersProducersTest *new_RxInternalProducersProducersTest_init() {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest, init)
}

RxInternalProducersProducersTest *create_RxInternalProducersProducersTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest, init)
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalProducersProducersTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalProducersProducersTest)

@implementation RxInternalProducersProducersTest_TestProducer

- (instancetype)initWithRxObserver:(id<RxObserver>)child {
  RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(self, child);
  return self;
}

- (void)requestWithLong:(jlong)n {
  [((id<RxObserver>) nil_chk(child_)) onNextWithId:JavaLangInteger_valueOfWithInt_((jint) n)];
}

- (void)dealloc {
  RELEASE_(child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObserver:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "child_", "LRxObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;", "(Lrx/Observer<Ljava/lang/Integer;>;)V", "request", "J", "Lrx/Observer<Ljava/lang/Integer;>;", "LRxInternalProducersProducersTest;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_TestProducer = { "TestProducer", "rx.internal.producers", ptrTable, methods, fields, 7, 0x18, 2, 1, 5, -1, -1, -1, -1 };
  return &_RxInternalProducersProducersTest_TestProducer;
}

@end

void RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(RxInternalProducersProducersTest_TestProducer *self, id<RxObserver> child) {
  NSObject_init(self);
  JreStrongAssign(&self->child_, child);
}

RxInternalProducersProducersTest_TestProducer *new_RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(id<RxObserver> child) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_TestProducer, initWithRxObserver_, child)
}

RxInternalProducersProducersTest_TestProducer *create_RxInternalProducersProducersTest_TestProducer_initWithRxObserver_(id<RxObserver> child) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_TestProducer, initWithRxObserver_, child)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalProducersProducersTest_TestProducer)

@implementation RxInternalProducersProducersTest_SwitchTimer

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources
                                withLong:(jlong)time
          withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                         withRxScheduler:(RxScheduler *)scheduler {
  RxInternalProducersProducersTest_SwitchTimer_initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(self, sources, time, unit, scheduler);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  RxInternalProducersProducerObserverArbiter *poa = create_RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(child);
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:w];
  [child setProducerWithRxProducer:poa];
  RxSubscriptionsSerialSubscription *ssub = create_RxSubscriptionsSerialSubscription_init();
  [child addWithRxSubscription:ssub];
  IOSIntArray *index = [IOSIntArray arrayWithLength:1];
  [((RxScheduler_Worker *) nil_chk(w)) schedulePeriodicallyWithRxFunctionsAction0:create_RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(self, index, poa, ssub) withLong:time_ withLong:time_ withJavaUtilConcurrentTimeUnit:unit_];
}

- (void)dealloc {
  RELEASE_(sources_);
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangIterable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "time_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Ljava/util/List<Lrx/Observable<+TT;>;>;", "LRxInternalProducersProducersTest;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_SwitchTimer = { "SwitchTimer", "rx.internal.producers", ptrTable, methods, fields, 7, 0x18, 2, 4, 6, -1, -1, 7, -1 };
  return &_RxInternalProducersProducersTest_SwitchTimer;
}

@end

void RxInternalProducersProducersTest_SwitchTimer_initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalProducersProducersTest_SwitchTimer *self, id<JavaLangIterable> sources, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->scheduler_, scheduler);
  JreStrongAssignAndConsume(&self->sources_, new_JavaUtilArrayList_init());
  self->time_ = time;
  JreStrongAssign(&self->unit_, unit);
  for (RxObservable * __strong o in nil_chk(sources)) {
    [self->sources_ addWithId:o];
  }
}

RxInternalProducersProducersTest_SwitchTimer *new_RxInternalProducersProducersTest_SwitchTimer_initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(id<JavaLangIterable> sources, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_SwitchTimer, initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, sources, time, unit, scheduler)
}

RxInternalProducersProducersTest_SwitchTimer *create_RxInternalProducersProducersTest_SwitchTimer_initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(id<JavaLangIterable> sources, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_SwitchTimer, initWithJavaLangIterable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_, sources, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalProducersProducersTest_SwitchTimer)

@implementation RxInternalProducersProducersTest_SwitchTimer_$1

- (void)call {
  jint idx = (*IOSIntArray_GetRef(nil_chk(val$index_), 0))++;
  if (idx >= [((id<JavaUtilList>) nil_chk(this$0_->sources_)) size]) {
    [((RxInternalProducersProducerObserverArbiter *) nil_chk(val$poa_)) onCompleted];
    return;
  }
  RxSubscriber *s = create_RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(self, idx);
  [((RxSubscriptionsSerialSubscription *) nil_chk(val$ssub_)) setWithRxSubscription:s];
  [((RxObservable *) nil_chk([this$0_->sources_ getWithInt:idx])) unsafeSubscribeWithRxSubscriber:s];
}

- (instancetype)initWithRxInternalProducersProducersTest_SwitchTimer:(RxInternalProducersProducersTest_SwitchTimer *)outer$
                                                        withIntArray:(IOSIntArray *)capture$0
                      withRxInternalProducersProducerObserverArbiter:(RxInternalProducersProducerObserverArbiter *)capture$1
                               withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$2 {
  RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$index_);
  RELEASE_(val$poa_);
  RELEASE_(val$ssub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalProducersProducersTest_SwitchTimer:withIntArray:withRxInternalProducersProducerObserverArbiter:withRxSubscriptionsSerialSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalProducersProducersTest_SwitchTimer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$index_", "[I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$poa_", "LRxInternalProducersProducerObserverArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$ssub_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalProducersProducersTest_SwitchTimer;[ILRxInternalProducersProducerObserverArbiter;LRxSubscriptionsSerialSubscription;", "(Lrx/internal/producers/ProducersTest$SwitchTimer;[ILrx/internal/producers/ProducerObserverArbiter<TT;>;Lrx/subscriptions/SerialSubscription;)V", "Lrx/internal/producers/ProducerObserverArbiter<TT;>;", "LRxInternalProducersProducersTest_SwitchTimer;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_SwitchTimer_$1 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 4, 3, -1, 4, -1, -1 };
  return &_RxInternalProducersProducersTest_SwitchTimer_$1;
}

@end

void RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer_$1 *self, RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$index_, capture$0);
  JreStrongAssign(&self->val$poa_, capture$1);
  JreStrongAssign(&self->val$ssub_, capture$2);
  NSObject_init(self);
}

RxInternalProducersProducersTest_SwitchTimer_$1 *new_RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_SwitchTimer_$1, initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1, capture$2)
}

RxInternalProducersProducersTest_SwitchTimer_$1 *create_RxInternalProducersProducersTest_SwitchTimer_$1_initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_(RxInternalProducersProducersTest_SwitchTimer *outer$, IOSIntArray *capture$0, RxInternalProducersProducerObserverArbiter *capture$1, RxSubscriptionsSerialSubscription *capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_SwitchTimer_$1, initWithRxInternalProducersProducersTest_SwitchTimer_withIntArray_withRxInternalProducersProducerObserverArbiter_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1, capture$2)
}

@implementation RxInternalProducersProducersTest_SwitchTimer_$1_$1

- (void)onNextWithId:(id)t {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(this$0_->val$poa_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(this$0_->val$poa_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  if (val$idx_ + 1 == [((id<JavaUtilList>) nil_chk(this$0_->this$0_->sources_)) size]) {
    [((RxInternalProducersProducerObserverArbiter *) nil_chk(this$0_->val$poa_)) onCompleted];
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(this$0_->val$poa_)) setProducerWithRxProducer:producer];
}

- (instancetype)initWithRxInternalProducersProducersTest_SwitchTimer_$1:(RxInternalProducersProducersTest_SwitchTimer_$1 *)outer$
                                                                withInt:(jint)capture$0 {
  RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalProducersProducersTest_SwitchTimer_$1_$1 class]);
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithRxInternalProducersProducersTest_SwitchTimer_$1:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalProducersProducersTest_SwitchTimer_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$idx_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "LRxInternalProducersProducersTest_SwitchTimer_$1;I", "LRxInternalProducersProducersTest_SwitchTimer_$1;", "call", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_SwitchTimer_$1_$1 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 5, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalProducersProducersTest_SwitchTimer_$1_$1;
}

@end

void RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1_$1 *self, RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$idx_ = capture$0;
  RxSubscriber_init(self);
}

RxInternalProducersProducersTest_SwitchTimer_$1_$1 *new_RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_SwitchTimer_$1_$1, initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_, outer$, capture$0)
}

RxInternalProducersProducersTest_SwitchTimer_$1_$1 *create_RxInternalProducersProducersTest_SwitchTimer_$1_$1_initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_(RxInternalProducersProducersTest_SwitchTimer_$1 *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_SwitchTimer_$1_$1, initWithRxInternalProducersProducersTest_SwitchTimer_$1_withInt_, outer$, capture$0)
}

@implementation RxInternalProducersProducersTest_$1

- (JavaLangLong *)callWithId:(JavaLangLong *)t {
  return JavaLangLong_valueOfWithLong_([((JavaLangLong *) nil_chk(t)) longLongValue] + val$n_);
}

- (instancetype)initWithLong:(jlong)capture$0 {
  RxInternalProducersProducersTest_$1_initWithLong_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangLong;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$n_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "J", "LRxInternalProducersProducersTest;", "plusWithLong:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_$1 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalProducersProducersTest_$1;
}

@end

void RxInternalProducersProducersTest_$1_initWithLong_(RxInternalProducersProducersTest_$1 *self, jlong capture$0) {
  self->val$n_ = capture$0;
  NSObject_init(self);
}

RxInternalProducersProducersTest_$1 *new_RxInternalProducersProducersTest_$1_initWithLong_(jlong capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_$1, initWithLong_, capture$0)
}

RxInternalProducersProducersTest_$1 *create_RxInternalProducersProducersTest_$1_initWithLong_(jlong capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_$1, initWithLong_, capture$0)
}

@implementation RxInternalProducersProducersTest_$2

- (RxSubscriber *)callWithId:(RxSubscriber *)t {
  RxInternalProducersProducerObserverArbiter *poa = create_RxInternalProducersProducerObserverArbiter_initWithRxSubscriber_(t);
  RxSubscriber *parent = create_RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(poa);
  [((RxSubscriber *) nil_chk(t)) addWithRxSubscription:parent];
  [t setProducerWithRxProducer:poa];
  return parent;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalProducersProducersTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscriber;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalProducersProducersTest;", "testProducerObserverArbiterUnbounded", "Ljava/lang/Object;Lrx/Observable$Operator<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_$2 = { "", "rx.internal.producers", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalProducersProducersTest_$2;
}

@end

void RxInternalProducersProducersTest_$2_init(RxInternalProducersProducersTest_$2 *self) {
  NSObject_init(self);
}

RxInternalProducersProducersTest_$2 *new_RxInternalProducersProducersTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_$2, init)
}

RxInternalProducersProducersTest_$2 *create_RxInternalProducersProducersTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_$2, init)
}

@implementation RxInternalProducersProducersTest_$2_$1

- (void)onCompleted {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(val$poa_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(val$poa_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(val$poa_)) onNextWithId:t];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((RxInternalProducersProducerObserverArbiter *) nil_chk(val$poa_)) setProducerWithRxProducer:p];
}

- (instancetype)initWithRxInternalProducersProducerObserverArbiter:(RxInternalProducersProducerObserverArbiter *)capture$0 {
  RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalProducersProducersTest_$2_$1 class]);
  RELEASE_(val$poa_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithRxInternalProducersProducerObserverArbiter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$poa_", "LRxInternalProducersProducerObserverArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "setProducer", "LRxProducer;", "LRxInternalProducersProducerObserverArbiter;", "(Lrx/internal/producers/ProducerObserverArbiter<Ljava/lang/Integer;>;)V", "Lrx/internal/producers/ProducerObserverArbiter<Ljava/lang/Integer;>;", "LRxInternalProducersProducersTest_$2;", "callWithId:", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_$2_$1 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 5, 1, 9, -1, 10, 11, -1 };
  return &_RxInternalProducersProducersTest_$2_$1;
}

@end

void RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducersTest_$2_$1 *self, RxInternalProducersProducerObserverArbiter *capture$0) {
  JreStrongAssign(&self->val$poa_, capture$0);
  RxSubscriber_init(self);
}

RxInternalProducersProducersTest_$2_$1 *new_RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducerObserverArbiter *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_$2_$1, initWithRxInternalProducersProducerObserverArbiter_, capture$0)
}

RxInternalProducersProducersTest_$2_$1 *create_RxInternalProducersProducersTest_$2_$1_initWithRxInternalProducersProducerObserverArbiter_(RxInternalProducersProducerObserverArbiter *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_$2_$1, initWithRxInternalProducersProducerObserverArbiter_, capture$0)
}

@implementation RxInternalProducersProducersTest_$3

- (void)onNextWithId:(JavaLangInteger *)t {
  if (++count_ == 2) {
    [self unsubscribe];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalProducersProducersTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalProducersProducersTest_$3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalProducersProducersTest;", "testProducerObserverArbiterUnbounded", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalProducersProducersTest_$3 = { "", "rx.internal.producers", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalProducersProducersTest_$3;
}

@end

void RxInternalProducersProducersTest_$3_init(RxInternalProducersProducersTest_$3 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalProducersProducersTest_$3 *new_RxInternalProducersProducersTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalProducersProducersTest_$3, init)
}

RxInternalProducersProducersTest_$3 *create_RxInternalProducersProducersTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalProducersProducersTest_$3, init)
}
