//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/memory/AllocationTracker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplMemoryAllocationTracker")
#ifdef RESTRICT_RxDopplMemoryAllocationTracker
#define INCLUDE_ALL_RxDopplMemoryAllocationTracker 0
#else
#define INCLUDE_ALL_RxDopplMemoryAllocationTracker 1
#endif
#undef RESTRICT_RxDopplMemoryAllocationTracker

#if !defined (RxDopplMemoryAllocationTracker_) && (INCLUDE_ALL_RxDopplMemoryAllocationTracker || defined(INCLUDE_RxDopplMemoryAllocationTracker))
#define RxDopplMemoryAllocationTracker_

@interface RxDopplMemoryAllocationTracker : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)plusMe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMemoryAllocationTracker)

FOUNDATION_EXPORT void RxDopplMemoryAllocationTracker_plusMe();

FOUNDATION_EXPORT void RxDopplMemoryAllocationTracker_init(RxDopplMemoryAllocationTracker *self);

FOUNDATION_EXPORT RxDopplMemoryAllocationTracker *new_RxDopplMemoryAllocationTracker_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMemoryAllocationTracker *create_RxDopplMemoryAllocationTracker_init();

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMemoryAllocationTracker)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplMemoryAllocationTracker")
