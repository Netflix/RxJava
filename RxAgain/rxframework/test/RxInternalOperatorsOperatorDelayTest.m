//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorDelayTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxDopplMockMObserver.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorDelayTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorDelayTest () {
 @public
  RxDopplMockMObserver *observer_;
  RxDopplMockMObserver *observer2_;
  RxSchedulersTestScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest, observer_, RxDopplMockMObserver *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest, observer2_, RxDopplMockMObserver *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest, scheduler_, RxSchedulersTestScheduler *)

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$28();

@interface RxInternalOperatorsOperatorDelayTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangLong *)callWithId:(JavaLangLong *)value;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$1_init(RxInternalOperatorsOperatorDelayTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$1 *new_RxInternalOperatorsOperatorDelayTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$1 *create_RxInternalOperatorsOperatorDelayTest_$1_init();

@interface RxInternalOperatorsOperatorDelayTest_$2 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaUtilList> val$delays_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$2, val$delays_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(RxInternalOperatorsOperatorDelayTest_$2 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$2 *new_RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$2 *create_RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$3 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$3, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$3 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$3 *new_RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$3 *create_RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$4 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$4, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$4 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$4 *new_RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$4 *create_RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$5 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$5_init(RxInternalOperatorsOperatorDelayTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$5 *new_RxInternalOperatorsOperatorDelayTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$5 *create_RxInternalOperatorsOperatorDelayTest_$5_init();

@interface RxInternalOperatorsOperatorDelayTest_$6 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$6)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$6, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$6 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$6 *new_RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$6 *create_RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$7 : NSObject < RxFunctionsFunc0 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)call;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$7, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$7 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$7 *new_RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$7 *create_RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$8 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$8, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$8 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$8 *new_RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$8 *create_RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$9 : NSObject < RxFunctionsFunc0 >

- (RxObservable *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$9_init(RxInternalOperatorsOperatorDelayTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$9 *new_RxInternalOperatorsOperatorDelayTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$9 *create_RxInternalOperatorsOperatorDelayTest_$9_init();

@interface RxInternalOperatorsOperatorDelayTest_$10 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$10, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$10 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$10 *new_RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$10 *create_RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$11 : NSObject < RxFunctionsFunc0 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)call;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$11)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$11, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$11 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$11 *new_RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$11 *create_RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$12 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$12, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$12 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$12 *new_RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$12 *create_RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$13 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$13_init(RxInternalOperatorsOperatorDelayTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$13 *new_RxInternalOperatorsOperatorDelayTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$13 *create_RxInternalOperatorsOperatorDelayTest_$13_init();

@interface RxInternalOperatorsOperatorDelayTest_$14 : NSObject < RxFunctionsFunc0 > {
 @public
  RxSubjectsPublishSubject *val$sdelay_;
}

- (RxObservable *)call;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$14)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$14, val$sdelay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$14 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$14 *new_RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$14 *create_RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$15 : NSObject < RxFunctionsFunc1 > {
 @public
  RxSubjectsPublishSubject *val$delay_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$15, val$delay_, RxSubjectsPublishSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$15 *self, RxSubjectsPublishSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$15 *new_RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$15 *create_RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$16 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservable *val$delayer_;
}

- (RxObservable *)callWithId:(JavaLangLong *)t1;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$16, val$delayer_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxInternalOperatorsOperatorDelayTest_$16 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$16 *new_RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$16 *create_RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxObservable *capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$17 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaUtilList> val$subjects_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$17, val$subjects_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(RxInternalOperatorsOperatorDelayTest_$17 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$17 *new_RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$17 *create_RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorDelayTest_$18 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxNotification *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$18_init(RxInternalOperatorsOperatorDelayTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$18 *new_RxInternalOperatorsOperatorDelayTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$18 *create_RxInternalOperatorsOperatorDelayTest_$18_init();

@interface RxInternalOperatorsOperatorDelayTest_$19 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$19)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$19_init(RxInternalOperatorsOperatorDelayTest_$19 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$19 *new_RxInternalOperatorsOperatorDelayTest_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$19 *create_RxInternalOperatorsOperatorDelayTest_$19_init();

@interface RxInternalOperatorsOperatorDelayTest_$20 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$20_init(RxInternalOperatorsOperatorDelayTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$20 *new_RxInternalOperatorsOperatorDelayTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$20 *create_RxInternalOperatorsOperatorDelayTest_$20_init();

@interface RxInternalOperatorsOperatorDelayTest_$21 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$21)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$21_init(RxInternalOperatorsOperatorDelayTest_$21 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$21 *new_RxInternalOperatorsOperatorDelayTest_$21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$21 *create_RxInternalOperatorsOperatorDelayTest_$21_init();

@interface RxInternalOperatorsOperatorDelayTest_$22 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$22)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$22_init(RxInternalOperatorsOperatorDelayTest_$22 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$22 *new_RxInternalOperatorsOperatorDelayTest_$22_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$22 *create_RxInternalOperatorsOperatorDelayTest_$22_init();

@interface RxInternalOperatorsOperatorDelayTest_$23 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$23)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$23_init(RxInternalOperatorsOperatorDelayTest_$23 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$23 *new_RxInternalOperatorsOperatorDelayTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$23 *create_RxInternalOperatorsOperatorDelayTest_$23_init();

@interface RxInternalOperatorsOperatorDelayTest_$24 : NSObject < RxFunctionsFunc0 >

- (RxObservable *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$24)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$24_init(RxInternalOperatorsOperatorDelayTest_$24 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$24 *new_RxInternalOperatorsOperatorDelayTest_$24_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$24 *create_RxInternalOperatorsOperatorDelayTest_$24_init();

@interface RxInternalOperatorsOperatorDelayTest_$25 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$25)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$25_init(RxInternalOperatorsOperatorDelayTest_$25 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$25 *new_RxInternalOperatorsOperatorDelayTest_$25_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$25 *create_RxInternalOperatorsOperatorDelayTest_$25_init();

@interface RxInternalOperatorsOperatorDelayTest_$26 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
}

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$26)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$26_init(RxInternalOperatorsOperatorDelayTest_$26 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$26 *new_RxInternalOperatorsOperatorDelayTest_$26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$26 *create_RxInternalOperatorsOperatorDelayTest_$26_init();

@interface RxInternalOperatorsOperatorDelayTest_$27 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$subscribed_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelayTest_$27)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelayTest_$27, val$subscribed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDelayTest_$27 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$27 *new_RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDelayTest_$27 *create_RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@implementation RxInternalOperatorsOperatorDelayTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
  JreStrongAssignAndConsume(&scheduler_, new_RxSchedulersTestScheduler_init());
}

- (void)testDelay {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) takeWithInt:3];
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithLong:500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1499LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2400LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:3400LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:3500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testLongDelay {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) takeWithInt:3];
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithLong:5LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:5999LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:6000LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:6999LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:7000LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:7999LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:8000LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithError {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$1_init()];
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithLong:1LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1999LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2000LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:5000LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithMultipleSubscriptions {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) takeWithInt:3];
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithLong:500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxObserver:observer_];
  [delayed subscribeWithRxObserver:observer2_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  id<OrgMockitoInOrder> inOrder2 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer2_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1499LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder2)) verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2499LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onCompleted];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:3500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((RxDopplMockMObserver *) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelaySubscription {
  RxObservable *result = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) delaySubscriptionWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelaySubscriptionCancelBeforeTime {
  RxObservable *result = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) delaySubscriptionWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<RxSubscription> s = [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [((id<RxSubscription>) nil_chk(s)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithObservableNormal1 {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  id<JavaUtilList> delays = create_JavaUtilArrayList_init();
  jint n = 10;
  for (jint i = 0; i < n; i++) {
    RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
    [delays addWithId:delay];
  }
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(delays);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  for (jint i = 0; i < n; i++) {
    [source onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
    [((RxSubjectsPublishSubject *) nil_chk([delays getWithInt:i])) onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
    [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
  }
  [source onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onCompleted];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithObservableSingleSend1 {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [delay onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithObservableSourceThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableDelayFunctionThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$5_init();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableDelayThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableSubscriptionNormal {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc0> subFunc = create_RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(delay);
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc0:subFunc withRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [delay onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableSubscriptionFunctionThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc0> subFunc = create_RxInternalOperatorsOperatorDelayTest_$9_init();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc0:subFunc withRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableSubscriptionThrows {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc0> subFunc = create_RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(delay);
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc0:subFunc withRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onErrorWithNSException:create_RxExceptionsTestException_init()];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableEmptyDelayer {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$13_init();
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithObservableSubscriptionRunCompletion {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *sdelay = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *delay = RxSubjectsPublishSubject_create();
  id<RxFunctionsFunc0> subFunc = create_RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(sdelay);
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(delay);
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc0:subFunc withRxFunctionsFunc1:delayFunc])) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSubjectsPublishSubject *) nil_chk(sdelay)) onCompleted];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSubjectsPublishSubject *) nil_chk(delay)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testDelayWithObservableAsTimed {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) takeWithInt:3];
  RxObservable *delayer = RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(500LL, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  id<RxFunctionsFunc1> delayFunc = create_RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(delayer);
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithRxFunctionsFunc1:delayFunc];
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxObserver:observer_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1499LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:1500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2400LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:3400LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:3500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((RxDopplMockMObserver *) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((RxDopplMockMObserver *) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayWithObservableReorder {
  jint n = 3;
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  id<JavaUtilList> subjects = create_JavaUtilArrayList_init();
  for (jint i = 0; i < n; i++) {
    [subjects addWithId:RxSubjectsPublishSubject_create()];
  }
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) delayWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(subjects)];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  for (jint i = 0; i < n; i++) {
    [source onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
  }
  [source onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(OrgMockitoMatchers_anyInt())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  for (jint i = n - 1; i >= 0; i--) {
    [((RxSubjectsPublishSubject *) nil_chk([subjects getWithInt:i])) onCompleted];
    [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
  }
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDelayEmitsEverything {
  RxObservable *source = RxObservable_rangeWithInt_withInt_(1, 5);
  RxObservable *delayed = [((RxObservable *) nil_chk(source)) delayWithLong:500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_];
  delayed = [((RxObservable *) nil_chk(delayed)) doOnEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorDelayTest_$18_init()];
  RxObserversTestSubscriber *observer = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(delayed)) subscribeWithRxSubscriber:observer];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:500LL withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [observer assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()])];
}

- (void)testBackpressureWithTimedDelay {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2))) delayWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$19_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testBackpressureWithSubscriptionTimedDelay {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2))) delaySubscriptionWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) delayWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$20_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testBackpressureWithSelectorDelay {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2))) delayWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$21_init()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$22_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testBackpressureWithSelectorDelayAndSubscriptionDelay {
  RxObserversTestSubscriber *tsBase = create_RxObserversTestSubscriber_init();
  jint count = JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2;
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I", @"count == ", count)];
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, count))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$23_init()])) subscribeWithRxSubscriber:tsBase];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, count))) delayWithRxFunctionsFunc0:create_RxInternalOperatorsOperatorDelayTest_$24_init() withRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$25_init()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorDelayTest_$26_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testErrorRunsBeforeOnNext {
  RxSchedulersTestScheduler *test = RxSchedulersSchedulers_test();
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(ps)) delayWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:test])) subscribeWithRxSubscriber:ts];
  [ps onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxSchedulersTestScheduler *) nil_chk(test)) advanceTimeByWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [ps onErrorWithNSException:create_RxExceptionsTestException_init()];
  [test advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)delaySubscriptionCancelBeforeTime {
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxSubjectsPublishSubject *) nil_chk(source)) delaySubscriptionWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler_])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"source subscribed?", [source hasObservers]);
  [ts unsubscribe];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"source subscribed?", [source hasObservers]);
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"source subscribed?", [source hasObservers]);
}

- (void)delayAndTakeUntilNeverSubscribeToSource {
  RxSubjectsPublishSubject *interrupt = RxSubjectsPublishSubject_create();
  JavaUtilConcurrentAtomicAtomicBoolean *subscribed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  RxSchedulersTestScheduler *testScheduler = create_RxSchedulersTestScheduler_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) doOnSubscribeWithRxFunctionsAction0:create_RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(subscribed)])) delaySubscriptionWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:testScheduler])) takeUntilWithRxObservable:interrupt])) subscribe];
  [((RxSubjectsPublishSubject *) nil_chk(interrupt)) onNextWithId:JavaLangInteger_valueOfWithInt_(9000)];
  [testScheduler advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  OrgJunitAssert_assertFalseWithBoolean_([subscribed get]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(observer_);
  RELEASE_(observer2_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 26, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testDelay);
  methods[2].selector = @selector(testLongDelay);
  methods[3].selector = @selector(testDelayWithError);
  methods[4].selector = @selector(testDelayWithMultipleSubscriptions);
  methods[5].selector = @selector(testDelaySubscription);
  methods[6].selector = @selector(testDelaySubscriptionCancelBeforeTime);
  methods[7].selector = @selector(testDelayWithObservableNormal1);
  methods[8].selector = @selector(testDelayWithObservableSingleSend1);
  methods[9].selector = @selector(testDelayWithObservableSourceThrows);
  methods[10].selector = @selector(testDelayWithObservableDelayFunctionThrows);
  methods[11].selector = @selector(testDelayWithObservableDelayThrows);
  methods[12].selector = @selector(testDelayWithObservableSubscriptionNormal);
  methods[13].selector = @selector(testDelayWithObservableSubscriptionFunctionThrows);
  methods[14].selector = @selector(testDelayWithObservableSubscriptionThrows);
  methods[15].selector = @selector(testDelayWithObservableEmptyDelayer);
  methods[16].selector = @selector(testDelayWithObservableSubscriptionRunCompletion);
  methods[17].selector = @selector(testDelayWithObservableAsTimed);
  methods[18].selector = @selector(testDelayWithObservableReorder);
  methods[19].selector = @selector(testDelayEmitsEverything);
  methods[20].selector = @selector(testBackpressureWithTimedDelay);
  methods[21].selector = @selector(testBackpressureWithSubscriptionTimedDelay);
  methods[22].selector = @selector(testBackpressureWithSelectorDelay);
  methods[23].selector = @selector(testBackpressureWithSelectorDelayAndSubscriptionDelay);
  methods[24].selector = @selector(testErrorRunsBeforeOnNext);
  methods[25].selector = @selector(delaySubscriptionCancelBeforeTime);
  methods[26].selector = @selector(delayAndTakeUntilNeverSubscribeToSource);
  methods[27].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxDopplMockMObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 27, 28 },
    { "observer2_", "LRxDopplMockMObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 27, 29 },
    { "scheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$0, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$1, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$2, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$3, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$4, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$5, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$6, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$7, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$8, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$9, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$10, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$11, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$12, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$13, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$14, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$15, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$16, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$17, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$18, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$19, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$20, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$21, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$22, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$23, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$24, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$25, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$26, "Lrx/doppl/mock/MObserver<Ljava/lang/Long;>;", (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$27, (void *)&RxInternalOperatorsOperatorDelayTest__Annotations$28 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest = { "OperatorDelayTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 28, 3, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorDelayTest;
}

@end

void RxInternalOperatorsOperatorDelayTest_init(RxInternalOperatorsOperatorDelayTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest *new_RxInternalOperatorsOperatorDelayTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest, init)
}

RxInternalOperatorsOperatorDelayTest *create_RxInternalOperatorsOperatorDelayTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDelayTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorDelayTest)

@implementation RxInternalOperatorsOperatorDelayTest_$1

- (JavaLangLong *)callWithId:(JavaLangLong *)value {
  if ([((JavaLangLong *) nil_chk(value)) longLongValue] == 1LL) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"error!");
  }
  return value;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangLong;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$1;
}

@end

void RxInternalOperatorsOperatorDelayTest_$1_init(RxInternalOperatorsOperatorDelayTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$1 *new_RxInternalOperatorsOperatorDelayTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$1, init)
}

RxInternalOperatorsOperatorDelayTest_$1 *create_RxInternalOperatorsOperatorDelayTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$1, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$2

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return [((id<JavaUtilList>) nil_chk(val$delays_)) getWithInt:[((JavaLangInteger *) nil_chk(t1)) intValue]];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delays_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delays_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LJavaUtilList;", "(Ljava/util/List<Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;>;)V", "Ljava/util/List<Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableNormal1", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$2;
}

@end

void RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(RxInternalOperatorsOperatorDelayTest_$2 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$delays_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$2 *new_RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$2, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$2 *create_RxInternalOperatorsOperatorDelayTest_$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$2, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$3

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSingleSend1", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$3;
}

@end

void RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$3 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$3 *new_RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$3, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$3 *create_RxInternalOperatorsOperatorDelayTest_$3_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$3, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$4

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSourceThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$4;
}

@end

void RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$4 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$4 *new_RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$4, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$4 *create_RxInternalOperatorsOperatorDelayTest_$4_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$4, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$5

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableDelayFunctionThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$5;
}

@end

void RxInternalOperatorsOperatorDelayTest_$5_init(RxInternalOperatorsOperatorDelayTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$5 *new_RxInternalOperatorsOperatorDelayTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$5, init)
}

RxInternalOperatorsOperatorDelayTest_$5 *create_RxInternalOperatorsOperatorDelayTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$5, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$6

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableDelayThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$6 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$6;
}

@end

void RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$6 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$6 *new_RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$6, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$6 *create_RxInternalOperatorsOperatorDelayTest_$6_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$6, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$7

- (RxObservable *)call {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionNormal", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$7;
}

@end

void RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$7 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$7 *new_RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$7, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$7 *create_RxInternalOperatorsOperatorDelayTest_$7_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$7, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$8

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionNormal", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$8;
}

@end

void RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$8 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$8 *new_RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$8, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$8 *create_RxInternalOperatorsOperatorDelayTest_$8_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$8, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$9

- (RxObservable *)call {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionFunctionThrows", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$9;
}

@end

void RxInternalOperatorsOperatorDelayTest_$9_init(RxInternalOperatorsOperatorDelayTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$9 *new_RxInternalOperatorsOperatorDelayTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$9, init)
}

RxInternalOperatorsOperatorDelayTest_$9 *create_RxInternalOperatorsOperatorDelayTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$9, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$10

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionFunctionThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$10;
}

@end

void RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$10 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$10 *new_RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$10, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$10 *create_RxInternalOperatorsOperatorDelayTest_$10_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$10, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$11

- (RxObservable *)call {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionThrows", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$11 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$11;
}

@end

void RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$11 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$11 *new_RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$11, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$11 *create_RxInternalOperatorsOperatorDelayTest_$11_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$11, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$12

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$12;
}

@end

void RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$12 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$12 *new_RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$12, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$12 *create_RxInternalOperatorsOperatorDelayTest_$12_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$12, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$13

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return RxObservable_empty();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableEmptyDelayer", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$13;
}

@end

void RxInternalOperatorsOperatorDelayTest_$13_init(RxInternalOperatorsOperatorDelayTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$13 *new_RxInternalOperatorsOperatorDelayTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$13, init)
}

RxInternalOperatorsOperatorDelayTest_$13 *create_RxInternalOperatorsOperatorDelayTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$13, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$14

- (RxObservable *)call {
  return val$sdelay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sdelay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sdelay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionRunCompletion", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$14 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$14;
}

@end

void RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$14 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$sdelay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$14 *new_RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$14, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$14 *create_RxInternalOperatorsOperatorDelayTest_$14_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$14, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$15

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return val$delay_;
}

- (instancetype)initWithRxSubjectsPublishSubject:(RxSubjectsPublishSubject *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubjectsPublishSubject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delay_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxSubjectsPublishSubject;", "(Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;)V", "Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableSubscriptionRunCompletion", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$15;
}

@end

void RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxInternalOperatorsOperatorDelayTest_$15 *self, RxSubjectsPublishSubject *capture$0) {
  JreStrongAssign(&self->val$delay_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$15 *new_RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$15, initWithRxSubjectsPublishSubject_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$15 *create_RxInternalOperatorsOperatorDelayTest_$15_initWithRxSubjectsPublishSubject_(RxSubjectsPublishSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$15, initWithRxSubjectsPublishSubject_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$16

- (RxObservable *)callWithId:(JavaLangLong *)t1 {
  return val$delayer_;
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$delayer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$delayer_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "(Ljava/lang/Long;)Lrx/Observable<Ljava/lang/Long;>;", "LRxObservable;", "(Lrx/Observable<Ljava/lang/Long;>;)V", "Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableAsTimed", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$16;
}

@end

void RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxInternalOperatorsOperatorDelayTest_$16 *self, RxObservable *capture$0) {
  JreStrongAssign(&self->val$delayer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$16 *new_RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$16, initWithRxObservable_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$16 *create_RxInternalOperatorsOperatorDelayTest_$16_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$16, initWithRxObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$17

- (RxObservable *)callWithId:(JavaLangInteger *)t1 {
  return [((id<JavaUtilList>) nil_chk(val$subjects_)) getWithInt:[((JavaLangInteger *) nil_chk(t1)) intValue]];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$subjects_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$subjects_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LJavaUtilList;", "(Ljava/util/List<Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;>;)V", "Ljava/util/List<Lrx/subjects/PublishSubject<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorDelayTest;", "testDelayWithObservableReorder", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$17;
}

@end

void RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(RxInternalOperatorsOperatorDelayTest_$17 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$subjects_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$17 *new_RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$17, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$17 *create_RxInternalOperatorsOperatorDelayTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$17, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorDelayTest_$18

- (void)callWithId:(RxNotification *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:t1];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorDelayTest;", "testDelayEmitsEverything", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Notification<-Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$18;
}

@end

void RxInternalOperatorsOperatorDelayTest_$18_init(RxInternalOperatorsOperatorDelayTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$18 *new_RxInternalOperatorsOperatorDelayTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$18, init)
}

RxInternalOperatorsOperatorDelayTest_$18 *create_RxInternalOperatorsOperatorDelayTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$18, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$19

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  if (c_++ <= 0) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithTimedDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$19;
}

@end

void RxInternalOperatorsOperatorDelayTest_$19_init(RxInternalOperatorsOperatorDelayTest_$19 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorDelayTest_$19 *new_RxInternalOperatorsOperatorDelayTest_$19_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$19, init)
}

RxInternalOperatorsOperatorDelayTest_$19 *create_RxInternalOperatorsOperatorDelayTest_$19_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$19, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$20

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  if (c_++ <= 0) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSubscriptionTimedDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$20 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$20;
}

@end

void RxInternalOperatorsOperatorDelayTest_$20_init(RxInternalOperatorsOperatorDelayTest_$20 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorDelayTest_$20 *new_RxInternalOperatorsOperatorDelayTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$20, init)
}

RxInternalOperatorsOperatorDelayTest_$20 *create_RxInternalOperatorsOperatorDelayTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$20, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$21

- (RxObservable *)callWithId:(JavaLangInteger *)i {
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$21 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$21;
}

@end

void RxInternalOperatorsOperatorDelayTest_$21_init(RxInternalOperatorsOperatorDelayTest_$21 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$21 *new_RxInternalOperatorsOperatorDelayTest_$21_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$21, init)
}

RxInternalOperatorsOperatorDelayTest_$21 *create_RxInternalOperatorsOperatorDelayTest_$21_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$21, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$22

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  if (c_++ <= 0) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$22_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$22;
}

@end

void RxInternalOperatorsOperatorDelayTest_$22_init(RxInternalOperatorsOperatorDelayTest_$22 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorDelayTest_$22 *new_RxInternalOperatorsOperatorDelayTest_$22_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$22, init)
}

RxInternalOperatorsOperatorDelayTest_$22 *create_RxInternalOperatorsOperatorDelayTest_$22_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$22, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$23

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$@", @"base-c == ", c_, @"/t == ", t)];
  if (c_++ <= 0) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelayAndSubscriptionDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$23 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$23;
}

@end

void RxInternalOperatorsOperatorDelayTest_$23_init(RxInternalOperatorsOperatorDelayTest_$23 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorDelayTest_$23 *new_RxInternalOperatorsOperatorDelayTest_$23_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$23, init)
}

RxInternalOperatorsOperatorDelayTest_$23 *create_RxInternalOperatorsOperatorDelayTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$23, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$24

- (RxObservable *)call {
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_(500, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelayAndSubscriptionDelay", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$24 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$24;
}

@end

void RxInternalOperatorsOperatorDelayTest_$24_init(RxInternalOperatorsOperatorDelayTest_$24 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$24 *new_RxInternalOperatorsOperatorDelayTest_$24_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$24, init)
}

RxInternalOperatorsOperatorDelayTest_$24 *create_RxInternalOperatorsOperatorDelayTest_$24_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$24, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$25

- (RxObservable *)callWithId:(JavaLangInteger *)i {
  return RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelayAndSubscriptionDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$25 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$25;
}

@end

void RxInternalOperatorsOperatorDelayTest_$25_init(RxInternalOperatorsOperatorDelayTest_$25 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$25 *new_RxInternalOperatorsOperatorDelayTest_$25_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$25, init)
}

RxInternalOperatorsOperatorDelayTest_$25 *create_RxInternalOperatorsOperatorDelayTest_$25_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$25, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$26

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$@", @"c == ", c_, @"/t == ", t)];
  if (c_++ <= 0) {
    @try {
      JavaLangThread_sleepWithLong_(500);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDelayTest_$26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorDelayTest;", "testBackpressureWithSelectorDelayAndSubscriptionDelay", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$26 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$26;
}

@end

void RxInternalOperatorsOperatorDelayTest_$26_init(RxInternalOperatorsOperatorDelayTest_$26 *self) {
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorDelayTest_$26 *new_RxInternalOperatorsOperatorDelayTest_$26_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$26, init)
}

RxInternalOperatorsOperatorDelayTest_$26 *create_RxInternalOperatorsOperatorDelayTest_$26_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$26, init)
}

@implementation RxInternalOperatorsOperatorDelayTest_$27

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$subscribed_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$subscribed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$subscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorDelayTest;", "delayAndTakeUntilNeverSubscribeToSource" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDelayTest_$27 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorDelayTest_$27;
}

@end

void RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDelayTest_$27 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$subscribed_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDelayTest_$27 *new_RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDelayTest_$27, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorDelayTest_$27 *create_RxInternalOperatorsOperatorDelayTest_$27_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDelayTest_$27, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}
