//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/DeferredScalarSubscriberTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxInternalOperatorsDeferredScalarSubscriber.h"
#include "RxInternalOperatorsDeferredScalarSubscriberTest.h"
#include "RxObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Runtime.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$16();

@interface RxInternalOperatorsDeferredScalarSubscriberTest_$1 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsDeferredScalarSubscriberTest_$1)

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriberTest_$1_init(RxInternalOperatorsDeferredScalarSubscriberTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$1 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$1 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$1_init();

@interface RxInternalOperatorsDeferredScalarSubscriberTest_$2 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithLong:(jlong)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsDeferredScalarSubscriberTest_$2)

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(RxInternalOperatorsDeferredScalarSubscriberTest_$2 *self, jlong arg$0);

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$2 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(jlong arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$2 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(jlong arg$0);

@interface RxInternalOperatorsDeferredScalarSubscriberTest_$3 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$ready_;
  RxObserversTestSubscriber *val$ts_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsDeferredScalarSubscriberTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$3, val$ready_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$3, val$ts_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$3 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$3 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsDeferredScalarSubscriberTest_$4 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$ready_;
  RxObserversTestSubscriber *val$ts_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsDeferredScalarSubscriberTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$4, val$ready_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$4, val$ts_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$4 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$4 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsDeferredScalarSubscriberTest_$5 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$ready_;
  RxObserversTestSubscriber *val$ts_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsDeferredScalarSubscriberTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$5, val$ready_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsDeferredScalarSubscriberTest_$5, val$ts_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$5 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$5 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsDeferredScalarSubscriberTest_$5 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1);

@implementation RxInternalOperatorsDeferredScalarSubscriberTest

- (void)completeFirst {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ds onCompleted];
  [ts assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)requestFirst {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(1);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ds onCompleted];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)empty {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ds onCompleted];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)error {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ds onErrorWithNSException:create_RxExceptionsTestException_init()];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)unsubscribeComposes {
  RxSubjectsPublishSubject *ps = RxSubjectsPublishSubject_create();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds subscribeToWithRxObservable:ps];
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"No subscribers?", [((RxSubjectsPublishSubject *) nil_chk(ps)) hasObservers]);
  [((RxObserversTestSubscriber *) nil_chk(ts)) unsubscribe];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ds onCompleted];
  [ts requestMoreWithLong:1];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  OrgJunitAssert_assertFalseWithNSString_withBoolean_(@"Subscribers?", [ps hasObservers]);
  OrgJunitAssert_assertTrueWithNSString_withBoolean_(@"Deferred not unsubscribed?", [ds isUnsubscribed]);
}

- (void)emptySource {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds subscribeToWithRxObservable:[((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) ignoreElements]];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)justSource {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds subscribeToWithRxObservable:RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1))];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)rangeSource {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds subscribeToWithRxObservable:RxObservable_rangeWithInt_withInt_(1, 10)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(10)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)completeAfterNext {
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsDeferredScalarSubscriberTest_$1_init();
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoValues];
  [ds onCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

- (void)completeAfterNextViaRequest {
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(0LL);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ds onCompleted];
  [ts assertNoValues];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

- (void)doubleComplete {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) requestMoreWithLong:1];
  [ds onCompleted];
  [ds onCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)doubleComplete2 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ds onCompleted];
  [ds onCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts)) requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)doubleRequest {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((RxObserversTestSubscriber *) nil_chk(ts)) requestMoreWithLong:1];
  [ts requestMoreWithLong:1];
  [ds onCompleted];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)negativeRequest {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  @try {
    [ds downstreamRequestWithLong:-99];
    OrgJunitAssert_failWithNSString_(@"Failed to throw IllegalArgumentException");
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"n >= 0 required but it was -99", [((JavaLangIllegalArgumentException *) nil_chk(ex)) getMessage]);
  }
}

- (void)callsAfterUnsubscribe {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
  [ds setupDownstream];
  [((RxObserversTestSubscriber *) nil_chk(ts)) unsubscribe];
  [ds downstreamRequestWithLong:1];
  [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ds onCompleted];
  [ds onCompleted];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

- (void)emissionRequestRace {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(RxSchedulersSchedulers_computation())) createWorker];
  @try {
    for (jint i = 0; i < 10000; i++) {
      RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
      RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
      [ds setupDownstream];
      [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
      JavaUtilConcurrentAtomicAtomicInteger *ready = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(2);
      [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(ready, ts)];
      [ready decrementAndGet];
      while ([ready get] != 0) ;
      [ds onCompleted];
      [((RxObserversTestSubscriber *) nil_chk(ts)) awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
      [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
      [ts assertNoErrors];
      [ts assertCompleted];
    }
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(w)) unsubscribe];
  }
}

- (void)emissionRequestRace2 {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(RxSchedulersSchedulers_io())) createWorker];
  RxScheduler_Worker *w2 = [((RxScheduler *) nil_chk(RxSchedulersSchedulers_io())) createWorker];
  jint m = 10000;
  if ([((JavaLangRuntime *) nil_chk(JavaLangRuntime_getRuntime())) availableProcessors] < 3) {
    m = 1000;
  }
  @try {
    for (jint i = 0; i < m; i++) {
      RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0LL);
      RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *ds = create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(ts);
      [ds setupDownstream];
      [ds onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
      JavaUtilConcurrentAtomicAtomicInteger *ready = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(3);
      [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(ready, ts)];
      [((RxScheduler_Worker *) nil_chk(w2)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(ready, ts)];
      [ready decrementAndGet];
      while ([ready get] != 0) ;
      [ds onCompleted];
      [((RxObserversTestSubscriber *) nil_chk(ts)) awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
      [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]];
      [ts assertNoErrors];
      [ts assertCompleted];
    }
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(w)) unsubscribe];
    [((RxScheduler_Worker *) nil_chk(w2)) unsubscribe];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsDeferredScalarSubscriberTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(completeFirst);
  methods[1].selector = @selector(requestFirst);
  methods[2].selector = @selector(empty);
  methods[3].selector = @selector(error);
  methods[4].selector = @selector(unsubscribeComposes);
  methods[5].selector = @selector(emptySource);
  methods[6].selector = @selector(justSource);
  methods[7].selector = @selector(rangeSource);
  methods[8].selector = @selector(completeAfterNext);
  methods[9].selector = @selector(completeAfterNextViaRequest);
  methods[10].selector = @selector(doubleComplete);
  methods[11].selector = @selector(doubleComplete2);
  methods[12].selector = @selector(doubleRequest);
  methods[13].selector = @selector(negativeRequest);
  methods[14].selector = @selector(callsAfterUnsubscribe);
  methods[15].selector = @selector(emissionRequestRace);
  methods[16].selector = @selector(emissionRequestRace2);
  methods[17].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$0, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$1, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$2, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$3, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$4, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$5, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$6, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$7, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$8, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$9, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$10, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$11, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$12, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$13, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$14, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$15, (void *)&RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$16, "LRxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest = { "DeferredScalarSubscriberTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 18, 0, -1, 17, -1, -1, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_init(RxInternalOperatorsDeferredScalarSubscriberTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsDeferredScalarSubscriberTest *new_RxInternalOperatorsDeferredScalarSubscriberTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest, init)
}

RxInternalOperatorsDeferredScalarSubscriberTest *create_RxInternalOperatorsDeferredScalarSubscriberTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest, init)
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsDeferredScalarSubscriberTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsDeferredScalarSubscriberTest)

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual {
  RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(self, actual);
  return self;
}

- (void)onNextWithId:(JavaLangInteger *)t {
  JreStrongAssign(&value_, t);
  hasValue_ = true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "onNext", "LJavaLangInteger;", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "Lrx/internal/operators/DeferredScalarSubscriber<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber = { "TestingDeferredScalarSubscriber", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x18, 2, 0, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *self, RxSubscriber *actual) {
  RxInternalOperatorsDeferredScalarSubscriber_initWithRxSubscriber_(self, actual);
}

RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *new_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(RxSubscriber *actual) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber, initWithRxSubscriber_, actual)
}

RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber *create_RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber_initWithRxSubscriber_(RxSubscriber *actual) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber, initWithRxSubscriber_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsDeferredScalarSubscriberTest_TestingDeferredScalarSubscriber)

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_$1

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsDeferredScalarSubscriberTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "completeAfterNext", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_$1;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_$1_init(RxInternalOperatorsDeferredScalarSubscriberTest_$1 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsDeferredScalarSubscriberTest_$1 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$1, init)
}

RxInternalOperatorsDeferredScalarSubscriberTest_$1 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$1, init)
}

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_$2

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self unsubscribe];
}

- (instancetype)initWithLong:(jlong)arg$0 {
  RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "J", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "completeAfterNextViaRequest", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_$2;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(RxInternalOperatorsDeferredScalarSubscriberTest_$2 *self, jlong arg$0) {
  RxObserversTestSubscriber_initWithLong_(self, arg$0);
}

RxInternalOperatorsDeferredScalarSubscriberTest_$2 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(jlong arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$2, initWithLong_, arg$0)
}

RxInternalOperatorsDeferredScalarSubscriberTest_$2 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$2_initWithLong_(jlong arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$2, initWithLong_, arg$0)
}

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_$3

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$ready_)) decrementAndGet];
  while ([val$ready_ get] != 0) ;
  [((RxObserversTestSubscriber *) nil_chk(val$ts_)) requestMoreWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ready_);
  RELEASE_(val$ts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ready_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ts_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicInteger;LRxObserversTestSubscriber;", "(Ljava/util/concurrent/atomic/AtomicInteger;Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "emissionRequestRace" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_$3;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$ready_, capture$0);
  JreStrongAssign(&self->val$ts_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsDeferredScalarSubscriberTest_$3 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$3, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsDeferredScalarSubscriberTest_$3 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$3, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_$4

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$ready_)) decrementAndGet];
  while ([val$ready_ get] != 0) ;
  [((RxObserversTestSubscriber *) nil_chk(val$ts_)) requestMoreWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ready_);
  RELEASE_(val$ts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ready_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ts_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicInteger;LRxObserversTestSubscriber;", "(Ljava/util/concurrent/atomic/AtomicInteger;Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "emissionRequestRace2" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_$4;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$ready_, capture$0);
  JreStrongAssign(&self->val$ts_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsDeferredScalarSubscriberTest_$4 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsDeferredScalarSubscriberTest_$4 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsDeferredScalarSubscriberTest_$5

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$ready_)) decrementAndGet];
  while ([val$ready_ get] != 0) ;
  [((RxObserversTestSubscriber *) nil_chk(val$ts_)) requestMoreWithLong:1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ready_);
  RELEASE_(val$ts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ready_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ts_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicInteger;LRxObserversTestSubscriber;", "(Ljava/util/concurrent/atomic/AtomicInteger;Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsDeferredScalarSubscriberTest;", "emissionRequestRace2" };
  static const J2ObjcClassInfo _RxInternalOperatorsDeferredScalarSubscriberTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsDeferredScalarSubscriberTest_$5;
}

@end

void RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(RxInternalOperatorsDeferredScalarSubscriberTest_$5 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$ready_, capture$0);
  JreStrongAssign(&self->val$ts_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsDeferredScalarSubscriberTest_$5 *new_RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$5, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsDeferredScalarSubscriberTest_$5 *create_RxInternalOperatorsDeferredScalarSubscriberTest_$5_initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsDeferredScalarSubscriberTest_$5, initWithJavaUtilConcurrentAtomicAtomicInteger_withRxObserversTestSubscriber_, capture$0, capture$1)
}
