//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/ReduceTests.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxCovarianceTest.h"
#include "RxFunctionsFunc2.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxReduceTests.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxReduceTests__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxReduceTests__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxReduceTests__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxReduceTests__Annotations$3();

@interface RxReduceTests_$1 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxReduceTests_$1)

__attribute__((unused)) static void RxReduceTests_$1_init(RxReduceTests_$1 *self);

__attribute__((unused)) static RxReduceTests_$1 *new_RxReduceTests_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxReduceTests_$1 *create_RxReduceTests_$1_init();

@interface RxReduceTests_$2 : NSObject < RxFunctionsFunc2 >

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxReduceTests_$2)

__attribute__((unused)) static void RxReduceTests_$2_init(RxReduceTests_$2 *self);

__attribute__((unused)) static RxReduceTests_$2 *new_RxReduceTests_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxReduceTests_$2 *create_RxReduceTests_$2_init();

@interface RxReduceTests_$3 : NSObject < RxFunctionsFunc2 >

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxReduceTests_$3)

__attribute__((unused)) static void RxReduceTests_$3_init(RxReduceTests_$3 *self);

__attribute__((unused)) static RxReduceTests_$3 *new_RxReduceTests_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxReduceTests_$3 *create_RxReduceTests_$3_init();

@interface RxReduceTests_$4 : NSObject < RxFunctionsFunc2 >

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxReduceTests_$4)

__attribute__((unused)) static void RxReduceTests_$4_init(RxReduceTests_$4 *self);

__attribute__((unused)) static RxReduceTests_$4 *new_RxReduceTests_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxReduceTests_$4 *create_RxReduceTests_$4_init();

@implementation RxReduceTests

- (void)reduceInts {
  RxObservable *o = RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3));
  jint value = [((JavaLangInteger *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o)) reduceWithRxFunctionsFunc2:create_RxReduceTests_$1_init()])) toBlocking])) single])) intValue];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, value);
}

- (void)reduceWithObjects {
  __unused RxObservable *horrorMovies = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused id<RxFunctionsFunc2> chooseSecondMovie = create_RxReduceTests_$2_init();
  __unused RxObservable *reduceResult = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(horrorMovies)) scanWithRxFunctionsFunc2:chooseSecondMovie])) takeLastWithInt:1];
  __unused RxObservable *reduceResult2 = [horrorMovies reduceWithRxFunctionsFunc2:chooseSecondMovie];
}

- (void)reduceWithCovariantObjects {
  __unused RxObservable *horrorMovies = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  __unused id<RxFunctionsFunc2> chooseSecondMovie = create_RxReduceTests_$3_init();
  __unused RxObservable *reduceResult2 = [((RxObservable *) nil_chk(horrorMovies)) reduceWithRxFunctionsFunc2:chooseSecondMovie];
}

- (void)reduceCovariance {
  RxObservable *horrorMovies = RxObservable_justWithId_(create_RxCovarianceTest_HorrorMovie_init());
  [self libraryFunctionActingOnMovieObservablesWithRxObservable:horrorMovies];
}

- (void)libraryFunctionActingOnMovieObservablesWithRxObservable:(RxObservable *)obs {
  id<RxFunctionsFunc2> chooseSecondMovie = create_RxReduceTests_$4_init();
  [((RxObservable *) nil_chk(obs)) reduceWithRxFunctionsFunc2:chooseSecondMovie];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxReduceTests_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(reduceInts);
  methods[1].selector = @selector(reduceWithObjects);
  methods[2].selector = @selector(reduceWithCovariantObjects);
  methods[3].selector = @selector(reduceCovariance);
  methods[4].selector = @selector(libraryFunctionActingOnMovieObservablesWithRxObservable:);
  methods[5].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxReduceTests__Annotations$0, (void *)&RxReduceTests__Annotations$1, (void *)&RxReduceTests__Annotations$2, (void *)&RxReduceTests__Annotations$3, "libraryFunctionActingOnMovieObservables", "LRxObservable;", "(Lrx/Observable<Lrx/CovarianceTest$Movie;>;)V" };
  static const J2ObjcClassInfo _RxReduceTests = { "ReduceTests", "rx", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_RxReduceTests;
}

@end

void RxReduceTests_init(RxReduceTests *self) {
  NSObject_init(self);
}

RxReduceTests *new_RxReduceTests_init() {
  J2OBJC_NEW_IMPL(RxReduceTests, init)
}

RxReduceTests *create_RxReduceTests_init() {
  J2OBJC_CREATE_IMPL(RxReduceTests, init)
}

IOSObjectArray *RxReduceTests__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxReduceTests__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxReduceTests__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxReduceTests__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxReduceTests)

@implementation RxReduceTests_$1

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxReduceTests_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxReduceTests;", "reduceInts", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxReduceTests_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxReduceTests_$1;
}

@end

void RxReduceTests_$1_init(RxReduceTests_$1 *self) {
  NSObject_init(self);
}

RxReduceTests_$1 *new_RxReduceTests_$1_init() {
  J2OBJC_NEW_IMPL(RxReduceTests_$1, init)
}

RxReduceTests_$1 *create_RxReduceTests_$1_init() {
  J2OBJC_CREATE_IMPL(RxReduceTests_$1, init)
}

@implementation RxReduceTests_$2

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2 {
  return t2;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxReduceTests_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxCovarianceTest_Movie;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Movie;LRxCovarianceTest_Movie;", "LRxReduceTests;", "reduceWithObjects", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxReduceTests_$2 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxReduceTests_$2;
}

@end

void RxReduceTests_$2_init(RxReduceTests_$2 *self) {
  NSObject_init(self);
}

RxReduceTests_$2 *new_RxReduceTests_$2_init() {
  J2OBJC_NEW_IMPL(RxReduceTests_$2, init)
}

RxReduceTests_$2 *create_RxReduceTests_$2_init() {
  J2OBJC_CREATE_IMPL(RxReduceTests_$2, init)
}

@implementation RxReduceTests_$3

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2 {
  return t2;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxReduceTests_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxCovarianceTest_Movie;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Movie;LRxCovarianceTest_Movie;", "LRxReduceTests;", "reduceWithCovariantObjects", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxReduceTests_$3 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxReduceTests_$3;
}

@end

void RxReduceTests_$3_init(RxReduceTests_$3 *self) {
  NSObject_init(self);
}

RxReduceTests_$3 *new_RxReduceTests_$3_init() {
  J2OBJC_NEW_IMPL(RxReduceTests_$3, init)
}

RxReduceTests_$3 *create_RxReduceTests_$3_init() {
  J2OBJC_CREATE_IMPL(RxReduceTests_$3, init)
}

@implementation RxReduceTests_$4

- (RxCovarianceTest_Movie *)callWithId:(RxCovarianceTest_Movie *)t1
                                withId:(RxCovarianceTest_Movie *)t2 {
  return t2;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxReduceTests_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxCovarianceTest_Movie;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxCovarianceTest_Movie;LRxCovarianceTest_Movie;", "LRxReduceTests;", "libraryFunctionActingOnMovieObservablesWithRxObservable:", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;Lrx/CovarianceTest$Movie;>;" };
  static const J2ObjcClassInfo _RxReduceTests_$4 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxReduceTests_$4;
}

@end

void RxReduceTests_$4_init(RxReduceTests_$4 *self) {
  NSObject_init(self);
}

RxReduceTests_$4 *new_RxReduceTests_$4_init() {
  J2OBJC_NEW_IMPL(RxReduceTests_$4, init)
}

RxReduceTests_$4 *create_RxReduceTests_$4_init() {
  J2OBJC_CREATE_IMPL(RxReduceTests_$4, init)
}
