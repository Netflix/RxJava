//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorZipTest.java
//

#include "CoTouchlabDoppelTestingPlatformUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc2.h"
#include "RxFunctionsFunc3.h"
#include "RxFunctionsFunc4.h"
#include "RxFunctionsFunc5.h"
#include "RxFunctionsFunc6.h"
#include "RxFunctionsFunc7.h"
#include "RxFunctionsFunc8.h"
#include "RxFunctionsFunc9.h"
#include "RxFunctionsFuncN.h"
#include "RxFunctionsFunctions.h"
#include "RxInternalOperatorsOperatorZipTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/function/Consumer.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorZipTest ()

- (id<RxFunctionsFunc2>)getConcat2Strings;

- (id<RxFunctionsFunc2>)getDivideZipr;

- (id<RxFunctionsFunc3>)getConcat3StringsZipr;

- (id<RxFunctionsFunc2>)getConcatStringIntegerZipr;

- (id<RxFunctionsFunc3>)getConcatStringIntegerIntArrayZipr;

+ (NSString *)getStringValueWithId:(id)o;

- (RxObservable *)createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)generated;

- (void)runZipRaceWithRxObservable:(RxObservable *)src;

@end

__attribute__((unused)) static id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getConcat2Strings(RxInternalOperatorsOperatorZipTest *self);

__attribute__((unused)) static id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getDivideZipr(RxInternalOperatorsOperatorZipTest *self);

__attribute__((unused)) static id<RxFunctionsFunc3> RxInternalOperatorsOperatorZipTest_getConcat3StringsZipr(RxInternalOperatorsOperatorZipTest *self);

__attribute__((unused)) static id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getConcatStringIntegerZipr(RxInternalOperatorsOperatorZipTest *self);

__attribute__((unused)) static id<RxFunctionsFunc3> RxInternalOperatorsOperatorZipTest_getConcatStringIntegerIntArrayZipr(RxInternalOperatorsOperatorZipTest *self);

__attribute__((unused)) static NSString *RxInternalOperatorsOperatorZipTest_getStringValueWithId_(id o);

__attribute__((unused)) static RxObservable *RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest *self, JavaUtilConcurrentAtomicAtomicInteger *generated);

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_runZipRaceWithRxObservable_(RxInternalOperatorsOperatorZipTest *self, RxObservable *src);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$28();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$29();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$30();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$31();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$32();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$33();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$34();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$35();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$36();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$37();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$38();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$39();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$40();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$41();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$42();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$43();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$44();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$45();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$46();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$47();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$48();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$49();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$50();

@interface RxInternalOperatorsOperatorZipTest_TestObservable : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxObserver> observer_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_TestObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_TestObservable, observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_TestObservable_init(RxInternalOperatorsOperatorZipTest_TestObservable *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_TestObservable *new_RxInternalOperatorsOperatorZipTest_TestObservable_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_TestObservable *create_RxInternalOperatorsOperatorZipTest_TestObservable_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorZipTest_TestObservable)

@interface RxInternalOperatorsOperatorZipTest_$3 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(NSString *)t1
                  withId:(NSString *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$3_init(RxInternalOperatorsOperatorZipTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$3 *new_RxInternalOperatorsOperatorZipTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$3 *create_RxInternalOperatorsOperatorZipTest_$3_init();

@interface RxInternalOperatorsOperatorZipTest_$1 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(id)t1
                  withId:(id)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$1_init(RxInternalOperatorsOperatorZipTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$1 *new_RxInternalOperatorsOperatorZipTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$1 *create_RxInternalOperatorsOperatorZipTest_$1_init();

@interface RxInternalOperatorsOperatorZipTest_$2 : NSObject < RxFunctionsFunc3 >

- (NSString *)callWithId:(id)t1
                  withId:(id)t2
                  withId:(id)t3;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$2_init(RxInternalOperatorsOperatorZipTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$2 *new_RxInternalOperatorsOperatorZipTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$2 *create_RxInternalOperatorsOperatorZipTest_$2_init();

@interface RxInternalOperatorsOperatorZipTest_$4 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(NSString *)t1
                  withId:(NSString *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$4_init(RxInternalOperatorsOperatorZipTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$4 *new_RxInternalOperatorsOperatorZipTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$4 *create_RxInternalOperatorsOperatorZipTest_$4_init();

@interface RxInternalOperatorsOperatorZipTest_$5 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$5_init(RxInternalOperatorsOperatorZipTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$5 *new_RxInternalOperatorsOperatorZipTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$5 *create_RxInternalOperatorsOperatorZipTest_$5_init();

@interface RxInternalOperatorsOperatorZipTest_$6 : NSObject < RxFunctionsFunc3 >

- (NSString *)callWithId:(NSString *)a1
                  withId:(NSString *)a2
                  withId:(NSString *)a3;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$6_init(RxInternalOperatorsOperatorZipTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$6 *new_RxInternalOperatorsOperatorZipTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$6 *create_RxInternalOperatorsOperatorZipTest_$6_init();

@interface RxInternalOperatorsOperatorZipTest_$7 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$7_init(RxInternalOperatorsOperatorZipTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$7 *new_RxInternalOperatorsOperatorZipTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$7 *create_RxInternalOperatorsOperatorZipTest_$7_init();

@interface RxInternalOperatorsOperatorZipTest_$8 : NSObject < RxFunctionsFunc3 >

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)i
                  withId:(IOSIntArray *)iArray;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$8_init(RxInternalOperatorsOperatorZipTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$8 *new_RxInternalOperatorsOperatorZipTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$8 *create_RxInternalOperatorsOperatorZipTest_$8_init();

@interface RxInternalOperatorsOperatorZipTest_$9 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$9_init(RxInternalOperatorsOperatorZipTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$9 *new_RxInternalOperatorsOperatorZipTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$9 *create_RxInternalOperatorsOperatorZipTest_$9_init();

@interface RxInternalOperatorsOperatorZipTest_$10 : NSObject < RxObserver > {
 @public
  id<RxObserver> val$observer_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)args;

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$10, val$observer_, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(RxInternalOperatorsOperatorZipTest_$10 *self, id<RxObserver> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$10 *new_RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(id<RxObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$10 *create_RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(id<RxObserver> capture$0);

@interface RxInternalOperatorsOperatorZipTest_$11 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$11_init(RxInternalOperatorsOperatorZipTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$11 *new_RxInternalOperatorsOperatorZipTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$11 *create_RxInternalOperatorsOperatorZipTest_$11_init();

@interface RxInternalOperatorsOperatorZipTest_$12 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$list_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$12, val$list_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$12 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$12 *new_RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$12 *create_RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$13 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$13_init(RxInternalOperatorsOperatorZipTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$13 *new_RxInternalOperatorsOperatorZipTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$13 *create_RxInternalOperatorsOperatorZipTest_$13_init();

@interface RxInternalOperatorsOperatorZipTest_$14 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$14_init(RxInternalOperatorsOperatorZipTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$14 *new_RxInternalOperatorsOperatorZipTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$14 *create_RxInternalOperatorsOperatorZipTest_$14_init();

@interface RxInternalOperatorsOperatorZipTest_$15 : NSObject < RxObserver > {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilArrayList *val$list_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                   withJavaUtilArrayList:(JavaUtilArrayList *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$15, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$15, val$list_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$15 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$15 *new_RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$15 *create_RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1);

@interface RxInternalOperatorsOperatorZipTest_$16 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(NSString *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$16)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$16_init(RxInternalOperatorsOperatorZipTest_$16 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$16 *new_RxInternalOperatorsOperatorZipTest_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$16 *create_RxInternalOperatorsOperatorZipTest_$16_init();

@interface RxInternalOperatorsOperatorZipTest_$17 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$list_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$17, val$list_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$17 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$17 *new_RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$17 *create_RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$18 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(RxNotification *)t1
                  withId:(RxNotification *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$18_init(RxInternalOperatorsOperatorZipTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$18 *new_RxInternalOperatorsOperatorZipTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$18 *create_RxInternalOperatorsOperatorZipTest_$18_init();

@interface RxInternalOperatorsOperatorZipTest_$19 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$list_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$19)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$19, val$list_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$19 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$19 *new_RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$19 *create_RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$20 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(NSString *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$20_init(RxInternalOperatorsOperatorZipTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$20 *new_RxInternalOperatorsOperatorZipTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$20 *create_RxInternalOperatorsOperatorZipTest_$20_init();

@interface RxInternalOperatorsOperatorZipTest_$21 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$list_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$21)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$21, val$list_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$21 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$21 *new_RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$21 *create_RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$22 : NSObject < RxFunctionsFuncN > {
 @public
  id val$invoked_;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$22, val$invoked_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$22_initWithId_(RxInternalOperatorsOperatorZipTest_$22 *self, id capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$22 *new_RxInternalOperatorsOperatorZipTest_$22_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$22 *create_RxInternalOperatorsOperatorZipTest_$22_initWithId_(id capture$0);

@interface RxInternalOperatorsOperatorZipTest_$23 : NSObject < RxFunctionsFuncN >

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$23)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$23_init(RxInternalOperatorsOperatorZipTest_$23 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$23 *new_RxInternalOperatorsOperatorZipTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$23 *create_RxInternalOperatorsOperatorZipTest_$23_init();

@interface RxInternalOperatorsOperatorZipTest_$24 : NSObject < RxFunctionsFuncN > {
 @public
  JavaLangInteger *val$expected_;
}

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$24)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$24, val$expected_, JavaLangInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(RxInternalOperatorsOperatorZipTest_$24 *self, JavaLangInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$24 *new_RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(JavaLangInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$24 *create_RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(JavaLangInteger *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$25 : NSObject < RxFunctionsFuncN > {
 @public
  JavaLangInteger *val$finalExpected_;
}

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$25)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$25, val$finalExpected_, JavaLangInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(RxInternalOperatorsOperatorZipTest_$25 *self, JavaLangInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$25 *new_RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(JavaLangInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$25 *create_RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(JavaLangInteger *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$26 : NSObject < RxFunctionsFuncN > {
 @public
  id val$invoked_;
}

- (id)callWithNSObjectArray:(IOSObjectArray *)args;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$26)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$26, val$invoked_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$26_initWithId_(RxInternalOperatorsOperatorZipTest_$26 *self, id capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$26 *new_RxInternalOperatorsOperatorZipTest_$26_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$26 *create_RxInternalOperatorsOperatorZipTest_$26_initWithId_(id capture$0);

@interface RxInternalOperatorsOperatorZipTest_$27 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$27)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$27_init(RxInternalOperatorsOperatorZipTest_$27 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$27 *new_RxInternalOperatorsOperatorZipTest_$27_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$27 *create_RxInternalOperatorsOperatorZipTest_$27_init();

@interface RxInternalOperatorsOperatorZipTest_$28 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$28)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$28_init(RxInternalOperatorsOperatorZipTest_$28 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$28 *new_RxInternalOperatorsOperatorZipTest_$28_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$28 *create_RxInternalOperatorsOperatorZipTest_$28_init();

@interface RxInternalOperatorsOperatorZipTest_$29 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$29)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$29_init(RxInternalOperatorsOperatorZipTest_$29 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$29 *new_RxInternalOperatorsOperatorZipTest_$29_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$29 *create_RxInternalOperatorsOperatorZipTest_$29_init();

@interface RxInternalOperatorsOperatorZipTest_$30 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$30)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$30_init(RxInternalOperatorsOperatorZipTest_$30 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$30 *new_RxInternalOperatorsOperatorZipTest_$30_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$30 *create_RxInternalOperatorsOperatorZipTest_$30_init();

@interface RxInternalOperatorsOperatorZipTest_$31 : NSObject < RxFunctionsFunc2 >

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$31)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$31_init(RxInternalOperatorsOperatorZipTest_$31 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$31 *new_RxInternalOperatorsOperatorZipTest_$31_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$31 *create_RxInternalOperatorsOperatorZipTest_$31_init();

@interface RxInternalOperatorsOperatorZipTest_$32 : NSObject < JavaLangIterable > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$generated_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$32)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$32, val$generated_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest_$32 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$32 *new_RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$32 *create_RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$32_$1 : NSObject < JavaUtilIterator > {
 @public
  RxInternalOperatorsOperatorZipTest_$32 *this$0_;
}

- (void)remove;

- (JavaLangInteger *)next;

- (jboolean)hasNext;

- (instancetype)initWithRxInternalOperatorsOperatorZipTest_$32:(RxInternalOperatorsOperatorZipTest_$32 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$32_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$32_$1, this$0_, RxInternalOperatorsOperatorZipTest_$32 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32_$1 *self, RxInternalOperatorsOperatorZipTest_$32 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$32_$1 *new_RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$32_$1 *create_RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32 *outer$);

@interface RxInternalOperatorsOperatorZipTest_$33 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$numEmitted_;
}

- (void)callWithId:(RxSubscriber *)o;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$33)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$33, val$numEmitted_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest_$33 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$33 *new_RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$33 *create_RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$34 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
}

- (void)callWithId:(RxSubscriber *)o;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$34)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$34, val$latch_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorZipTest_$34 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$34 *new_RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$34 *create_RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$34_$1 : NSObject < JavaLangRunnable > {
 @public
  RxInternalOperatorsOperatorZipTest_$34 *this$0_;
  RxSubscriber *val$o_;
}

- (void)run;

- (instancetype)initWithRxInternalOperatorsOperatorZipTest_$34:(RxInternalOperatorsOperatorZipTest_$34 *)outer$
                                              withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$34_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$34_$1, this$0_, RxInternalOperatorsOperatorZipTest_$34 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest_$34_$1, val$o_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34_$1 *self, RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$34_$1 *new_RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$34_$1 *create_RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorZipTest_$35 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$35)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$35_init(RxInternalOperatorsOperatorZipTest_$35 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$35 *new_RxInternalOperatorsOperatorZipTest_$35_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$35 *create_RxInternalOperatorsOperatorZipTest_$35_init();

@interface RxInternalOperatorsOperatorZipTest_$36 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$36)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$36_init(RxInternalOperatorsOperatorZipTest_$36 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$36 *new_RxInternalOperatorsOperatorZipTest_$36_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$36 *create_RxInternalOperatorsOperatorZipTest_$36_init();

@interface RxInternalOperatorsOperatorZipTest_$37 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$37)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$37_init(RxInternalOperatorsOperatorZipTest_$37 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$37 *new_RxInternalOperatorsOperatorZipTest_$37_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$37 *create_RxInternalOperatorsOperatorZipTest_$37_init();

@interface RxInternalOperatorsOperatorZipTest_$38 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$38)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$38_init(RxInternalOperatorsOperatorZipTest_$38 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$38 *new_RxInternalOperatorsOperatorZipTest_$38_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$38 *create_RxInternalOperatorsOperatorZipTest_$38_init();

@interface RxInternalOperatorsOperatorZipTest_$39 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$39)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$39_init(RxInternalOperatorsOperatorZipTest_$39 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$39 *new_RxInternalOperatorsOperatorZipTest_$39_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$39 *create_RxInternalOperatorsOperatorZipTest_$39_init();

@interface RxInternalOperatorsOperatorZipTest_$40 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$40)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$40_init(RxInternalOperatorsOperatorZipTest_$40 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$40 *new_RxInternalOperatorsOperatorZipTest_$40_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$40 *create_RxInternalOperatorsOperatorZipTest_$40_init();

@interface RxInternalOperatorsOperatorZipTest_$41 : NSObject < RxFunctionsFunc2 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$41)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$41_init(RxInternalOperatorsOperatorZipTest_$41 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$41 *new_RxInternalOperatorsOperatorZipTest_$41_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$41 *create_RxInternalOperatorsOperatorZipTest_$41_init();

@interface RxInternalOperatorsOperatorZipTest_$42 : NSObject < RxFunctionsFuncN >

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)a;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$42)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$42_init(RxInternalOperatorsOperatorZipTest_$42 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$42 *new_RxInternalOperatorsOperatorZipTest_$42_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$42 *create_RxInternalOperatorsOperatorZipTest_$42_init();

@interface RxInternalOperatorsOperatorZipTest_$43 : NSObject < RxFunctionsFunc4 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$43)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$43_init(RxInternalOperatorsOperatorZipTest_$43 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$43 *new_RxInternalOperatorsOperatorZipTest_$43_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$43 *create_RxInternalOperatorsOperatorZipTest_$43_init();

@interface RxInternalOperatorsOperatorZipTest_$44 : NSObject < RxFunctionsFunc5 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$44)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$44_init(RxInternalOperatorsOperatorZipTest_$44 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$44 *new_RxInternalOperatorsOperatorZipTest_$44_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$44 *create_RxInternalOperatorsOperatorZipTest_$44_init();

@interface RxInternalOperatorsOperatorZipTest_$45 : NSObject < RxFunctionsFunc6 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$45)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$45_init(RxInternalOperatorsOperatorZipTest_$45 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$45 *new_RxInternalOperatorsOperatorZipTest_$45_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$45 *create_RxInternalOperatorsOperatorZipTest_$45_init();

@interface RxInternalOperatorsOperatorZipTest_$46 : NSObject < RxFunctionsFunc7 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$46)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$46_init(RxInternalOperatorsOperatorZipTest_$46 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$46 *new_RxInternalOperatorsOperatorZipTest_$46_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$46 *create_RxInternalOperatorsOperatorZipTest_$46_init();

@interface RxInternalOperatorsOperatorZipTest_$47 : NSObject < RxFunctionsFunc8 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7
          withId:(id)t8;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$47)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$47_init(RxInternalOperatorsOperatorZipTest_$47 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$47 *new_RxInternalOperatorsOperatorZipTest_$47_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$47 *create_RxInternalOperatorsOperatorZipTest_$47_init();

@interface RxInternalOperatorsOperatorZipTest_$48 : NSObject < RxFunctionsFunc9 >

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7
          withId:(id)t8
          withId:(id)t9;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest_$48)

__attribute__((unused)) static void RxInternalOperatorsOperatorZipTest_$48_init(RxInternalOperatorsOperatorZipTest_$48 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$48 *new_RxInternalOperatorsOperatorZipTest_$48_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorZipTest_$48 *create_RxInternalOperatorsOperatorZipTest_$48_init();

@implementation RxInternalOperatorsOperatorZipTest

- (void)setUp {
  JreStrongAssignAndConsume(&concat2Strings_, new_RxInternalOperatorsOperatorZipTest_$3_init());
  JreStrongAssign(&s1_, RxSubjectsPublishSubject_create());
  JreStrongAssign(&s2_, RxSubjectsPublishSubject_create());
  JreStrongAssign(&zipped_, RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(s1_, s2_, concat2Strings_));
  JreStrongAssign(&observer_, OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_()));
  JreStrongAssign(&inOrder_, OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]));
  [((RxObservable *) nil_chk(zipped_)) subscribeWithRxObserver:observer_];
}

- (void)testCollectionSizeDifferentThanFunction {
  id<RxFunctionsFuncN> zipr = RxFunctionsFunctions_fromFuncWithRxFunctionsFunc3_(RxInternalOperatorsOperatorZipTest_getConcatStringIntegerIntArrayZipr(self));
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<JavaUtilCollection> ws = JavaUtilCollections_singletonWithId_(RxObservable_justWithId_withId_(@"one", @"two"));
  RxObservable *w = RxObservable_zipWithJavaLangIterable_withRxFunctionsFuncN_(ws, zipr);
  [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_anyWithIOSClass_(NSString_class_())];
}

- (void)testStartpingDifferentLengthObservableSequences1 {
  id<RxObserver> w = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxInternalOperatorsOperatorZipTest_TestObservable *w1 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxInternalOperatorsOperatorZipTest_TestObservable *w2 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxInternalOperatorsOperatorZipTest_TestObservable *w3 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxObservable *zipW = RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(RxObservable_createWithRxObservable_OnSubscribe_(w1), RxObservable_createWithRxObservable_OnSubscribe_(w2), RxObservable_createWithRxObservable_OnSubscribe_(w3), RxInternalOperatorsOperatorZipTest_getConcat3StringsZipr(self));
  [((RxObservable *) nil_chk(zipW)) subscribeWithRxObserver:w];
  [((id<RxObserver>) nil_chk(w1->observer_)) onNextWithId:@"1a"];
  [((id<RxObserver>) nil_chk(w1->observer_)) onCompleted];
  [((id<RxObserver>) nil_chk(w2->observer_)) onNextWithId:@"2a"];
  [((id<RxObserver>) nil_chk(w2->observer_)) onNextWithId:@"2b"];
  [((id<RxObserver>) nil_chk(w2->observer_)) onCompleted];
  [((id<RxObserver>) nil_chk(w3->observer_)) onNextWithId:@"3a"];
  [((id<RxObserver>) nil_chk(w3->observer_)) onNextWithId:@"3b"];
  [((id<RxObserver>) nil_chk(w3->observer_)) onNextWithId:@"3c"];
  [((id<RxObserver>) nil_chk(w3->observer_)) onNextWithId:@"3d"];
  [((id<RxObserver>) nil_chk(w3->observer_)) onCompleted];
  id<OrgMockitoInOrder> io = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(io)) verifyWithId:w])) onNextWithId:@"1a2a3a"];
  [((id<RxObserver>) nil_chk([io verifyWithId:w withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testStartpingDifferentLengthObservableSequences2 {
  id<RxObserver> w = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxInternalOperatorsOperatorZipTest_TestObservable *w1 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxInternalOperatorsOperatorZipTest_TestObservable *w2 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxInternalOperatorsOperatorZipTest_TestObservable *w3 = create_RxInternalOperatorsOperatorZipTest_TestObservable_init();
  RxObservable *zipW = RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(RxObservable_createWithRxObservable_OnSubscribe_(w1), RxObservable_createWithRxObservable_OnSubscribe_(w2), RxObservable_createWithRxObservable_OnSubscribe_(w3), RxInternalOperatorsOperatorZipTest_getConcat3StringsZipr(self));
  [((RxObservable *) nil_chk(zipW)) subscribeWithRxObserver:w];
  [((id<RxObserver>) nil_chk(w1->observer_)) onNextWithId:@"1a"];
  [((id<RxObserver>) nil_chk(w1->observer_)) onNextWithId:@"1b"];
  [((id<RxObserver>) nil_chk(w1->observer_)) onNextWithId:@"1c"];
  [((id<RxObserver>) nil_chk(w1->observer_)) onNextWithId:@"1d"];
  [((id<RxObserver>) nil_chk(w1->observer_)) onCompleted];
  [((id<RxObserver>) nil_chk(w2->observer_)) onNextWithId:@"2a"];
  [((id<RxObserver>) nil_chk(w2->observer_)) onNextWithId:@"2b"];
  [((id<RxObserver>) nil_chk(w2->observer_)) onCompleted];
  [((id<RxObserver>) nil_chk(w3->observer_)) onNextWithId:@"3a"];
  [((id<RxObserver>) nil_chk(w3->observer_)) onCompleted];
  id<OrgMockitoInOrder> io = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(io)) verifyWithId:w])) onNextWithId:@"1a2a3a"];
  [((id<RxObserver>) nil_chk([io verifyWithId:w withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
}

- (void)testAggregatorSimple {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"world"];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"helloworld"];
  [r1 onNextWithId:@"hello "];
  [r2 onNextWithId:@"again"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"hello again"];
  [r1 onCompleted];
  [r2 onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testAggregatorDifferentSizedResultsWithOnComplete {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"world"];
  [r2 onCompleted];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"helloworld"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [r1 onNextWithId:@"hi"];
  [r1 onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
}

- (void)testAggregateMultipleTypes {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [r2 onCompleted];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"hello1"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [r1 onNextWithId:@"hi"];
  [r1 onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
}

- (void)testAggregate3Types {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r3 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(r1, r2, r3, zipr3_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((RxSubjectsPublishSubject *) nil_chk(r3)) onNextWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7) } count:3 type:JavaLangInteger_class_()])];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"hello2[5, 6, 7]"];
}

- (void)testAggregatorsWithDifferentSizesAndTiming {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"one"];
  [r1 onNextWithId:@"two"];
  [r1 onNextWithId:@"three"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"A"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"oneA"];
  [r1 onNextWithId:@"four"];
  [r1 onCompleted];
  [r2 onNextWithId:@"B"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"twoB"];
  [r2 onNextWithId:@"C"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"threeC"];
  [r2 onNextWithId:@"D"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"fourD"];
  [r2 onNextWithId:@"E"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"E"];
  [r2 onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testAggregatorError {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"world"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"helloworld"];
  [r1 onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"")];
  [r1 onNextWithId:@"hello"];
  [r2 onNextWithId:@"again"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"helloagain"];
}

- (void)testAggregatorUnsubscribe {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<RxSubscription> subscription = [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"hello"];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"world"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"helloworld"];
  [((id<RxSubscription>) nil_chk(subscription)) unsubscribe];
  [r1 onNextWithId:@"hello"];
  [r2 onNextWithId:@"again"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(0)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(0)))) onNextWithId:@"helloagain"];
}

- (void)testAggregatorEarlyCompletion {
  RxSubjectsPublishSubject *r1 = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *r2 = RxSubjectsPublishSubject_create();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(r1, r2, zipr2_))) subscribeWithRxObserver:observer];
  [((RxSubjectsPublishSubject *) nil_chk(r1)) onNextWithId:@"one"];
  [r1 onNextWithId:@"two"];
  [r1 onCompleted];
  [((RxSubjectsPublishSubject *) nil_chk(r2)) onNextWithId:@"A"];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"oneA"];
  [r2 onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
}

- (void)testStart2Types {
  id<RxFunctionsFunc2> zipr = RxInternalOperatorsOperatorZipTest_getConcatStringIntegerZipr(self);
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *w = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable_justWithId_withId_(@"one", @"two"), RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4)), zipr);
  [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one2"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"two3"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"4"];
}

- (void)testStart3Types {
  id<RxFunctionsFunc3> zipr = RxInternalOperatorsOperatorZipTest_getConcatStringIntegerIntArrayZipr(self);
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *w = RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc3_(RxObservable_justWithId_withId_(@"one", @"two"), RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2)), RxObservable_justWithId_([IOSIntArray arrayWithInts:(jint[]){ 4, 5, 6 } count:3]), zipr);
  [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:@"one2[4, 5, 6]"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_never()))) onNextWithId:@"two"];
}

- (void)testOnNextExceptionInvokesOnError {
  if (CoTouchlabDoppelTestingPlatformUtils_isJ2objc()) return;
  id<RxFunctionsFunc2> zipr = RxInternalOperatorsOperatorZipTest_getDivideZipr(self);
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *w = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(20), JavaLangInteger_valueOfWithInt_(30)), RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)), zipr);
  [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testOnFirstCompletion {
  RxSubjectsPublishSubject *oA = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *oB = RxSubjectsPublishSubject_create();
  id<RxObserver> obs = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *o = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(oA, oB, RxInternalOperatorsOperatorZipTest_getConcat2Strings(self));
  [((RxObservable *) nil_chk(o)) subscribeWithRxObserver:obs];
  id<OrgMockitoInOrder> io = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ obs } count:1 type:NSObject_class_()]);
  [((RxSubjectsPublishSubject *) nil_chk(oA)) onNextWithId:@"a1"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(io)) verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((RxSubjectsPublishSubject *) nil_chk(oB)) onNextWithId:@"b1"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a1-b1"];
  [oB onNextWithId:@"b2"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [oA onNextWithId:@"a2"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a2-b2"];
  [oA onNextWithId:@"a3"];
  [oA onNextWithId:@"a4"];
  [oA onNextWithId:@"a5"];
  [oA onCompleted];
  [oB onNextWithId:@"b3"];
  [oB onNextWithId:@"b4"];
  [oB onNextWithId:@"b5"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a3-b3"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a4-b4"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a5-b5"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [oB onNextWithId:@"b6"];
  [oB onNextWithId:@"b7"];
  [oB onNextWithId:@"b8"];
  [oB onNextWithId:@"b9"];
  [io verifyNoMoreInteractions];
}

- (void)testOnErrorTermination {
  RxSubjectsPublishSubject *oA = RxSubjectsPublishSubject_create();
  RxSubjectsPublishSubject *oB = RxSubjectsPublishSubject_create();
  id<RxObserver> obs = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxObservable *o = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(oA, oB, RxInternalOperatorsOperatorZipTest_getConcat2Strings(self));
  [((RxObservable *) nil_chk(o)) subscribeWithRxObserver:obs];
  id<OrgMockitoInOrder> io = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ obs } count:1 type:NSObject_class_()]);
  [((RxSubjectsPublishSubject *) nil_chk(oA)) onNextWithId:@"a1"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(io)) verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((RxSubjectsPublishSubject *) nil_chk(oB)) onNextWithId:@"b1"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a1-b1"];
  [oB onNextWithId:@"b2"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [oA onNextWithId:@"a2"];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a2-b2"];
  [oA onNextWithId:@"a3"];
  [oA onNextWithId:@"a4"];
  [oA onNextWithId:@"a5"];
  [oA onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"forced failure")];
  [((id<RxObserver>) nil_chk([io verifyWithId:obs withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRuntimeException_class_())];
  [oB onNextWithId:@"b3"];
  [oB onNextWithId:@"b4"];
  [oB onNextWithId:@"b5"];
  [oB onNextWithId:@"b6"];
  [oB onNextWithId:@"b7"];
  [oB onNextWithId:@"b8"];
  [oB onNextWithId:@"b9"];
  [io verifyNoMoreInteractions];
}

- (id<RxFunctionsFunc2>)getConcat2Strings {
  return RxInternalOperatorsOperatorZipTest_getConcat2Strings(self);
}

- (id<RxFunctionsFunc2>)getDivideZipr {
  return RxInternalOperatorsOperatorZipTest_getDivideZipr(self);
}

- (id<RxFunctionsFunc3>)getConcat3StringsZipr {
  return RxInternalOperatorsOperatorZipTest_getConcat3StringsZipr(self);
}

- (id<RxFunctionsFunc2>)getConcatStringIntegerZipr {
  return RxInternalOperatorsOperatorZipTest_getConcatStringIntegerZipr(self);
}

- (id<RxFunctionsFunc3>)getConcatStringIntegerIntArrayZipr {
  return RxInternalOperatorsOperatorZipTest_getConcatStringIntegerIntArrayZipr(self);
}

+ (NSString *)getStringValueWithId:(id)o {
  return RxInternalOperatorsOperatorZipTest_getStringValueWithId_(o);
}

- (void)testFirstCompletesThenSecondInfinite {
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"a"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"b"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onCompleted];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"1"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a-1"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b-2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testSecondInfiniteThenFirstCompletes {
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"1"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"2"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a-1"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b-2"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testSecondCompletesThenFirstInfinite {
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"1"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"2"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onCompleted];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a-1"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b-2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testFirstInfiniteThenSecondCompletes {
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"a"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"b"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"1"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a-1"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b-2"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testFirstFails {
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"a"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"Forced failure")];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRuntimeException_class_())];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"b"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"1"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyWithIOSClass_(NSString_class_())];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testSecondFails {
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"a"];
  [((RxSubjectsPublishSubject *) nil_chk(s1_)) onNextWithId:@"b"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onErrorWithNSException:create_JavaLangRuntimeException_initWithNSString_(@"Forced failure")];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRuntimeException_class_())];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"1"];
  [((RxSubjectsPublishSubject *) nil_chk(s2_)) onNextWithId:@"2"];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyWithIOSClass_(NSString_class_())];
  [((id<OrgMockitoInOrder>) nil_chk(inOrder_)) verifyNoMoreInteractions];
}

- (void)testStartWithOnCompletedTwice {
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)), RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)), create_RxInternalOperatorsOperatorZipTest_$9_init()))) subscribeWithRxObserver:create_RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(observer)];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [inOrder verifyNoMoreInteractions];
}

- (void)testStart {
  RxObservable *os = [((RxObservable *) nil_chk(OBSERVABLE_OF_5_INTEGERS_)) zipWithWithRxObservable:OBSERVABLE_OF_5_INTEGERS_ withRxFunctionsFunc2:create_RxInternalOperatorsOperatorZipTest_$11_init()];
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk(os)) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(list)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(5, [list size]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"1-1", [list getWithInt:0]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"2-2", [list getWithInt:1]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"5-5", [list getWithInt:4]);
}

- (void)testStartAsync {
  RxObservable *os = [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([self ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:create_JavaUtilConcurrentCountDownLatch_initWithInt_(1)])) onBackpressureBuffer])) zipWithWithRxObservable:[((RxObservable *) nil_chk([self ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:create_JavaUtilConcurrentCountDownLatch_initWithInt_(1)])) onBackpressureBuffer] withRxFunctionsFunc2:create_RxInternalOperatorsOperatorZipTest_$13_init()])) takeWithInt:5];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(os)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(5, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"1-1", [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) getWithInt:0]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"2-2", [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) getWithInt:1]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"5-5", [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) getWithInt:4]);
}

- (void)testStartInfiniteAndFinite {
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  JavaUtilConcurrentCountDownLatch *infiniteObservable = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  RxObservable *os = [((RxObservable *) nil_chk(OBSERVABLE_OF_5_INTEGERS_)) zipWithWithRxObservable:[self ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:infiniteObservable] withRxFunctionsFunc2:create_RxInternalOperatorsOperatorZipTest_$14_init()];
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk(os)) subscribeWithRxObserver:create_RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(latch, list)];
  [latch awaitWithLong:1000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  if (![infiniteObservable awaitWithLong:2000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"didn't unsubscribe");
  }
  OrgJunitAssert_assertEqualsWithLong_withLong_(5, [list size]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"1-1", [list getWithInt:0]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"2-2", [list getWithInt:1]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"5-5", [list getWithInt:4]);
}

- (void)testEmitNull {
  RxObservable *oi = RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), nil, JavaLangInteger_valueOfWithInt_(3));
  RxObservable *os = RxObservable_justWithId_withId_withId_(@"a", @"b", nil);
  RxObservable *o = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(oi, os, create_RxInternalOperatorsOperatorZipTest_$16_init());
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(list)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [list size]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"1-a", [list getWithInt:0]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"null-b", [list getWithInt:1]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"3-null", [list getWithInt:2]);
}

- (void)testEmitMaterializedNotifications {
  RxObservable *oi = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) materialize];
  RxObservable *os = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(@"a", @"b", @"c"))) materialize];
  RxObservable *o = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(oi, os, create_RxInternalOperatorsOperatorZipTest_$18_init());
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(list)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(4, [list size]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"OnNext_1-OnNext_a", [list getWithInt:0]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"OnNext_2-OnNext_b", [list getWithInt:1]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"OnNext_3-OnNext_c", [list getWithInt:2]);
  OrgJunitAssert_assertEqualsWithId_withId_(@"OnCompleted_null-OnCompleted_null", [list getWithInt:3]);
}

- (void)testStartEmptyObservables {
  RxObservable *o = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable_empty(), RxObservable_empty(), create_RxInternalOperatorsOperatorZipTest_$20_init());
  JavaUtilArrayList *list = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(list)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [list size]);
}

- (void)testStartEmptyList {
  id invoked = create_NSObject_init();
  id<JavaUtilCollection> observables = JavaUtilCollections_emptyList();
  RxObservable *o = RxObservable_zipWithJavaLangIterable_withRxFunctionsFuncN_(observables, create_RxInternalOperatorsOperatorZipTest_$22_initWithId_(invoked));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
}

- (void)testZipEmptyArray {
  IOSObjectArray *ws = [IOSObjectArray arrayWithLength:0 type:RxObservable_class_()];
  RxObservable *o = RxObservable_zipWithRxObservableArray_withRxFunctionsFuncN_(ws, create_RxInternalOperatorsOperatorZipTest_$23_init());
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_emptyList()];
}

- (void)testZipArraySingleItem {
  JavaLangInteger *expected = JavaLangInteger_valueOfWithInt_(0);
  IOSObjectArray *ws = [IOSObjectArray arrayWithObjects:(id[]){ RxObservable_justWithId_(expected) } count:1 type:RxObservable_class_()];
  RxObservable *o = RxObservable_zipWithRxObservableArray_withRxFunctionsFuncN_(ws, create_RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(expected));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_singletonListWithId_(expected)];
}

- (void)testZipBigArray {
  jint size = 20;
  JavaLangInteger *expected = JavaLangInteger_valueOfWithInt_(0);
  IOSObjectArray *ws = [IOSObjectArray arrayWithLength:size type:RxObservable_class_()];
  for (jint i = 0, wsLength = ws->size_; i < wsLength; i++) {
    IOSObjectArray_Set(ws, i, RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(i)));
    JreBoxedPlusAssignInt(&expected, i);
  }
  JavaLangInteger *finalExpected = expected;
  RxObservable *o = RxObservable_zipWithRxObservableArray_withRxFunctionsFuncN_(ws, create_RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(finalExpected));
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:200 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilCollections_singletonListWithId_(expected)];
}

- (void)testStartEmptyListBlocking {
  id invoked = create_NSObject_init();
  id<JavaUtilCollection> observables = JavaUtilCollections_emptyList();
  RxObservable *o = RxObservable_zipWithJavaLangIterable_withRxFunctionsFuncN_(observables, create_RxInternalOperatorsOperatorZipTest_$26_initWithId_(invoked));
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(o)) toBlocking])) last];
}

- (void)testBackpressureSync {
  JavaUtilConcurrentAtomicAtomicInteger *generatedA = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *generatedB = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedA);
  RxObservable *o2 = RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedB);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, create_RxInternalOperatorsOperatorZipTest_$27_init()))) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  OrgJunitAssert_assertTrueWithBoolean_([generatedA get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
  OrgJunitAssert_assertTrueWithBoolean_([generatedB get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
}

- (void)testBackpressureAsync {
  JavaUtilConcurrentAtomicAtomicInteger *generatedA = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *generatedB = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedA))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObservable *o2 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedB))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, create_RxInternalOperatorsOperatorZipTest_$28_init()))) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  OrgJunitAssert_assertTrueWithBoolean_([generatedA get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
  OrgJunitAssert_assertTrueWithBoolean_([generatedB get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
}

- (void)testDownstreamBackpressureRequestsWithFiniteSyncObservables {
  JavaUtilConcurrentAtomicAtomicInteger *generatedA = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *generatedB = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedA))) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2];
  RxObservable *o2 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedB))) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, create_RxInternalOperatorsOperatorZipTest_$29_init()))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$I", @"Generated => A: ", [generatedA get], @" B: ", [generatedB get])];
  OrgJunitAssert_assertTrueWithBoolean_([generatedA get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
  OrgJunitAssert_assertTrueWithBoolean_([generatedB get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3));
}

- (void)testDownstreamBackpressureRequestsWithInfiniteAsyncObservables {
  JavaUtilConcurrentAtomicAtomicInteger *generatedA = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *generatedB = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedA))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObservable *o2 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedB))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, create_RxInternalOperatorsOperatorZipTest_$30_init()))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$I", @"Generated => A: ", [generatedA get], @" B: ", [generatedB get])];
  OrgJunitAssert_assertTrueWithBoolean_([generatedA get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 4));
  OrgJunitAssert_assertTrueWithBoolean_([generatedB get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 4));
}

- (void)testDownstreamBackpressureRequestsWithInfiniteSyncObservables {
  JavaUtilConcurrentAtomicAtomicInteger *generatedA = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *generatedB = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedA);
  RxObservable *o2 = RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generatedB);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(o1, o2, create_RxInternalOperatorsOperatorZipTest_$31_init()))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$I", @"Generated => A: ", [generatedA get], @" B: ", [generatedB get])];
  OrgJunitAssert_assertTrueWithBoolean_([generatedA get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 4));
  OrgJunitAssert_assertTrueWithBoolean_([generatedB get] < (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 4));
}

- (RxObservable *)createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)generated {
  return RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generated);
}

- (RxObservable *)OBSERVABLE_OF_5_INTEGERSWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)numEmitted {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(numEmitted));
}

- (RxObservable *)ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(latch));
}

- (void)testIssue1812 {
  RxObservable *zip1 = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(RxObservable_rangeWithInt_withInt_(0, 1026), RxObservable_rangeWithInt_withInt_(0, 1026), create_RxInternalOperatorsOperatorZipTest_$35_init());
  RxObservable *zip2 = RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(zip1, RxObservable_rangeWithInt_withInt_(0, 1026), create_RxInternalOperatorsOperatorZipTest_$36_init());
  id<JavaUtilList> expected = create_JavaUtilArrayList_init();
  for (jint i = 0; i < 1026; i++) {
    [expected addWithId:JavaLangInteger_valueOfWithInt_(i * 3)];
  }
  OrgJunitAssert_assertEqualsWithId_withId_(expected, [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(zip2)) toList])) toBlocking])) single]);
}

- (void)testUnboundedDownstreamOverRequesting {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 2))) zipWithWithRxObservable:RxObservable_rangeWithInt_withInt_(1, 2) withRxFunctionsFunc2:create_RxInternalOperatorsOperatorZipTest_$37_init()];
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorZipTest_$38_init();
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:ts];
  [ts assertNoErrors];
  [ts assertTerminalEvent];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(11), JavaLangInteger_valueOfWithInt_(22) } count:2 type:JavaLangInteger_class_()])];
}

- (void)testZipRace {
  jlong startTime = JavaLangSystem_currentTimeMillis();
  RxObservable *src = [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  jint i = 0;
  while (JavaLangSystem_currentTimeMillis() - startTime < 9000 && i++ < 100000) {
    RxInternalOperatorsOperatorZipTest_runZipRaceWithRxObservable_(self, src);
  }
}

- (void)runZipRaceWithRxObservable:(RxObservable *)src {
  RxInternalOperatorsOperatorZipTest_runZipRaceWithRxObservable_(self, src);
}

- (void)testZipRequest1 {
  RxObservable *src = [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorZipTest_$40_init();
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(src, src, create_RxInternalOperatorsOperatorZipTest_$41_init()))) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEventWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ts assertNoErrors];
  [ts assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(11) } count:1 type:JavaLangInteger_class_()])];
}

- (void)testZipObservableObservableBackpressure {
  IOSObjectArray *osArray = [IOSObjectArray arrayWithObjects:(id[]){ RxObservable_rangeWithInt_withInt_(0, 10), RxObservable_rangeWithInt_withInt_(0, 10) } count:2 type:RxObservable_class_()];
  RxObservable *os = RxObservable_fromWithNSObjectArray_(osArray);
  RxObservable *o1 = RxObservable_zipWithRxObservable_withRxFunctionsFuncN_(os, create_RxInternalOperatorsOperatorZipTest_$42_init());
  RxObserversTestSubscriber *sub1 = RxObserversTestSubscriber_createWithLong_(5);
  [((RxObservable *) nil_chk(o1)) subscribeWithRxSubscriber:sub1];
  [((RxObserversTestSubscriber *) nil_chk(sub1)) requestMoreWithLong:5];
  [sub1 assertValueCountWithInt:10];
  [sub1 assertNoErrors];
  [sub1 assertCompleted];
}

- (void)zip4 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc4_(source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$43_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"1111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)zip5 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc5_(source, source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$44_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"11111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)zip6 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc6_(source, source, source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$45_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"111111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)zip7 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc7_(source, source, source, source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$46_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"1111111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)zip8 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc8_(source, source, source, source, source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$47_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"11111111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)zip9 {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1));
  [((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxFunctionsFunc9_(source, source, source, source, source, source, source, source, source, create_RxInternalOperatorsOperatorZipTest_$48_init()))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"111111111"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(concat2Strings_);
  RELEASE_(s1_);
  RELEASE_(s2_);
  RELEASE_(zipped_);
  RELEASE_(observer_);
  RELEASE_(inOrder_);
  RELEASE_(zipr2_);
  RELEASE_(zipr3_);
  RELEASE_(OBSERVABLE_OF_5_INTEGERS_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x2, -1, -1, -1, 17, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x2, -1, -1, -1, 18, -1, -1 },
    { NULL, "LRxFunctionsFunc3;", 0x2, -1, -1, -1, 19, -1, -1 },
    { NULL, "LRxFunctionsFunc2;", 0x2, -1, -1, -1, 20, -1, -1 },
    { NULL, "LRxFunctionsFunc3;", 0x2, -1, -1, -1, 21, -1, -1 },
    { NULL, "LNSString;", 0xa, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 26, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 27, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 28, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 31, -1 },
    { NULL, "V", 0x1, -1, -1, 32, -1, 33, -1 },
    { NULL, "V", 0x1, -1, -1, 32, -1, 34, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 35, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 36, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 37, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 38, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 39, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 40, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 41, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 42, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 43, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 44, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 45, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 46, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 47, -1 },
    { NULL, "LRxObservable;", 0x2, 48, 49, -1, 50, -1, -1 },
    { NULL, "LRxObservable;", 0x0, 51, 49, -1, 50, -1, -1 },
    { NULL, "LRxObservable;", 0x0, 52, 53, -1, 54, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 55, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 56, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 57, -1 },
    { NULL, "V", 0x2, 58, 59, -1, 60, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 61, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 62, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 63, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 64, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 65, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 66, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 67, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 68, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setUp);
  methods[1].selector = @selector(testCollectionSizeDifferentThanFunction);
  methods[2].selector = @selector(testStartpingDifferentLengthObservableSequences1);
  methods[3].selector = @selector(testStartpingDifferentLengthObservableSequences2);
  methods[4].selector = @selector(testAggregatorSimple);
  methods[5].selector = @selector(testAggregatorDifferentSizedResultsWithOnComplete);
  methods[6].selector = @selector(testAggregateMultipleTypes);
  methods[7].selector = @selector(testAggregate3Types);
  methods[8].selector = @selector(testAggregatorsWithDifferentSizesAndTiming);
  methods[9].selector = @selector(testAggregatorError);
  methods[10].selector = @selector(testAggregatorUnsubscribe);
  methods[11].selector = @selector(testAggregatorEarlyCompletion);
  methods[12].selector = @selector(testStart2Types);
  methods[13].selector = @selector(testStart3Types);
  methods[14].selector = @selector(testOnNextExceptionInvokesOnError);
  methods[15].selector = @selector(testOnFirstCompletion);
  methods[16].selector = @selector(testOnErrorTermination);
  methods[17].selector = @selector(getConcat2Strings);
  methods[18].selector = @selector(getDivideZipr);
  methods[19].selector = @selector(getConcat3StringsZipr);
  methods[20].selector = @selector(getConcatStringIntegerZipr);
  methods[21].selector = @selector(getConcatStringIntegerIntArrayZipr);
  methods[22].selector = @selector(getStringValueWithId:);
  methods[23].selector = @selector(testFirstCompletesThenSecondInfinite);
  methods[24].selector = @selector(testSecondInfiniteThenFirstCompletes);
  methods[25].selector = @selector(testSecondCompletesThenFirstInfinite);
  methods[26].selector = @selector(testFirstInfiniteThenSecondCompletes);
  methods[27].selector = @selector(testFirstFails);
  methods[28].selector = @selector(testSecondFails);
  methods[29].selector = @selector(testStartWithOnCompletedTwice);
  methods[30].selector = @selector(testStart);
  methods[31].selector = @selector(testStartAsync);
  methods[32].selector = @selector(testStartInfiniteAndFinite);
  methods[33].selector = @selector(testEmitNull);
  methods[34].selector = @selector(testEmitMaterializedNotifications);
  methods[35].selector = @selector(testStartEmptyObservables);
  methods[36].selector = @selector(testStartEmptyList);
  methods[37].selector = @selector(testZipEmptyArray);
  methods[38].selector = @selector(testZipArraySingleItem);
  methods[39].selector = @selector(testZipBigArray);
  methods[40].selector = @selector(testStartEmptyListBlocking);
  methods[41].selector = @selector(testBackpressureSync);
  methods[42].selector = @selector(testBackpressureAsync);
  methods[43].selector = @selector(testDownstreamBackpressureRequestsWithFiniteSyncObservables);
  methods[44].selector = @selector(testDownstreamBackpressureRequestsWithInfiniteAsyncObservables);
  methods[45].selector = @selector(testDownstreamBackpressureRequestsWithInfiniteSyncObservables);
  methods[46].selector = @selector(createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:);
  methods[47].selector = @selector(OBSERVABLE_OF_5_INTEGERSWithJavaUtilConcurrentAtomicAtomicInteger:);
  methods[48].selector = @selector(ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:);
  methods[49].selector = @selector(testIssue1812);
  methods[50].selector = @selector(testUnboundedDownstreamOverRequesting);
  methods[51].selector = @selector(testZipRace);
  methods[52].selector = @selector(runZipRaceWithRxObservable:);
  methods[53].selector = @selector(testZipRequest1);
  methods[54].selector = @selector(testZipObservableObservableBackpressure);
  methods[55].selector = @selector(zip4);
  methods[56].selector = @selector(zip5);
  methods[57].selector = @selector(zip6);
  methods[58].selector = @selector(zip7);
  methods[59].selector = @selector(zip8);
  methods[60].selector = @selector(zip9);
  methods[61].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "concat2Strings_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x0, -1, -1, 69, -1 },
    { "s1_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x0, -1, -1, 70, -1 },
    { "s2_", "LRxSubjectsPublishSubject;", .constantValue.asLong = 0, 0x0, -1, -1, 70, -1 },
    { "zipped_", "LRxObservable;", .constantValue.asLong = 0, 0x0, -1, -1, 71, -1 },
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 72, -1 },
    { "inOrder_", "LOrgMockitoInOrder;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "zipr2_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x0, -1, -1, 73, -1 },
    { "zipr3_", "LRxFunctionsFunc3;", .constantValue.asLong = 0, 0x0, -1, -1, 74, -1 },
    { "OBSERVABLE_OF_5_INTEGERS_", "LRxObservable;", .constantValue.asLong = 0, 0x0, -1, -1, 75, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorZipTest__Annotations$0, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$1, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$2, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$3, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$4, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$5, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$6, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$7, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$8, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$9, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$10, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$11, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$12, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$13, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$14, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$15, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$16, "()Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;", "()Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;", "()Lrx/functions/Func3<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;", "()Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;>;", "()Lrx/functions/Func3<Ljava/lang/String;Ljava/lang/Integer;[LI;Ljava/lang/String;>;", "getStringValue", "LNSObject;", (void *)&RxInternalOperatorsOperatorZipTest__Annotations$17, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$18, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$19, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$20, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$21, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$22, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$23, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$24, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorZipTest__Annotations$25, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$26, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$27, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$28, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$29, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$30, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$31, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$32, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$33, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$34, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$35, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$36, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$37, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$38, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$39, "createInfiniteObservable", "LJavaUtilConcurrentAtomicAtomicInteger;", "(Ljava/util/concurrent/atomic/AtomicInteger;)Lrx/Observable<Ljava/lang/Integer;>;", "OBSERVABLE_OF_5_INTEGERS", "ASYNC_OBSERVABLE_OF_INFINITE_INTEGERS", "LJavaUtilConcurrentCountDownLatch;", "(Ljava/util/concurrent/CountDownLatch;)Lrx/Observable<Ljava/lang/Integer;>;", (void *)&RxInternalOperatorsOperatorZipTest__Annotations$40, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$41, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$42, "runZipRace", "LRxObservable;", "(Lrx/Observable<Ljava/lang/Integer;>;)V", (void *)&RxInternalOperatorsOperatorZipTest__Annotations$43, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$44, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$45, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$46, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$47, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$48, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$49, (void *)&RxInternalOperatorsOperatorZipTest__Annotations$50, "Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;", "Lrx/subjects/PublishSubject<Ljava/lang/String;>;", "Lrx/Observable<Ljava/lang/String;>;", "Lrx/Observer<Ljava/lang/String;>;", "Lrx/functions/Func2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;>;", "Lrx/functions/Func3<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;>;", "Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorZipTest_TestObservable;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest = { "OperatorZipTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 62, 9, -1, 76, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest;
}

@end

id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getConcat2Strings(RxInternalOperatorsOperatorZipTest *self) {
  return create_RxInternalOperatorsOperatorZipTest_$4_init();
}

id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getDivideZipr(RxInternalOperatorsOperatorZipTest *self) {
  return create_RxInternalOperatorsOperatorZipTest_$5_init();
}

id<RxFunctionsFunc3> RxInternalOperatorsOperatorZipTest_getConcat3StringsZipr(RxInternalOperatorsOperatorZipTest *self) {
  return create_RxInternalOperatorsOperatorZipTest_$6_init();
}

id<RxFunctionsFunc2> RxInternalOperatorsOperatorZipTest_getConcatStringIntegerZipr(RxInternalOperatorsOperatorZipTest *self) {
  return create_RxInternalOperatorsOperatorZipTest_$7_init();
}

id<RxFunctionsFunc3> RxInternalOperatorsOperatorZipTest_getConcatStringIntegerIntArrayZipr(RxInternalOperatorsOperatorZipTest *self) {
  return create_RxInternalOperatorsOperatorZipTest_$8_init();
}

NSString *RxInternalOperatorsOperatorZipTest_getStringValueWithId_(id o) {
  RxInternalOperatorsOperatorZipTest_initialize();
  if (o == nil) {
    return @"";
  }
  else {
    if ([o isKindOfClass:[IOSIntArray class]]) {
      return JavaUtilArrays_toStringWithIntArray_((IOSIntArray *) cast_chk(o, [IOSIntArray class]));
    }
    else {
      return NSString_valueOf_(o);
    }
  }
}

RxObservable *RxInternalOperatorsOperatorZipTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest *self, JavaUtilConcurrentAtomicAtomicInteger *generated) {
  return RxObservable_fromWithJavaLangIterable_(create_RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(generated));
}

void RxInternalOperatorsOperatorZipTest_runZipRaceWithRxObservable_(RxInternalOperatorsOperatorZipTest *self, RxObservable *src) {
  @autoreleasepool {
    jint value = [((JavaLangInteger *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_zipWithRxObservable_withRxObservable_withRxFunctionsFunc2_(src, src, create_RxInternalOperatorsOperatorZipTest_$39_init()))) toBlocking])) singleOrDefaultWithId:JavaLangInteger_valueOfWithInt_(0)])) intValue];
    OrgJunitAssert_assertEqualsWithLong_withLong_(11, value);
  }
}

void RxInternalOperatorsOperatorZipTest_init(RxInternalOperatorsOperatorZipTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->zipr2_, new_RxInternalOperatorsOperatorZipTest_$1_init());
  JreStrongAssignAndConsume(&self->zipr3_, new_RxInternalOperatorsOperatorZipTest_$2_init());
  JreStrongAssign(&self->OBSERVABLE_OF_5_INTEGERS_, [self OBSERVABLE_OF_5_INTEGERSWithJavaUtilConcurrentAtomicAtomicInteger:create_JavaUtilConcurrentAtomicAtomicInteger_init()]);
}

RxInternalOperatorsOperatorZipTest *new_RxInternalOperatorsOperatorZipTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest, init)
}

RxInternalOperatorsOperatorZipTest *create_RxInternalOperatorsOperatorZipTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$32() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$33() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$34() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaUtilNoSuchElementException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$35() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$36() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$37() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$38() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$39() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$40() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 30000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$41() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$42() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$43() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$44() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$45() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$46() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$47() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$48() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$49() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorZipTest__Annotations$50() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorZipTest)

@implementation RxInternalOperatorsOperatorZipTest_TestObservable

- (void)callWithId:(RxSubscriber *)observer {
  JreStrongAssign(&self->observer_, observer);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_TestObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/String;>;)V", "Lrx/Observer<-Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_TestObservable = { "TestObservable", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_TestObservable;
}

@end

void RxInternalOperatorsOperatorZipTest_TestObservable_init(RxInternalOperatorsOperatorZipTest_TestObservable *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_TestObservable *new_RxInternalOperatorsOperatorZipTest_TestObservable_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_TestObservable, init)
}

RxInternalOperatorsOperatorZipTest_TestObservable *create_RxInternalOperatorsOperatorZipTest_TestObservable_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_TestObservable, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorZipTest_TestObservable)

@implementation RxInternalOperatorsOperatorZipTest_$3

- (NSString *)callWithId:(NSString *)t1
                  withId:(NSString *)t2 {
  return JreStrcat("$C$", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LNSString;", "LRxInternalOperatorsOperatorZipTest;", "setUp", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$3;
}

@end

void RxInternalOperatorsOperatorZipTest_$3_init(RxInternalOperatorsOperatorZipTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$3 *new_RxInternalOperatorsOperatorZipTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$3, init)
}

RxInternalOperatorsOperatorZipTest_$3 *create_RxInternalOperatorsOperatorZipTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$3, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$1

- (NSString *)callWithId:(id)t1
                  withId:(id)t2 {
  return JreStrcat("@@", t1, t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$1;
}

@end

void RxInternalOperatorsOperatorZipTest_$1_init(RxInternalOperatorsOperatorZipTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$1 *new_RxInternalOperatorsOperatorZipTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$1, init)
}

RxInternalOperatorsOperatorZipTest_$1 *create_RxInternalOperatorsOperatorZipTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$1, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$2

- (NSString *)callWithId:(id)t1
                  withId:(id)t2
                  withId:(id)t3 {
  return JreStrcat("@@@", t1, t2, t3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "Ljava/lang/Object;Lrx/functions/Func3<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$2;
}

@end

void RxInternalOperatorsOperatorZipTest_$2_init(RxInternalOperatorsOperatorZipTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$2 *new_RxInternalOperatorsOperatorZipTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$2, init)
}

RxInternalOperatorsOperatorZipTest_$2 *create_RxInternalOperatorsOperatorZipTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$2, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$4

- (NSString *)callWithId:(NSString *)t1
                  withId:(NSString *)t2 {
  return JreStrcat("$C$", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LNSString;", "LRxInternalOperatorsOperatorZipTest;", "getConcat2Strings", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$4;
}

@end

void RxInternalOperatorsOperatorZipTest_$4_init(RxInternalOperatorsOperatorZipTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$4 *new_RxInternalOperatorsOperatorZipTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$4, init)
}

RxInternalOperatorsOperatorZipTest_$4 *create_RxInternalOperatorsOperatorZipTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$4, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$5

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i1)) intValue] / [((JavaLangInteger *) nil_chk(i2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "getDivideZipr", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$5;
}

@end

void RxInternalOperatorsOperatorZipTest_$5_init(RxInternalOperatorsOperatorZipTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$5 *new_RxInternalOperatorsOperatorZipTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$5, init)
}

RxInternalOperatorsOperatorZipTest_$5 *create_RxInternalOperatorsOperatorZipTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$5, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$6

- (NSString *)callWithId:(NSString *)a1
                  withId:(NSString *)a2
                  withId:(NSString *)a3 {
  if (a1 == nil) {
    a1 = @"";
  }
  if (a2 == nil) {
    a2 = @"";
  }
  if (a3 == nil) {
    a3 = @"";
  }
  return JreStrcat("$$$", a1, a2, a3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LNSString;LNSString;", "LRxInternalOperatorsOperatorZipTest;", "getConcat3StringsZipr", "Ljava/lang/Object;Lrx/functions/Func3<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$6;
}

@end

void RxInternalOperatorsOperatorZipTest_$6_init(RxInternalOperatorsOperatorZipTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$6 *new_RxInternalOperatorsOperatorZipTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$6, init)
}

RxInternalOperatorsOperatorZipTest_$6 *create_RxInternalOperatorsOperatorZipTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$6, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$7

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)i {
  return JreStrcat("$$", RxInternalOperatorsOperatorZipTest_getStringValueWithId_(s), RxInternalOperatorsOperatorZipTest_getStringValueWithId_(i));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "getConcatStringIntegerZipr", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$7;
}

@end

void RxInternalOperatorsOperatorZipTest_$7_init(RxInternalOperatorsOperatorZipTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$7 *new_RxInternalOperatorsOperatorZipTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$7, init)
}

RxInternalOperatorsOperatorZipTest_$7 *create_RxInternalOperatorsOperatorZipTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$7, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$8

- (NSString *)callWithId:(NSString *)s
                  withId:(JavaLangInteger *)i
                  withId:(IOSIntArray *)iArray {
  return JreStrcat("$$$", RxInternalOperatorsOperatorZipTest_getStringValueWithId_(s), RxInternalOperatorsOperatorZipTest_getStringValueWithId_(i), RxInternalOperatorsOperatorZipTest_getStringValueWithId_(iArray));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LJavaLangInteger;[I", "LRxInternalOperatorsOperatorZipTest;", "getConcatStringIntegerIntArrayZipr", "Ljava/lang/Object;Lrx/functions/Func3<Ljava/lang/String;Ljava/lang/Integer;[LI;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$8;
}

@end

void RxInternalOperatorsOperatorZipTest_$8_init(RxInternalOperatorsOperatorZipTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$8 *new_RxInternalOperatorsOperatorZipTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$8, init)
}

RxInternalOperatorsOperatorZipTest_$8 *create_RxInternalOperatorsOperatorZipTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$8, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$9

- (JavaLangInteger *)callWithId:(JavaLangInteger *)a
                         withId:(JavaLangInteger *)b {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(a)) intValue] + [((JavaLangInteger *) nil_chk(b)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testStartWithOnCompletedTwice", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$9;
}

@end

void RxInternalOperatorsOperatorZipTest_$9_init(RxInternalOperatorsOperatorZipTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$9 *new_RxInternalOperatorsOperatorZipTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$9, init)
}

RxInternalOperatorsOperatorZipTest_$9 *create_RxInternalOperatorsOperatorZipTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$9, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$10

- (void)onCompleted {
  [((id<RxObserver>) nil_chk(val$observer_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxObserver>) nil_chk(val$observer_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(JavaLangInteger *)args {
  [((id<RxObserver>) nil_chk(val$observer_)) onNextWithId:args];
}

- (instancetype)initWithRxObserver:(id<RxObserver>)capture$0 {
  RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LRxObserver;", "(Lrx/Observer<Ljava/lang/Integer;>;)V", "Lrx/Observer<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorZipTest;", "testStartWithOnCompletedTwice", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$10;
}

@end

void RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(RxInternalOperatorsOperatorZipTest_$10 *self, id<RxObserver> capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$10 *new_RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$10, initWithRxObserver_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$10 *create_RxInternalOperatorsOperatorZipTest_$10_initWithRxObserver_(id<RxObserver> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$10, initWithRxObserver_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$11

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b {
  return JreStrcat("@C@", a, '-', b);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testStart", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$11;
}

@end

void RxInternalOperatorsOperatorZipTest_$11_init(RxInternalOperatorsOperatorZipTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$11 *new_RxInternalOperatorsOperatorZipTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$11, init)
}

RxInternalOperatorsOperatorZipTest_$11 *create_RxInternalOperatorsOperatorZipTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$11, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$12

- (void)callWithId:(NSString *)s {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:s];
  [((JavaUtilArrayList *) nil_chk(val$list_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "testStart", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$12;
}

@end

void RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$12 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$12 *new_RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$12, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$12 *create_RxInternalOperatorsOperatorZipTest_$12_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$12, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$13

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b {
  return JreStrcat("@C@", a, '-', b);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testStartAsync", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$13;
}

@end

void RxInternalOperatorsOperatorZipTest_$13_init(RxInternalOperatorsOperatorZipTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$13 *new_RxInternalOperatorsOperatorZipTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$13, init)
}

RxInternalOperatorsOperatorZipTest_$13 *create_RxInternalOperatorsOperatorZipTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$13, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$14

- (NSString *)callWithId:(JavaLangInteger *)a
                  withId:(JavaLangInteger *)b {
  return JreStrcat("@C@", a, '-', b);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testStartInfiniteAndFinite", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$14;
}

@end

void RxInternalOperatorsOperatorZipTest_$14_init(RxInternalOperatorsOperatorZipTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$14 *new_RxInternalOperatorsOperatorZipTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$14, init)
}

RxInternalOperatorsOperatorZipTest_$14 *create_RxInternalOperatorsOperatorZipTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$14, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$15

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(NSString *)s {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:s];
  [((JavaUtilArrayList *) nil_chk(val$list_)) addWithId:s];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                   withJavaUtilArrayList:(JavaUtilArrayList *)capture$1 {
  RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$latch_);
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LJavaUtilConcurrentCountDownLatch;LJavaUtilArrayList;", "(Ljava/util/concurrent/CountDownLatch;Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "testStartInfiniteAndFinite", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$15;
}

@end

void RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$15 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1) {
  JreStrongAssign(&self->val$latch_, capture$0);
  JreStrongAssign(&self->val$list_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$15 *new_RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$15, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_, capture$0, capture$1)
}

RxInternalOperatorsOperatorZipTest_$15 *create_RxInternalOperatorsOperatorZipTest_$15_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilArrayList *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$15, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilArrayList_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorZipTest_$16

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(NSString *)t2 {
  return JreStrcat("@C$", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LNSString;", "LRxInternalOperatorsOperatorZipTest;", "testEmitNull", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$16 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$16;
}

@end

void RxInternalOperatorsOperatorZipTest_$16_init(RxInternalOperatorsOperatorZipTest_$16 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$16 *new_RxInternalOperatorsOperatorZipTest_$16_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$16, init)
}

RxInternalOperatorsOperatorZipTest_$16 *create_RxInternalOperatorsOperatorZipTest_$16_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$16, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$17

- (void)callWithId:(NSString *)s {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:s];
  [((JavaUtilArrayList *) nil_chk(val$list_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "testEmitNull", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$17;
}

@end

void RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$17 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$17 *new_RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$17, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$17 *create_RxInternalOperatorsOperatorZipTest_$17_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$17, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$18

- (NSString *)callWithId:(RxNotification *)t1
                  withId:(RxNotification *)t2 {
  return JreStrcat("@C@C@C$", [((RxNotification *) nil_chk(t1)) getKind], '_', [t1 getValue], '-', [((RxNotification *) nil_chk(t2)) getKind], '_', [t2 getValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;LRxNotification;", "(Lrx/Notification<Ljava/lang/Integer;>;Lrx/Notification<Ljava/lang/String;>;)Ljava/lang/String;", "LRxInternalOperatorsOperatorZipTest;", "testEmitMaterializedNotifications", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/Notification<Ljava/lang/Integer;>;Lrx/Notification<Ljava/lang/String;>;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$18;
}

@end

void RxInternalOperatorsOperatorZipTest_$18_init(RxInternalOperatorsOperatorZipTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$18 *new_RxInternalOperatorsOperatorZipTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$18, init)
}

RxInternalOperatorsOperatorZipTest_$18 *create_RxInternalOperatorsOperatorZipTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$18, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$19

- (void)callWithId:(NSString *)s {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:s];
  [((JavaUtilArrayList *) nil_chk(val$list_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "testEmitMaterializedNotifications", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$19;
}

@end

void RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$19 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$19 *new_RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$19, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$19 *create_RxInternalOperatorsOperatorZipTest_$19_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$19, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$20

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(NSString *)t2 {
  return JreStrcat("@C$", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LNSString;", "LRxInternalOperatorsOperatorZipTest;", "testStartEmptyObservables", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$20;
}

@end

void RxInternalOperatorsOperatorZipTest_$20_init(RxInternalOperatorsOperatorZipTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$20 *new_RxInternalOperatorsOperatorZipTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$20, init)
}

RxInternalOperatorsOperatorZipTest_$20 *create_RxInternalOperatorsOperatorZipTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$20, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$21

- (void)callWithId:(NSString *)s {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:s];
  [((JavaUtilArrayList *) nil_chk(val$list_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorZipTest;", "testStartEmptyObservables", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$21 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$21;
}

@end

void RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorZipTest_$21 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$21 *new_RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$21, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$21 *create_RxInternalOperatorsOperatorZipTest_$21_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$21, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$22

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"No argument should have been passed", 0, ((IOSObjectArray *) nil_chk(args))->size_);
  return val$invoked_;
}

- (instancetype)initWithId:(id)capture$0 {
  RxInternalOperatorsOperatorZipTest_$22_initWithId_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$invoked_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$invoked_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "testStartEmptyList", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$22;
}

@end

void RxInternalOperatorsOperatorZipTest_$22_initWithId_(RxInternalOperatorsOperatorZipTest_$22 *self, id capture$0) {
  JreStrongAssign(&self->val$invoked_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$22 *new_RxInternalOperatorsOperatorZipTest_$22_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$22, initWithId_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$22 *create_RxInternalOperatorsOperatorZipTest_$22_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$22, initWithId_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$23

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args {
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"No argument should have been passed", 0, ((IOSObjectArray *) nil_chk(args))->size_);
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "[LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "testZipEmptyArray", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$23 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$23;
}

@end

void RxInternalOperatorsOperatorZipTest_$23_init(RxInternalOperatorsOperatorZipTest_$23 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$23 *new_RxInternalOperatorsOperatorZipTest_$23_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$23, init)
}

RxInternalOperatorsOperatorZipTest_$23 *create_RxInternalOperatorsOperatorZipTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$23, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$24

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args {
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"One argument should have been passed", 1, ((IOSObjectArray *) nil_chk(args))->size_);
  return val$expected_;
}

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$expected_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(initWithJavaLangInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$expected_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testZipArraySingleItem", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$24 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$24;
}

@end

void RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(RxInternalOperatorsOperatorZipTest_$24 *self, JavaLangInteger *capture$0) {
  JreStrongAssign(&self->val$expected_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$24 *new_RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$24, initWithJavaLangInteger_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$24 *create_RxInternalOperatorsOperatorZipTest_$24_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$24, initWithJavaLangInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$25

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)args {
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"20 arguments should have been passed", 20, ((IOSObjectArray *) nil_chk(args))->size_);
  return val$finalExpected_;
}

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$finalExpected_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(initWithJavaLangInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$finalExpected_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testZipBigArray", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$25 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$25;
}

@end

void RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(RxInternalOperatorsOperatorZipTest_$25 *self, JavaLangInteger *capture$0) {
  JreStrongAssign(&self->val$finalExpected_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$25 *new_RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$25, initWithJavaLangInteger_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$25 *create_RxInternalOperatorsOperatorZipTest_$25_initWithJavaLangInteger_(JavaLangInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$25, initWithJavaLangInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$26

- (id)callWithNSObjectArray:(IOSObjectArray *)args {
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"No argument should have been passed", 0, ((IOSObjectArray *) nil_chk(args))->size_);
  return val$invoked_;
}

- (instancetype)initWithId:(id)capture$0 {
  RxInternalOperatorsOperatorZipTest_$26_initWithId_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$invoked_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$invoked_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "[LNSObject;", "LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "testStartEmptyListBlocking", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$26 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$26;
}

@end

void RxInternalOperatorsOperatorZipTest_$26_initWithId_(RxInternalOperatorsOperatorZipTest_$26 *self, id capture$0) {
  JreStrongAssign(&self->val$invoked_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$26 *new_RxInternalOperatorsOperatorZipTest_$26_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$26, initWithId_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$26 *create_RxInternalOperatorsOperatorZipTest_$26_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$26, initWithId_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$27

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2 {
  return JreStrcat("@C@", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testBackpressureSync", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$27 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$27;
}

@end

void RxInternalOperatorsOperatorZipTest_$27_init(RxInternalOperatorsOperatorZipTest_$27 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$27 *new_RxInternalOperatorsOperatorZipTest_$27_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$27, init)
}

RxInternalOperatorsOperatorZipTest_$27 *create_RxInternalOperatorsOperatorZipTest_$27_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$27, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$28

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2 {
  return JreStrcat("@C@", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testBackpressureAsync", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$28 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$28;
}

@end

void RxInternalOperatorsOperatorZipTest_$28_init(RxInternalOperatorsOperatorZipTest_$28 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$28 *new_RxInternalOperatorsOperatorZipTest_$28_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$28, init)
}

RxInternalOperatorsOperatorZipTest_$28 *create_RxInternalOperatorsOperatorZipTest_$28_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$28, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$29

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2 {
  return JreStrcat("@C@", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testDownstreamBackpressureRequestsWithFiniteSyncObservables", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$29 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$29;
}

@end

void RxInternalOperatorsOperatorZipTest_$29_init(RxInternalOperatorsOperatorZipTest_$29 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$29 *new_RxInternalOperatorsOperatorZipTest_$29_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$29, init)
}

RxInternalOperatorsOperatorZipTest_$29 *create_RxInternalOperatorsOperatorZipTest_$29_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$29, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$30

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2 {
  return JreStrcat("@C@", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$30_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testDownstreamBackpressureRequestsWithInfiniteAsyncObservables", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$30 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$30;
}

@end

void RxInternalOperatorsOperatorZipTest_$30_init(RxInternalOperatorsOperatorZipTest_$30 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$30 *new_RxInternalOperatorsOperatorZipTest_$30_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$30, init)
}

RxInternalOperatorsOperatorZipTest_$30 *create_RxInternalOperatorsOperatorZipTest_$30_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$30, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$31

- (NSString *)callWithId:(JavaLangInteger *)t1
                  withId:(JavaLangInteger *)t2 {
  return JreStrcat("@C@", t1, '-', t2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$31_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testDownstreamBackpressureRequestsWithInfiniteSyncObservables", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$31 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$31;
}

@end

void RxInternalOperatorsOperatorZipTest_$31_init(RxInternalOperatorsOperatorZipTest_$31 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$31 *new_RxInternalOperatorsOperatorZipTest_$31_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$31, init)
}

RxInternalOperatorsOperatorZipTest_$31 *create_RxInternalOperatorsOperatorZipTest_$31_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$31, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$32

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(self);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(val$generated_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$generated_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorZipTest;", "createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$32 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$32;
}

@end

void RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest_$32 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$generated_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$32 *new_RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$32, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$32 *create_RxInternalOperatorsOperatorZipTest_$32_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$32, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$32_$1

- (void)remove {
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(this$0_->val$generated_)) getAndIncrement]);
}

- (jboolean)hasNext {
  return true;
}

- (instancetype)initWithRxInternalOperatorsOperatorZipTest_$32:(RxInternalOperatorsOperatorZipTest_$32 *)outer$ {
  RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(self, outer$);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(remove);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(hasNext);
  methods[3].selector = @selector(initWithRxInternalOperatorsOperatorZipTest_$32:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorZipTest_$32;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorZipTest_$32;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$32_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$32_$1;
}

@end

void RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32_$1 *self, RxInternalOperatorsOperatorZipTest_$32 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$32_$1 *new_RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$32_$1, initWithRxInternalOperatorsOperatorZipTest_$32_, outer$)
}

RxInternalOperatorsOperatorZipTest_$32_$1 *create_RxInternalOperatorsOperatorZipTest_$32_$1_initWithRxInternalOperatorsOperatorZipTest_$32_(RxInternalOperatorsOperatorZipTest_$32 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$32_$1, initWithRxInternalOperatorsOperatorZipTest_$32_, outer$)
}

@implementation RxInternalOperatorsOperatorZipTest_$33

- (void)callWithId:(RxSubscriber *)o {
  for (jint i = 1; i <= 5; i++) {
    if ([((RxSubscriber *) nil_chk(o)) isUnsubscribed]) {
      break;
    }
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$numEmitted_)) incrementAndGet];
    [o onNextWithId:JavaLangInteger_valueOfWithInt_(i)];
    JavaLangThread_yield();
  }
  [((RxSubscriber *) nil_chk(o)) onCompleted];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$numEmitted_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$numEmitted_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorZipTest;", "OBSERVABLE_OF_5_INTEGERSWithJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$33 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$33;
}

@end

void RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorZipTest_$33 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$numEmitted_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$33 *new_RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$33, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$33 *create_RxInternalOperatorsOperatorZipTest_$33_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$33, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$34

- (void)callWithId:(RxSubscriber *)o {
  JavaLangThread *t = create_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(self, o));
  [t start];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$latch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorZipTest;", "ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$34 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$34;
}

@end

void RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorZipTest_$34 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$latch_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$34 *new_RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$34, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorZipTest_$34 *create_RxInternalOperatorsOperatorZipTest_$34_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$34, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$34_$1

- (void)run {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"-------> subscribe to infinite sequence"];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"Starting thread: ", JavaLangThread_currentThread())];
  jint i = 1;
  while (![((RxSubscriber *) nil_chk(val$o_)) isUnsubscribed]) {
    [val$o_ onNextWithId:JavaLangInteger_valueOfWithInt_(i++)];
    JavaLangThread_yield();
  }
  [val$o_ onCompleted];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(this$0_->val$latch_)) countDown];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"Ending thread: ", JavaLangThread_currentThread())];
}

- (instancetype)initWithRxInternalOperatorsOperatorZipTest_$34:(RxInternalOperatorsOperatorZipTest_$34 *)outer$
                                              withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$o_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorZipTest_$34:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorZipTest_$34;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$o_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorZipTest_$34;LRxSubscriber;", "(Lrx/internal/operators/OperatorZipTest$34;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorZipTest_$34;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$34_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$34_$1;
}

@end

void RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34_$1 *self, RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$o_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$34_$1 *new_RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$34_$1, initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorZipTest_$34_$1 *create_RxInternalOperatorsOperatorZipTest_$34_$1_initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_(RxInternalOperatorsOperatorZipTest_$34 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$34_$1, initWithRxInternalOperatorsOperatorZipTest_$34_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorZipTest_$35

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i1)) intValue] + [((JavaLangInteger *) nil_chk(i2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$35_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testIssue1812", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$35 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$35;
}

@end

void RxInternalOperatorsOperatorZipTest_$35_init(RxInternalOperatorsOperatorZipTest_$35 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$35 *new_RxInternalOperatorsOperatorZipTest_$35_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$35, init)
}

RxInternalOperatorsOperatorZipTest_$35 *create_RxInternalOperatorsOperatorZipTest_$35_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$35, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$36

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i1
                         withId:(JavaLangInteger *)i2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i1)) intValue] + [((JavaLangInteger *) nil_chk(i2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$36_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testIssue1812", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$36 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$36;
}

@end

void RxInternalOperatorsOperatorZipTest_$36_init(RxInternalOperatorsOperatorZipTest_$36 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$36 *new_RxInternalOperatorsOperatorZipTest_$36_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$36, init)
}

RxInternalOperatorsOperatorZipTest_$36 *create_RxInternalOperatorsOperatorZipTest_$36_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$36, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$37

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + 10 * [((JavaLangInteger *) nil_chk(t2)) intValue]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$37_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testUnboundedDownstreamOverRequesting", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$37 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$37;
}

@end

void RxInternalOperatorsOperatorZipTest_$37_init(RxInternalOperatorsOperatorZipTest_$37 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$37 *new_RxInternalOperatorsOperatorZipTest_$37_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$37, init)
}

RxInternalOperatorsOperatorZipTest_$37 *create_RxInternalOperatorsOperatorZipTest_$37_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$37, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$38

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
  [self requestMoreWithLong:5];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$38_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOperatorZipTest;", "testUnboundedDownstreamOverRequesting", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$38 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$38;
}

@end

void RxInternalOperatorsOperatorZipTest_$38_init(RxInternalOperatorsOperatorZipTest_$38 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorZipTest_$38 *new_RxInternalOperatorsOperatorZipTest_$38_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$38, init)
}

RxInternalOperatorsOperatorZipTest_$38 *create_RxInternalOperatorsOperatorZipTest_$38_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$38, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$39

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue] * 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$39_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "runZipRaceWithRxObservable:", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$39 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$39;
}

@end

void RxInternalOperatorsOperatorZipTest_$39_init(RxInternalOperatorsOperatorZipTest_$39 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$39 *new_RxInternalOperatorsOperatorZipTest_$39_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$39, init)
}

RxInternalOperatorsOperatorZipTest_$39 *create_RxInternalOperatorsOperatorZipTest_$39_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$39, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$40

- (void)onStart {
  [self requestMoreWithLong:1];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$40_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorZipTest;", "testZipRequest1", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$40 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$40;
}

@end

void RxInternalOperatorsOperatorZipTest_$40_init(RxInternalOperatorsOperatorZipTest_$40 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorZipTest_$40 *new_RxInternalOperatorsOperatorZipTest_$40_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$40, init)
}

RxInternalOperatorsOperatorZipTest_$40 *create_RxInternalOperatorsOperatorZipTest_$40_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$40, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$41

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1
                         withId:(JavaLangInteger *)t2 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] + [((JavaLangInteger *) nil_chk(t2)) intValue] * 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$41_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;LJavaLangInteger;", "LRxInternalOperatorsOperatorZipTest;", "testZipRequest1", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$41 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$41;
}

@end

void RxInternalOperatorsOperatorZipTest_$41_init(RxInternalOperatorsOperatorZipTest_$41 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$41 *new_RxInternalOperatorsOperatorZipTest_$41_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$41, init)
}

RxInternalOperatorsOperatorZipTest_$41 *create_RxInternalOperatorsOperatorZipTest_$41_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$41, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$42

- (JavaLangInteger *)callWithNSObjectArray:(IOSObjectArray *)a {
  return JavaLangInteger_valueOfWithInt_(0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$42_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithNSObjectArray:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "[LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "testZipObservableObservableBackpressure", "Ljava/lang/Object;Lrx/functions/FuncN<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$42 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$42;
}

@end

void RxInternalOperatorsOperatorZipTest_$42_init(RxInternalOperatorsOperatorZipTest_$42 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$42 *new_RxInternalOperatorsOperatorZipTest_$42_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$42, init)
}

RxInternalOperatorsOperatorZipTest_$42 *create_RxInternalOperatorsOperatorZipTest_$42_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$42, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$43

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4 {
  return JreStrcat("@@@@", t1, t2, t3, t4);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$43_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip4" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$43 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$43;
}

@end

void RxInternalOperatorsOperatorZipTest_$43_init(RxInternalOperatorsOperatorZipTest_$43 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$43 *new_RxInternalOperatorsOperatorZipTest_$43_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$43, init)
}

RxInternalOperatorsOperatorZipTest_$43 *create_RxInternalOperatorsOperatorZipTest_$43_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$43, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$44

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5 {
  return JreStrcat("@@@@@", t1, t2, t3, t4, t5);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$44_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip5" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$44 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$44;
}

@end

void RxInternalOperatorsOperatorZipTest_$44_init(RxInternalOperatorsOperatorZipTest_$44 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$44 *new_RxInternalOperatorsOperatorZipTest_$44_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$44, init)
}

RxInternalOperatorsOperatorZipTest_$44 *create_RxInternalOperatorsOperatorZipTest_$44_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$44, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$45

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6 {
  return JreStrcat("@@@@@@", t1, t2, t3, t4, t5, t6);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$45_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip6" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$45 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$45;
}

@end

void RxInternalOperatorsOperatorZipTest_$45_init(RxInternalOperatorsOperatorZipTest_$45 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$45 *new_RxInternalOperatorsOperatorZipTest_$45_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$45, init)
}

RxInternalOperatorsOperatorZipTest_$45 *create_RxInternalOperatorsOperatorZipTest_$45_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$45, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$46

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7 {
  return JreStrcat("@@@@@@@", t1, t2, t3, t4, t5, t6, t7);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$46_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip7" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$46 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$46;
}

@end

void RxInternalOperatorsOperatorZipTest_$46_init(RxInternalOperatorsOperatorZipTest_$46 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$46 *new_RxInternalOperatorsOperatorZipTest_$46_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$46, init)
}

RxInternalOperatorsOperatorZipTest_$46 *create_RxInternalOperatorsOperatorZipTest_$46_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$46, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$47

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7
          withId:(id)t8 {
  return JreStrcat("@@@@@@@@", t1, t2, t3, t4, t5, t6, t7, t8);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$47_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip8" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$47 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$47;
}

@end

void RxInternalOperatorsOperatorZipTest_$47_init(RxInternalOperatorsOperatorZipTest_$47 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$47 *new_RxInternalOperatorsOperatorZipTest_$47_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$47, init)
}

RxInternalOperatorsOperatorZipTest_$47 *create_RxInternalOperatorsOperatorZipTest_$47_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$47, init)
}

@implementation RxInternalOperatorsOperatorZipTest_$48

- (id)callWithId:(id)t1
          withId:(id)t2
          withId:(id)t3
          withId:(id)t4
          withId:(id)t5
          withId:(id)t6
          withId:(id)t7
          withId:(id)t8
          withId:(id)t9 {
  return JreStrcat("@@@@@@@@@", t1, t2, t3, t4, t5, t6, t7, t8, t9);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorZipTest_$48_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:withId:withId:withId:withId:withId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;LNSObject;", "LRxInternalOperatorsOperatorZipTest;", "zip9" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorZipTest_$48 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_RxInternalOperatorsOperatorZipTest_$48;
}

@end

void RxInternalOperatorsOperatorZipTest_$48_init(RxInternalOperatorsOperatorZipTest_$48 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorZipTest_$48 *new_RxInternalOperatorsOperatorZipTest_$48_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorZipTest_$48, init)
}

RxInternalOperatorsOperatorZipTest_$48 *create_RxInternalOperatorsOperatorZipTest_$48_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorZipTest_$48, init)
}
