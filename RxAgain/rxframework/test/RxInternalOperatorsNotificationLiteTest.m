//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/NotificationLiteTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxInternalOperatorsNotificationLite.h"
#include "RxInternalOperatorsNotificationLiteTest.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsNotificationLiteTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsNotificationLiteTest__Annotations$1();

@implementation RxInternalOperatorsNotificationLiteTest

- (void)testComplete {
  id n = RxInternalOperatorsNotificationLite_nextWithId_(@"Hello");
  id c = RxInternalOperatorsNotificationLite_completed();
  OrgJunitAssert_assertTrueWithBoolean_(RxInternalOperatorsNotificationLite_isCompletedWithId_(c));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isCompletedWithId_(n));
  OrgJunitAssert_assertEqualsWithId_withId_(@"Hello", RxInternalOperatorsNotificationLite_getValueWithId_(n));
}

- (void)testValueKind {
  OrgJunitAssert_assertTrueWithBoolean_(RxInternalOperatorsNotificationLite_isNullWithId_(RxInternalOperatorsNotificationLite_nextWithId_(nil)));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNullWithId_(RxInternalOperatorsNotificationLite_nextWithId_(JavaLangInteger_valueOfWithInt_(1))));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNullWithId_(RxInternalOperatorsNotificationLite_errorWithNSException_(create_RxExceptionsTestException_init())));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNullWithId_(RxInternalOperatorsNotificationLite_completed()));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNullWithId_(nil));
  OrgJunitAssert_assertTrueWithBoolean_(RxInternalOperatorsNotificationLite_isNextWithId_(RxInternalOperatorsNotificationLite_nextWithId_(nil)));
  OrgJunitAssert_assertTrueWithBoolean_(RxInternalOperatorsNotificationLite_isNextWithId_(RxInternalOperatorsNotificationLite_nextWithId_(JavaLangInteger_valueOfWithInt_(1))));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNextWithId_(RxInternalOperatorsNotificationLite_completed()));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNextWithId_(nil));
  OrgJunitAssert_assertFalseWithBoolean_(RxInternalOperatorsNotificationLite_isNextWithId_(RxInternalOperatorsNotificationLite_errorWithNSException_(create_RxExceptionsTestException_init())));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsNotificationLiteTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testComplete);
  methods[1].selector = @selector(testValueKind);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsNotificationLiteTest__Annotations$0, (void *)&RxInternalOperatorsNotificationLiteTest__Annotations$1 };
  static const J2ObjcClassInfo _RxInternalOperatorsNotificationLiteTest = { "NotificationLiteTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsNotificationLiteTest;
}

@end

void RxInternalOperatorsNotificationLiteTest_init(RxInternalOperatorsNotificationLiteTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsNotificationLiteTest *new_RxInternalOperatorsNotificationLiteTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsNotificationLiteTest, init)
}

RxInternalOperatorsNotificationLiteTest *create_RxInternalOperatorsNotificationLiteTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsNotificationLiteTest, init)
}

IOSObjectArray *RxInternalOperatorsNotificationLiteTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsNotificationLiteTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsNotificationLiteTest)
