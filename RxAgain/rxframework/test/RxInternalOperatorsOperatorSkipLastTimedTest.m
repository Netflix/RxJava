//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorSkipLastTimedTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxInternalOperatorsOperatorSkipLastTimedTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubjectsPublishSubject.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Test.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$3();

@implementation RxInternalOperatorsOperatorSkipLastTimedTest

- (void)testSkipLastTimed {
  RxSchedulersTestScheduler *scheduler = create_RxSchedulersTestScheduler_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) skipLastWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [scheduler advanceTimeByWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(5)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(6)];
  [scheduler advanceTimeByWithLong:950 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [source onCompleted];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(4)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(5)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangInteger_valueOfWithInt_(6)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testSkipLastTimedErrorBeforeTime {
  RxSchedulersTestScheduler *scheduler = create_RxSchedulersTestScheduler_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) skipLastWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [source onErrorWithNSException:create_RxExceptionsTestException_init()];
  [scheduler advanceTimeByWithLong:1050 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
}

- (void)testSkipLastTimedCompleteBeforeTime {
  RxSchedulersTestScheduler *scheduler = create_RxSchedulersTestScheduler_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) skipLastWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS) withRxScheduler:scheduler];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [scheduler advanceTimeByWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [source onCompleted];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onCompleted];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testSkipLastTimedWhenAllElementsAreValid {
  RxSchedulersTestScheduler *scheduler = create_RxSchedulersTestScheduler_init();
  RxSubjectsPublishSubject *source = RxSubjectsPublishSubject_create();
  RxObservable *result = [((RxSubjectsPublishSubject *) nil_chk(source)) skipLastWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS) withRxScheduler:scheduler];
  id<RxObserver> o = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(result)) subscribeWithRxObserver:o];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [source onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [scheduler advanceTimeByWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [source onCompleted];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ o } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:o])) onCompleted];
  [inOrder verifyNoMoreInteractions];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSkipLastTimedTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testSkipLastTimed);
  methods[1].selector = @selector(testSkipLastTimedErrorBeforeTime);
  methods[2].selector = @selector(testSkipLastTimedCompleteBeforeTime);
  methods[3].selector = @selector(testSkipLastTimedWhenAllElementsAreValid);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$0, (void *)&RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$1, (void *)&RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$2, (void *)&RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$3 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSkipLastTimedTest = { "OperatorSkipLastTimedTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorSkipLastTimedTest;
}

@end

void RxInternalOperatorsOperatorSkipLastTimedTest_init(RxInternalOperatorsOperatorSkipLastTimedTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSkipLastTimedTest *new_RxInternalOperatorsOperatorSkipLastTimedTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSkipLastTimedTest, init)
}

RxInternalOperatorsOperatorSkipLastTimedTest *create_RxInternalOperatorsOperatorSkipLastTimedTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSkipLastTimedTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSkipLastTimedTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSkipLastTimedTest)
