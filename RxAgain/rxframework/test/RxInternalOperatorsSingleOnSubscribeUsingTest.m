//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/SingleOnSubscribeUsingTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsSingleOnSubscribeUsingTest.h"
#include "RxObserver.h"
#include "RxSingle.h"
#include "RxSingleSubscriber.h"
#include "RxSinglesBlockingSingle.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/stubbing/OngoingStubbing.h"

@interface RxInternalOperatorsSingleOnSubscribeUsingTest () {
 @public
  id<RxFunctionsAction1> disposeSubscription_;
}

- (void)performTestUsingWithBoolean:(jboolean)disposeEagerly;

- (void)performTestUsingWithSubscribingTwiceWithBoolean:(jboolean)disposeEagerly;

- (void)performTestUsingWithResourceFactoryErrorWithBoolean:(jboolean)disposeEagerly;

- (void)performTestUsingWithSingleFactoryErrorWithBoolean:(jboolean)disposeEagerly;

- (void)performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean:(jboolean)disposeEagerly;

+ (id<RxFunctionsAction0>)createUnsubActionWithJavaUtilList:(id<JavaUtilList>)events;

+ (id<RxFunctionsAction1>)createOnErrorActionWithJavaUtilList:(id<JavaUtilList>)events;

+ (id<RxFunctionsFunc0>)createResourceFactoryWithJavaUtilList:(id<JavaUtilList>)events;

+ (id<RxFunctionsAction1>)createOnSuccessActionWithJavaUtilList:(id<JavaUtilList>)events;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest, disposeSubscription_, id<RxFunctionsAction1>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly);

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSubscribingTwiceWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly);

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithResourceFactoryErrorWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly);

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly);

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly);

__attribute__((unused)) static id<RxFunctionsAction0> RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(id<JavaUtilList> events);

__attribute__((unused)) static id<RxFunctionsAction1> RxInternalOperatorsSingleOnSubscribeUsingTest_createOnErrorActionWithJavaUtilList_(id<JavaUtilList> events);

__attribute__((unused)) static id<RxFunctionsFunc0> RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(id<JavaUtilList> events);

__attribute__((unused)) static id<RxFunctionsAction1> RxInternalOperatorsSingleOnSubscribeUsingTest_createOnSuccessActionWithJavaUtilList_(id<JavaUtilList> events);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$16();

@protocol RxInternalOperatorsSingleOnSubscribeUsingTest_Resource < JavaObject >

- (NSString *)getTextFromWeb;

- (void)dispose;

@end

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_Resource : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource)

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource)

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction : NSObject < RxFunctionsAction1 >

- (void)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)r;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *new_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction)

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$1 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(id<RxSubscription>)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$1)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$2 : NSObject < RxFunctionsFunc0 > {
 @public
  id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> val$resource_;
}

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call;

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$2, val$resource_, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$3 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$3)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$4 : NSObject < RxFunctionsFunc0 >

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$4)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 : NSObject < RxInternalOperatorsSingleOnSubscribeUsingTest_Resource > {
 @public
  jboolean first_;
}

- (NSString *)getTextFromWeb;

- (void)dispose;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$5 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$5)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$6 : NSObject < RxFunctionsFunc0 >

- (id<RxSubscription>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$6)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$7 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxSubscription>)subscription;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$7)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$8 : NSObject < RxFunctionsFunc0 > {
 @public
  id<RxFunctionsAction0> val$unsubscribe_;
}

- (id<RxSubscription>)call;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$8, val$unsubscribe_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$9 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxSubscription>)subscription;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$9)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$10 : NSObject < RxFunctionsFunc0 > {
 @public
  id<RxFunctionsAction0> val$unsubscribe_;
}

- (id<RxSubscription>)call;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$10, val$unsubscribe_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$11 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxSubscription>)subscription;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$11)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 : NSObject < RxSingle_OnSubscribe >

- (void)callWithId:(RxSingleSubscriber *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$12 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$12)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$13 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$13)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$14 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$14)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$15 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$15)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$16 : NSObject < RxFunctionsAction0 > {
 @public
  id<JavaUtilList> val$events_;
}

- (void)call;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$16, val$events_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$17 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$events_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$17, val$events_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$18 : NSObject < RxFunctionsFunc0 > {
 @public
  id<JavaUtilList> val$events_;
}

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$18)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$18, val$events_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 : NSObject < RxInternalOperatorsSingleOnSubscribeUsingTest_Resource > {
 @public
  RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *this$0_;
}

- (NSString *)getTextFromWeb;

- (void)dispose;

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18:(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1, this$0_, RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *self, RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$19 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$events_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$19)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$19, val$events_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$20 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$20)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init();

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$21 : NSObject < RxFunctionsFunc0 > {
 @public
  id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> val$resource_;
}

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call;

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$21)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$21, val$resource_, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$22 : NSObject < RxFunctionsFunc0 > {
 @public
  id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> val$resource_;
}

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call;

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsingTest_$22, val$resource_, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0);

@interface RxInternalOperatorsSingleOnSubscribeUsingTest_$23 : NSObject < RxFunctionsFunc1 >

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsingTest_$23)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *self);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init();

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest

- (void)nonEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithBoolean_(self, false);
}

- (void)eagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithBoolean_(self, true);
}

- (void)performTestUsingWithBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithBoolean_(self, disposeEagerly);
}

- (void)withSubscribingTwice {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSubscribingTwiceWithBoolean_(self, false);
}

- (void)withSubscribingTwiceDisposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSubscribingTwiceWithBoolean_(self, true);
}

- (void)performTestUsingWithSubscribingTwiceWithBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSubscribingTwiceWithBoolean_(self, disposeEagerly);
}

- (void)withResourceFactoryError {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithResourceFactoryErrorWithBoolean_(self, false);
}

- (void)withResourceFactoryErrorDisposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithResourceFactoryErrorWithBoolean_(self, true);
}

- (void)performTestUsingWithResourceFactoryErrorWithBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithResourceFactoryErrorWithBoolean_(self, disposeEagerly);
}

- (void)withSingleFactoryError {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorWithBoolean_(self, false);
}

- (void)withSingleFactoryErrorDisposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorWithBoolean_(self, true);
}

- (void)performTestUsingWithSingleFactoryErrorWithBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorWithBoolean_(self, disposeEagerly);
}

- (void)withSingleFactoryErrorInOnSubscribe {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean_(self, false);
}

- (void)withSingleFactoryErrorInOnSubscribeDisposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean_(self, true);
}

- (void)performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean_(self, disposeEagerly);
}

- (void)disposesEagerlyBeforeCompletion {
  id<JavaUtilList> events = create_JavaUtilArrayList_init();
  id<RxFunctionsFunc0> resourceFactory = RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(events);
  id<RxFunctionsAction1> completion = RxInternalOperatorsSingleOnSubscribeUsingTest_createOnSuccessActionWithJavaUtilList_(events);
  id<RxFunctionsAction0> unsub = RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(events);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), true))) doOnUnsubscribeWithRxFunctionsAction0:unsub])) doOnSuccessWithRxFunctionsAction1:completion];
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"disposed", @"completed" } count:2 type:NSString_class_()]), events);
}

- (void)doesNotDisposesEagerlyBeforeCompletion {
  id<JavaUtilList> events = create_JavaUtilArrayList_init();
  id<RxFunctionsFunc0> resourceFactory = RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(events);
  id<RxFunctionsAction1> completion = RxInternalOperatorsSingleOnSubscribeUsingTest_createOnSuccessActionWithJavaUtilList_(events);
  id<RxFunctionsAction0> unsub = RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(events);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), false))) doOnUnsubscribeWithRxFunctionsAction0:unsub])) doOnSuccessWithRxFunctionsAction1:completion];
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"completed", @"disposed" } count:2 type:NSString_class_()]), events);
}

- (void)disposesEagerlyBeforeError {
  id<JavaUtilList> events = create_JavaUtilArrayList_init();
  id<RxFunctionsFunc0> resourceFactory = RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(events);
  id<RxFunctionsAction1> onError = RxInternalOperatorsSingleOnSubscribeUsingTest_createOnErrorActionWithJavaUtilList_(events);
  id<RxFunctionsAction0> unsub = RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(events);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), true))) doOnUnsubscribeWithRxFunctionsAction0:unsub])) doOnErrorWithRxFunctionsAction1:onError];
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"disposed", @"error" } count:2 type:NSString_class_()]), events);
}

- (void)doesNotDisposesEagerlyBeforeError {
  id<JavaUtilList> events = create_JavaUtilArrayList_init();
  id<RxFunctionsFunc0> resourceFactory = RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(events);
  id<RxFunctionsAction1> onError = RxInternalOperatorsSingleOnSubscribeUsingTest_createOnErrorActionWithJavaUtilList_(events);
  id<RxFunctionsAction0> unsub = RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(events);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = [((RxSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), false))) doOnUnsubscribeWithRxFunctionsAction0:unsub])) doOnErrorWithRxFunctionsAction1:onError];
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"error", @"disposed" } count:2 type:NSString_class_()]), events);
}

+ (id<RxFunctionsAction0>)createUnsubActionWithJavaUtilList:(id<JavaUtilList>)events {
  return RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(events);
}

+ (id<RxFunctionsAction1>)createOnErrorActionWithJavaUtilList:(id<JavaUtilList>)events {
  return RxInternalOperatorsSingleOnSubscribeUsingTest_createOnErrorActionWithJavaUtilList_(events);
}

+ (id<RxFunctionsFunc0>)createResourceFactoryWithJavaUtilList:(id<JavaUtilList>)events {
  return RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(events);
}

+ (id<RxFunctionsAction1>)createOnSuccessActionWithJavaUtilList:(id<JavaUtilList>)events {
  return RxInternalOperatorsSingleOnSubscribeUsingTest_createOnSuccessActionWithJavaUtilList_(events);
}

- (void)nullResourceFactory {
  @try {
    id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> resource = OrgMockitoMockito_mockWithIOSClass_(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource_class_());
    [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]))) thenReturnWithId:@"Hello world!"];
    id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init();
    RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(nil, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), false);
    OrgJunitAssert_failWithNSString_(@"Failed to throw NullPointerException");
  }
  @catch (JavaLangNullPointerException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"resourceFactory is null", [((JavaLangNullPointerException *) nil_chk(ex)) getMessage]);
  }
}

- (void)nullSingeFactory {
  @try {
    id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> resource = OrgMockitoMockito_mockWithIOSClass_(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource_class_());
    [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]))) thenReturnWithId:@"Hello world!"];
    id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(resource);
    RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, nil, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), false);
    OrgJunitAssert_failWithNSString_(@"Failed to throw NullPointerException");
  }
  @catch (JavaLangNullPointerException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"singleFactory is null", [((JavaLangNullPointerException *) nil_chk(ex)) getMessage]);
  }
}

- (void)nullDisposeAction {
  @try {
    id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> resource = OrgMockitoMockito_mockWithIOSClass_(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource_class_());
    [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]))) thenReturnWithId:@"Hello world!"];
    id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(resource);
    id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init();
    RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, nil, false);
    OrgJunitAssert_failWithNSString_(@"Failed to throw NullPointerException");
  }
  @catch (JavaLangNullPointerException *ex) {
    OrgJunitAssert_assertEqualsWithId_withId_(@"disposeAction is null", [((JavaLangNullPointerException *) nil_chk(ex)) getMessage]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(disposeSubscription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x2, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x2, 9, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x2, 12, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x2, 15, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "LRxFunctionsAction0;", 0xa, 20, 21, -1, 22, -1, -1 },
    { NULL, "LRxFunctionsAction1;", 0xa, 23, 21, -1, 24, -1, -1 },
    { NULL, "LRxFunctionsFunc0;", 0xa, 25, 21, -1, 26, -1, -1 },
    { NULL, "LRxFunctionsAction1;", 0xa, 27, 21, -1, 28, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 31, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(nonEagerly);
  methods[1].selector = @selector(eagerly);
  methods[2].selector = @selector(performTestUsingWithBoolean:);
  methods[3].selector = @selector(withSubscribingTwice);
  methods[4].selector = @selector(withSubscribingTwiceDisposeEagerly);
  methods[5].selector = @selector(performTestUsingWithSubscribingTwiceWithBoolean:);
  methods[6].selector = @selector(withResourceFactoryError);
  methods[7].selector = @selector(withResourceFactoryErrorDisposeEagerly);
  methods[8].selector = @selector(performTestUsingWithResourceFactoryErrorWithBoolean:);
  methods[9].selector = @selector(withSingleFactoryError);
  methods[10].selector = @selector(withSingleFactoryErrorDisposeEagerly);
  methods[11].selector = @selector(performTestUsingWithSingleFactoryErrorWithBoolean:);
  methods[12].selector = @selector(withSingleFactoryErrorInOnSubscribe);
  methods[13].selector = @selector(withSingleFactoryErrorInOnSubscribeDisposeEagerly);
  methods[14].selector = @selector(performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean:);
  methods[15].selector = @selector(disposesEagerlyBeforeCompletion);
  methods[16].selector = @selector(doesNotDisposesEagerlyBeforeCompletion);
  methods[17].selector = @selector(disposesEagerlyBeforeError);
  methods[18].selector = @selector(doesNotDisposesEagerlyBeforeError);
  methods[19].selector = @selector(createUnsubActionWithJavaUtilList:);
  methods[20].selector = @selector(createOnErrorActionWithJavaUtilList:);
  methods[21].selector = @selector(createResourceFactoryWithJavaUtilList:);
  methods[22].selector = @selector(createOnSuccessActionWithJavaUtilList:);
  methods[23].selector = @selector(nullResourceFactory);
  methods[24].selector = @selector(nullSingeFactory);
  methods[25].selector = @selector(nullDisposeAction);
  methods[26].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "disposeSubscription_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x12, -1, -1, 32, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$0, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$1, "performTestUsing", "Z", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$2, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$3, "performTestUsingWithSubscribingTwice", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$4, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$5, "performTestUsingWithResourceFactoryError", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$6, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$7, "performTestUsingWithSingleFactoryError", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$8, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$9, "performTestUsingWithSingleFactoryErrorInOnSubscribe", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$10, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$11, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$12, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$13, "createUnsubAction", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)Lrx/functions/Action0;", "createOnErrorAction", "(Ljava/util/List<Ljava/lang/String;>;)Lrx/functions/Action1<Ljava/lang/Throwable;>;", "createResourceFactory", "(Ljava/util/List<Ljava/lang/String;>;)Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;", "createOnSuccessAction", "(Ljava/util/List<Ljava/lang/String;>;)Lrx/functions/Action1<Ljava/lang/String;>;", (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$14, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$15, (void *)&RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$16, "Lrx/functions/Action1<Lrx/Subscription;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;LRxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest = { "SingleOnSubscribeUsingTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 27, 1, -1, 33, -1, -1, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly) {
  id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> resource = OrgMockitoMockito_mockWithIOSClass_(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource_class_());
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]))) thenReturnWithId:@"Hello world!"];
  id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(resource);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), disposeEagerly);
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer])) onNextWithId:@"Hello world!"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer])) onCompleted];
  [inOrder verifyNoMoreInteractions];
  [((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(OrgMockitoMockito_verifyWithId_(resource))) dispose];
}

void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSubscribingTwiceWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly) {
  id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init();
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  RxSingle *observable = RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(), disposeEagerly);
  [((RxSingle *) nil_chk(observable)) subscribeWithRxObserver:observer];
  [observable subscribeWithRxObserver:observer];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer])) onNextWithId:@"Hello world!"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer])) onNextWithId:@"Hello world!"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer])) onCompleted];
  [inOrder verifyNoMoreInteractions];
}

void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithResourceFactoryErrorWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly) {
  id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init();
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init();
  [((RxSinglesBlockingSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(resourceFactory, observableFactory, self->disposeSubscription_))) toBlocking])) value];
}

void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly) {
  id<RxFunctionsAction0> unsubscribe = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction0_class_());
  id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(unsubscribe);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init();
  @try {
    [((RxSinglesBlockingSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(resourceFactory, observableFactory, self->disposeSubscription_))) toBlocking])) value];
    OrgJunitAssert_failWithNSString_(@"Should throw a TestException when the observableFactory throws it");
  }
  @catch (RxExceptionsTestException *e) {
    [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_(unsubscribe))) call];
  }
}

void RxInternalOperatorsSingleOnSubscribeUsingTest_performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean_(RxInternalOperatorsSingleOnSubscribeUsingTest *self, jboolean disposeEagerly) {
  id<RxFunctionsAction0> unsubscribe = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction0_class_());
  id<RxFunctionsFunc0> resourceFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(unsubscribe);
  id<RxFunctionsFunc1> observableFactory = create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init();
  @try {
    [((RxSinglesBlockingSingle *) nil_chk([((RxSingle *) nil_chk(RxSingle_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFactory, observableFactory, self->disposeSubscription_, disposeEagerly))) toBlocking])) value];
    OrgJunitAssert_failWithNSString_(@"Should throw a TestException when the observableFactory throws it");
  }
  @catch (RxExceptionsTestException *e) {
    [((id<RxFunctionsAction0>) nil_chk(OrgMockitoMockito_verifyWithId_(unsubscribe))) call];
  }
}

id<RxFunctionsAction0> RxInternalOperatorsSingleOnSubscribeUsingTest_createUnsubActionWithJavaUtilList_(id<JavaUtilList> events) {
  RxInternalOperatorsSingleOnSubscribeUsingTest_initialize();
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(events);
}

id<RxFunctionsAction1> RxInternalOperatorsSingleOnSubscribeUsingTest_createOnErrorActionWithJavaUtilList_(id<JavaUtilList> events) {
  RxInternalOperatorsSingleOnSubscribeUsingTest_initialize();
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(events);
}

id<RxFunctionsFunc0> RxInternalOperatorsSingleOnSubscribeUsingTest_createResourceFactoryWithJavaUtilList_(id<JavaUtilList> events) {
  RxInternalOperatorsSingleOnSubscribeUsingTest_initialize();
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(events);
}

id<RxFunctionsAction1> RxInternalOperatorsSingleOnSubscribeUsingTest_createOnSuccessActionWithJavaUtilList_(id<JavaUtilList> events) {
  RxInternalOperatorsSingleOnSubscribeUsingTest_initialize();
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(events);
}

void RxInternalOperatorsSingleOnSubscribeUsingTest_init(RxInternalOperatorsSingleOnSubscribeUsingTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->disposeSubscription_, new_RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init());
}

RxInternalOperatorsSingleOnSubscribeUsingTest *new_RxInternalOperatorsSingleOnSubscribeUsingTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest *create_RxInternalOperatorsSingleOnSubscribeUsingTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest, init)
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsTestException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsTestException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsSingleOnSubscribeUsingTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeUsingTest)

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_Resource

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getTextFromWeb);
  methods[1].selector = @selector(dispose);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_Resource = { "Resource", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x60a, 2, 0, 0, -1, -1, -1, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_Resource;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeUsingTest_Resource)

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction

- (void)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)r {
  [((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(r)) dispose];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction = { "DisposeAction", "rx.internal.operators", ptrTable, methods, NULL, 7, 0xa, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *new_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction *create_RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeUsingTest_DisposeAction)

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$1

- (void)callWithId:(id<RxSubscription>)s {
  [((id<RxSubscription>) nil_chk(s)) unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$1;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$1, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$1, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$2

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call {
  return val$resource_;
}

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$resource_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$resource_", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$2;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  JreStrongAssign(&self->val$resource_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$2, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$2 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$2_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$2, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$3

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$3;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$3, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$3 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$3, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$4

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call {
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSubscribingTwiceWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$4;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$4, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$4 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$4, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1

- (NSString *)getTextFromWeb {
  if (first_) {
    first_ = false;
    return @"Hello world!";
  }
  return @"Nothing";
}

- (void)dispose {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getTextFromWeb);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "first_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest_$4;", "call" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 3, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *self) {
  NSObject_init(self);
  self->first_ = true;
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$4_$1, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$5

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSubscribingTwiceWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$5;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$5, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$5 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$5, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$6

- (id<RxSubscription>)call {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscription;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithResourceFactoryErrorWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$6;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$6, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$6 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$6, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$7

- (RxSingle *)callWithId:(id<RxSubscription>)subscription {
  return RxSingle_justWithId_(JavaLangInteger_valueOfWithInt_(1));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "(Lrx/Subscription;)Lrx/Single<Ljava/lang/Integer;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithResourceFactoryErrorWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscription;Lrx/Single<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$7;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$7, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$7 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$7, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$8

- (id<RxSubscription>)call {
  return RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(val$unsubscribe_);
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unsubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscription;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unsubscribe_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsAction0;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSingleFactoryErrorWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$8;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *self, id<RxFunctionsAction0> capture$0) {
  JreStrongAssign(&self->val$unsubscribe_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$8, initWithRxFunctionsAction0_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$8 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$8, initWithRxFunctionsAction0_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$9

- (RxSingle *)callWithId:(id<RxSubscription>)subscription {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "(Lrx/Subscription;)Lrx/Single<Ljava/lang/Integer;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSingleFactoryErrorWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscription;Lrx/Single<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$9;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$9, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$9 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$9, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$10

- (id<RxSubscription>)call {
  return RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(val$unsubscribe_);
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$unsubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscription;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$unsubscribe_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsAction0;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$10;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *self, id<RxFunctionsAction0> capture$0) {
  JreStrongAssign(&self->val$unsubscribe_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$10, initWithRxFunctionsAction0_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$10 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$10_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$10, initWithRxFunctionsAction0_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$11

- (RxSingle *)callWithId:(id<RxSubscription>)subscription {
  return RxSingle_createWithRxSingle_OnSubscribe_(create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscription;", "(Lrx/Subscription;)Lrx/Single<Ljava/lang/Integer;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "performTestUsingWithSingleFactoryErrorInOnSubscribeWithBoolean:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Subscription;Lrx/Single<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$11;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$11, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$11 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$11, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1

- (void)callWithId:(RxSingleSubscriber *)t1 {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsSingleOnSubscribeUsingTest_$11;", "callWithId:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$11_$1, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$12

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "disposesEagerlyBeforeCompletion", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$12;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$12, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$12 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$12, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$13

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "doesNotDisposesEagerlyBeforeCompletion", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$13;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$13, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$13 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$13, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$14

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_errorWithNSException_(create_JavaLangRuntimeException_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "disposesEagerlyBeforeError", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$14;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$14, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$14 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$14, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$15

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_errorWithNSException_(create_JavaLangRuntimeException_init());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "doesNotDisposesEagerlyBeforeError", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$15;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$15, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$15 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$15, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$16

- (void)call {
  [((id<JavaUtilList>) nil_chk(val$events_)) addWithId:@"unsub"];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$events_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$events_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "createUnsubActionWithJavaUtilList:" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$16;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$events_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$16, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$16 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$16_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$16, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$17

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$events_)) addWithId:@"error"];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$events_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$events_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "createOnErrorActionWithJavaUtilList:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$17;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$events_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$17, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$17 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$17_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$17, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$18

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call {
  return create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(self);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$events_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$events_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "createResourceFactoryWithJavaUtilList:", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$18 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$18;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$events_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$18, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$18, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1

- (NSString *)getTextFromWeb {
  return @"hello world";
}

- (void)dispose {
  [((id<JavaUtilList>) nil_chk(this$0_->val$events_)) addWithId:@"disposed"];
}

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18:(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *)outer$ {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getTextFromWeb);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsSingleOnSubscribeUsingTest_$18;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest_$18;", "call" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 3, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *self, RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_, outer$)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_(RxInternalOperatorsSingleOnSubscribeUsingTest_$18 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$18_$1, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_$18_, outer$)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$19

- (void)callWithId:(NSString *)s {
  [((id<JavaUtilList>) nil_chk(val$events_)) addWithId:@"completed"];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$events_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$events_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "createOnSuccessActionWithJavaUtilList:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$19;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$events_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$19, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$19 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$19_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$19, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$20

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "nullResourceFactory", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$20;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$20, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$20 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$20, init)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$21

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call {
  return val$resource_;
}

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$resource_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$resource_", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "nullSingeFactory", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$21 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$21;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  JreStrongAssign(&self->val$resource_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$21, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$21 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$21_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$21, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$22

- (id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)call {
  return val$resource_;
}

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)capture$0 {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$resource_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$resource_", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "nullDisposeAction", "Ljava/lang/Object;Lrx/functions/Func0<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$22;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *self, id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  JreStrongAssign(&self->val$resource_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$22, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$22 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$22_initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$22, initWithRxInternalOperatorsSingleOnSubscribeUsingTest_Resource_, capture$0)
}

@implementation RxInternalOperatorsSingleOnSubscribeUsingTest_$23

- (RxSingle *)callWithId:(id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>)resource {
  return RxSingle_justWithId_([((id<RxInternalOperatorsSingleOnSubscribeUsingTest_Resource>) nil_chk(resource)) getTextFromWeb]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSingle;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsSingleOnSubscribeUsingTest_Resource;", "(Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;)Lrx/Single<Ljava/lang/String;>;", "LRxInternalOperatorsSingleOnSubscribeUsingTest;", "nullDisposeAction", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/SingleOnSubscribeUsingTest$Resource;Lrx/Single<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsingTest_$23 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsingTest_$23;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init(RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *self) {
  NSObject_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *new_RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$23, init)
}

RxInternalOperatorsSingleOnSubscribeUsingTest_$23 *create_RxInternalOperatorsSingleOnSubscribeUsingTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsingTest_$23, init)
}
