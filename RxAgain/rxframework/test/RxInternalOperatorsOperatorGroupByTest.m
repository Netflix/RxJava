//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorGroupByTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsOnErrorNotImplementedException.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorGroupBy.h"
#include "RxInternalOperatorsOperatorGroupByTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxInternalUtilUtilityFunctions.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObservablesGroupedObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorGroupByTest ()

+ (id<JavaUtilMap>)toMapWithRxObservable:(RxObservable *)observable;

- (void)doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:(RxObservable *)es
                                  withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)subscribeCounter;

+ (id<RxFunctionsFunc1>)createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException:(JavaLangRuntimeException *)exception;

+ (id<RxFunctionsFunc1>)createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException:(JavaLangRuntimeException *)exception;

@end

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_get_IS_EVEN();
inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_set_IS_EVEN(id<RxFunctionsFunc1> value);
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_IS_EVEN;
J2OBJC_STATIC_FIELD_OBJ(RxInternalOperatorsOperatorGroupByTest, IS_EVEN, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_get_IS_EVEN2();
inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_set_IS_EVEN2(id<RxFunctionsFunc1> value);
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_IS_EVEN2;
J2OBJC_STATIC_FIELD_OBJ(RxInternalOperatorsOperatorGroupByTest, IS_EVEN2, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_get_EVICTING_MAP_ELEMENT_SELECTOR();
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupByTest, EVICTING_MAP_ELEMENT_SELECTOR, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_get_EVICTING_MAP_KEY_SELECTOR();
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupByTest, EVICTING_MAP_KEY_SELECTOR, id<RxFunctionsFunc1>)

__attribute__((unused)) static id<JavaUtilMap> RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(RxObservable *observable);

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest *self, RxObservable *es, JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter);

__attribute__((unused)) static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException_(JavaLangRuntimeException *exception);

__attribute__((unused)) static id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException_(JavaLangRuntimeException *exception);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$28();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$29();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$30();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$31();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$32();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$33();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$34();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$35();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$36();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$37();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$38();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$39();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$40();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$41();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$42();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$43();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$44();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$45();

@interface RxInternalOperatorsOperatorGroupByTest_Event : NSObject {
 @public
  jint source_;
  NSString *message_;
}

- (NSString *)description;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_Event)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_Event, message_, NSString *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_Event_init(RxInternalOperatorsOperatorGroupByTest_Event *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_Event *new_RxInternalOperatorsOperatorGroupByTest_Event_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_Event *create_RxInternalOperatorsOperatorGroupByTest_Event_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorGroupByTest_Event)

@interface RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction : NSObject < RxFunctionsFunc1 > {
 @public
  __unsafe_unretained RxObservablesGroupedObservable *g_;
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)g;

- (NSString *)callWithId:(JavaLangInteger *)x;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *self, RxObservablesGroupedObservable *g);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *new_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *g) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *create_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *g);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction)

@interface RxInternalOperatorsOperatorGroupByTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$1_init(RxInternalOperatorsOperatorGroupByTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$1 *new_RxInternalOperatorsOperatorGroupByTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$1 *create_RxInternalOperatorsOperatorGroupByTest_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$7 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$groupCounter_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)o;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$7, val$groupCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$7 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$7 *new_RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$7 *create_RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$7_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservablesGroupedObservable *val$o_;
}

- (NSString *)callWithId:(NSString *)v;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$7_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$7_$1, val$o_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$7_$1 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$7_$1 *new_RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$7_$1 *create_RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$8 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$error_;
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)v;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                      withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$8, val$error_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$8, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$8 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$8 *new_RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$8 *create_RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$9 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentConcurrentHashMap *val$result_;
}

- (void)callWithId:(RxObservablesGroupedObservable *)o;

- (instancetype)initWithJavaUtilConcurrentConcurrentHashMap:(JavaUtilConcurrentConcurrentHashMap *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$9, val$result_, JavaUtilConcurrentConcurrentHashMap *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(RxInternalOperatorsOperatorGroupByTest_$9 *self, JavaUtilConcurrentConcurrentHashMap *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$9 *new_RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$9 *create_RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$9_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxInternalOperatorsOperatorGroupByTest_$9 *this$0_;
  RxObservablesGroupedObservable *val$o_;
}

- (void)callWithId:(id)v;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$9:(RxInternalOperatorsOperatorGroupByTest_$9 *)outer$
                               withRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$9_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$9_$1, this$0_, RxInternalOperatorsOperatorGroupByTest_$9 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$9_$1, val$o_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9_$1 *self, RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$9_$1 *new_RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$9_$1 *create_RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$10 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$subscribeCounter_;
}

- (void)callWithId:(RxSubscriber *)observer;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$10, val$subscribeCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$10 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$10 *new_RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$10 *create_RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$10_$1 : NSObject < JavaLangRunnable > {
 @public
  RxSubscriber *val$observer_;
}

- (void)run;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$10_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$10_$1, val$observer_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorGroupByTest_$10_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$10_$1 *new_RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$10_$1 *create_RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$11 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$11_init(RxInternalOperatorsOperatorGroupByTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$11 *new_RxInternalOperatorsOperatorGroupByTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$11 *create_RxInternalOperatorsOperatorGroupByTest_$11_init();

@interface RxInternalOperatorsOperatorGroupByTest_$12 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$groupCounter_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$12, val$groupCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$12 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$12 *new_RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$12 *create_RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$12_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$12_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$12_$1_init(RxInternalOperatorsOperatorGroupByTest_$12_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$12_$1 *new_RxInternalOperatorsOperatorGroupByTest_$12_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$12_$1 *create_RxInternalOperatorsOperatorGroupByTest_$12_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$13 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)outputMessage;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$13)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$13, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$13, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$13 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$13 *new_RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$13 *create_RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$14 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$14_init(RxInternalOperatorsOperatorGroupByTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$14 *new_RxInternalOperatorsOperatorGroupByTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$14 *create_RxInternalOperatorsOperatorGroupByTest_$14_init();

@interface RxInternalOperatorsOperatorGroupByTest_$15 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$groupCounter_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$15, val$groupCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$15 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$15 *new_RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$15 *create_RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$15_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$15_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$15_$1_init(RxInternalOperatorsOperatorGroupByTest_$15_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$15_$1 *new_RxInternalOperatorsOperatorGroupByTest_$15_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$15_$1 *create_RxInternalOperatorsOperatorGroupByTest_$15_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$16 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(NSString *)outputMessage;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$16, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$16, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$16 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$16 *new_RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$16 *create_RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$17 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$17)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$17_init(RxInternalOperatorsOperatorGroupByTest_$17 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$17 *new_RxInternalOperatorsOperatorGroupByTest_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$17 *create_RxInternalOperatorsOperatorGroupByTest_$17_init();

@interface RxInternalOperatorsOperatorGroupByTest_$18 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$18)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$18_init(RxInternalOperatorsOperatorGroupByTest_$18 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$18 *new_RxInternalOperatorsOperatorGroupByTest_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$18 *create_RxInternalOperatorsOperatorGroupByTest_$18_init();

@interface RxInternalOperatorsOperatorGroupByTest_$18_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$18_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$18_$1_init(RxInternalOperatorsOperatorGroupByTest_$18_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$18_$1 *new_RxInternalOperatorsOperatorGroupByTest_$18_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$18_$1 *create_RxInternalOperatorsOperatorGroupByTest_$18_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$19 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$19)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$19, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$19 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$19 *new_RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$19 *create_RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$20 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$20)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$20_init(RxInternalOperatorsOperatorGroupByTest_$20 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$20 *new_RxInternalOperatorsOperatorGroupByTest_$20_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$20 *create_RxInternalOperatorsOperatorGroupByTest_$20_init();

@interface RxInternalOperatorsOperatorGroupByTest_$21 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$21)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$21_init(RxInternalOperatorsOperatorGroupByTest_$21 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$21 *new_RxInternalOperatorsOperatorGroupByTest_$21_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$21 *create_RxInternalOperatorsOperatorGroupByTest_$21_init();

@interface RxInternalOperatorsOperatorGroupByTest_$21_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$21_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$21_$1_init(RxInternalOperatorsOperatorGroupByTest_$21_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$21_$1 *new_RxInternalOperatorsOperatorGroupByTest_$21_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$21_$1 *create_RxInternalOperatorsOperatorGroupByTest_$21_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$22 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$22)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$22, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$22 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$22 *new_RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$22 *create_RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$23 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$23)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$23_init(RxInternalOperatorsOperatorGroupByTest_$23 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$23 *new_RxInternalOperatorsOperatorGroupByTest_$23_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$23 *create_RxInternalOperatorsOperatorGroupByTest_$23_init();

@interface RxInternalOperatorsOperatorGroupByTest_$24 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$24)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$24_init(RxInternalOperatorsOperatorGroupByTest_$24 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$24 *new_RxInternalOperatorsOperatorGroupByTest_$24_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$24 *create_RxInternalOperatorsOperatorGroupByTest_$24_init();

@interface RxInternalOperatorsOperatorGroupByTest_$24_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$24_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$24_$1_init(RxInternalOperatorsOperatorGroupByTest_$24_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$24_$1 *new_RxInternalOperatorsOperatorGroupByTest_$24_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$24_$1 *create_RxInternalOperatorsOperatorGroupByTest_$24_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$25 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)s;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$25)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$25, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$25, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$25 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$25 *new_RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$25 *create_RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$26 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$26)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$26_init(RxInternalOperatorsOperatorGroupByTest_$26 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$26 *new_RxInternalOperatorsOperatorGroupByTest_$26_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$26 *create_RxInternalOperatorsOperatorGroupByTest_$26_init();

@interface RxInternalOperatorsOperatorGroupByTest_$27 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxObservablesGroupedObservable *)s;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$27)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$27, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$27, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$27 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$27 *new_RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$27 *create_RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$28 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$28)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$28_init(RxInternalOperatorsOperatorGroupByTest_$28 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$28 *new_RxInternalOperatorsOperatorGroupByTest_$28_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$28 *create_RxInternalOperatorsOperatorGroupByTest_$28_init();

@interface RxInternalOperatorsOperatorGroupByTest_$29 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$29)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$29_init(RxInternalOperatorsOperatorGroupByTest_$29 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29 *new_RxInternalOperatorsOperatorGroupByTest_$29_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29 *create_RxInternalOperatorsOperatorGroupByTest_$29_init();

@interface RxInternalOperatorsOperatorGroupByTest_$29_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$29_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$29_$1_init(RxInternalOperatorsOperatorGroupByTest_$29_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29_$1 *new_RxInternalOperatorsOperatorGroupByTest_$29_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29_$1 *create_RxInternalOperatorsOperatorGroupByTest_$29_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$29_$2 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$29_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$29_$2_init(RxInternalOperatorsOperatorGroupByTest_$29_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29_$2 *new_RxInternalOperatorsOperatorGroupByTest_$29_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$29_$2 *create_RxInternalOperatorsOperatorGroupByTest_$29_$2_init();

@interface RxInternalOperatorsOperatorGroupByTest_$30 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$eventCounter_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$30)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$30, val$eventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$30 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$30 *new_RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$30 *create_RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$31 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$31)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$31, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$31 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$31 *new_RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$31 *create_RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$32 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$32)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$32_init(RxInternalOperatorsOperatorGroupByTest_$32 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$32 *new_RxInternalOperatorsOperatorGroupByTest_$32_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$32 *create_RxInternalOperatorsOperatorGroupByTest_$32_init();

@interface RxInternalOperatorsOperatorGroupByTest_$33 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$33)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$33, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$33 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33 *new_RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33 *create_RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$33_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$33_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$33_$1_init(RxInternalOperatorsOperatorGroupByTest_$33_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$1 *new_RxInternalOperatorsOperatorGroupByTest_$33_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$1 *create_RxInternalOperatorsOperatorGroupByTest_$33_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$33_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorGroupByTest_$33 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$33:(RxInternalOperatorsOperatorGroupByTest_$33 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$33_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$33_$2, this$0_, RxInternalOperatorsOperatorGroupByTest_$33 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33_$2 *self, RxInternalOperatorsOperatorGroupByTest_$33 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$2 *new_RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$2 *create_RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33 *outer$);

@interface RxInternalOperatorsOperatorGroupByTest_$33_$3 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$33_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$33_$3_init(RxInternalOperatorsOperatorGroupByTest_$33_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$3 *new_RxInternalOperatorsOperatorGroupByTest_$33_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$33_$3 *create_RxInternalOperatorsOperatorGroupByTest_$33_$3_init();

@interface RxInternalOperatorsOperatorGroupByTest_$34 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$results_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$34)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$34, val$results_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$34 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$34 *new_RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$34 *create_RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$35 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$35)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$35, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$35 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$35 *new_RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$35 *create_RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$36 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$36)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$36_init(RxInternalOperatorsOperatorGroupByTest_$36 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$36 *new_RxInternalOperatorsOperatorGroupByTest_$36_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$36 *create_RxInternalOperatorsOperatorGroupByTest_$36_init();

@interface RxInternalOperatorsOperatorGroupByTest_$37 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$37)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$37, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$37 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37 *new_RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37 *create_RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$37_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$37_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$37_$1_init(RxInternalOperatorsOperatorGroupByTest_$37_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$1 *new_RxInternalOperatorsOperatorGroupByTest_$37_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$1 *create_RxInternalOperatorsOperatorGroupByTest_$37_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$37_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorGroupByTest_$37 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$37:(RxInternalOperatorsOperatorGroupByTest_$37 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$37_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$37_$2, this$0_, RxInternalOperatorsOperatorGroupByTest_$37 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37_$2 *self, RxInternalOperatorsOperatorGroupByTest_$37 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$2 *new_RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$2 *create_RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37 *outer$);

@interface RxInternalOperatorsOperatorGroupByTest_$37_$3 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$37_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$37_$3_init(RxInternalOperatorsOperatorGroupByTest_$37_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$3 *new_RxInternalOperatorsOperatorGroupByTest_$37_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$3 *create_RxInternalOperatorsOperatorGroupByTest_$37_$3_init();

@interface RxInternalOperatorsOperatorGroupByTest_$37_$4 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxNotification *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$37_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$37_$4_init(RxInternalOperatorsOperatorGroupByTest_$37_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$4 *new_RxInternalOperatorsOperatorGroupByTest_$37_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$37_$4 *create_RxInternalOperatorsOperatorGroupByTest_$37_$4_init();

@interface RxInternalOperatorsOperatorGroupByTest_$38 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxNotification *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$38)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$38_init(RxInternalOperatorsOperatorGroupByTest_$38 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$38 *new_RxInternalOperatorsOperatorGroupByTest_$38_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$38 *create_RxInternalOperatorsOperatorGroupByTest_$38_init();

@interface RxInternalOperatorsOperatorGroupByTest_$39 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$results_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$39)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$39, val$results_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$39 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$39 *new_RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$39 *create_RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$40 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$40)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$40, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$40 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$40 *new_RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$40 *create_RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$41 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$41)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$41_init(RxInternalOperatorsOperatorGroupByTest_$41 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$41 *new_RxInternalOperatorsOperatorGroupByTest_$41_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$41 *create_RxInternalOperatorsOperatorGroupByTest_$41_init();

@interface RxInternalOperatorsOperatorGroupByTest_$42 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentCountDownLatch *val$first_;
}

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$42)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$42, val$first_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$42 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42 *new_RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42 *create_RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$42_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$42_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$42_$1_init(RxInternalOperatorsOperatorGroupByTest_$42_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$1 *new_RxInternalOperatorsOperatorGroupByTest_$42_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$1 *create_RxInternalOperatorsOperatorGroupByTest_$42_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$42_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorGroupByTest_$42 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$42:(RxInternalOperatorsOperatorGroupByTest_$42 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$42_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$42_$2, this$0_, RxInternalOperatorsOperatorGroupByTest_$42 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42_$2 *self, RxInternalOperatorsOperatorGroupByTest_$42 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$2 *new_RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$2 *create_RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42 *outer$);

@interface RxInternalOperatorsOperatorGroupByTest_$42_$3 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$42_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$42_$3_init(RxInternalOperatorsOperatorGroupByTest_$42_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$3 *new_RxInternalOperatorsOperatorGroupByTest_$42_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$42_$3 *create_RxInternalOperatorsOperatorGroupByTest_$42_$3_init();

@interface RxInternalOperatorsOperatorGroupByTest_$43 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$results_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$43)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$43, val$results_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$43 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$43 *new_RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$43 *create_RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$44 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$44)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$44_init(RxInternalOperatorsOperatorGroupByTest_$44 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$44 *new_RxInternalOperatorsOperatorGroupByTest_$44_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$44 *create_RxInternalOperatorsOperatorGroupByTest_$44_init();

@interface RxInternalOperatorsOperatorGroupByTest_$45 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$45)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$45_init(RxInternalOperatorsOperatorGroupByTest_$45 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$45 *new_RxInternalOperatorsOperatorGroupByTest_$45_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$45 *create_RxInternalOperatorsOperatorGroupByTest_$45_init();

@interface RxInternalOperatorsOperatorGroupByTest_$46 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$46)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$46_init(RxInternalOperatorsOperatorGroupByTest_$46 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$46 *new_RxInternalOperatorsOperatorGroupByTest_$46_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$46 *create_RxInternalOperatorsOperatorGroupByTest_$46_init();

@interface RxInternalOperatorsOperatorGroupByTest_$46_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservablesGroupedObservable *val$group_;
}

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$46_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$46_$1, val$group_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$46_$1 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$46_$1 *new_RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$46_$1 *create_RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$47 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxNotification *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$47)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$47_init(RxInternalOperatorsOperatorGroupByTest_$47 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$47 *new_RxInternalOperatorsOperatorGroupByTest_$47_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$47 *create_RxInternalOperatorsOperatorGroupByTest_$47_init();

@interface RxInternalOperatorsOperatorGroupByTest_$48 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$results_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$48)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$48, val$results_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$48 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$48 *new_RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$48 *create_RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$49 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$49)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$49_init(RxInternalOperatorsOperatorGroupByTest_$49 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$49 *new_RxInternalOperatorsOperatorGroupByTest_$49_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$49 *create_RxInternalOperatorsOperatorGroupByTest_$49_init();

@interface RxInternalOperatorsOperatorGroupByTest_$50 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$50)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$50_init(RxInternalOperatorsOperatorGroupByTest_$50 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$50 *new_RxInternalOperatorsOperatorGroupByTest_$50_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$50 *create_RxInternalOperatorsOperatorGroupByTest_$50_init();

@interface RxInternalOperatorsOperatorGroupByTest_$51 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$51)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$51_init(RxInternalOperatorsOperatorGroupByTest_$51 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$51 *new_RxInternalOperatorsOperatorGroupByTest_$51_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$51 *create_RxInternalOperatorsOperatorGroupByTest_$51_init();

@interface RxInternalOperatorsOperatorGroupByTest_$51_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$51_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$51_$1_init(RxInternalOperatorsOperatorGroupByTest_$51_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$51_$1 *new_RxInternalOperatorsOperatorGroupByTest_$51_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$51_$1 *create_RxInternalOperatorsOperatorGroupByTest_$51_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$52 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilArrayList *val$results_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$52)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$52, val$results_, JavaUtilArrayList *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$52 *self, JavaUtilArrayList *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$52 *new_RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$52 *create_RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$53 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$subscribeCounter_;
  jint val$numGroups_;
  JavaUtilConcurrentAtomicAtomicInteger *val$sentEventCounter_;
}

- (void)callWithId:(RxSubscriber *)op;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                                      withInt:(jint)capture$1
                    withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$53)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$53, val$subscribeCounter_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$53, val$sentEventCounter_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$53 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$53 *new_RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$53 *create_RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2);

@interface RxInternalOperatorsOperatorGroupByTest_$2 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangLong *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$2_init(RxInternalOperatorsOperatorGroupByTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$2 *new_RxInternalOperatorsOperatorGroupByTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$2 *create_RxInternalOperatorsOperatorGroupByTest_$2_init();

@interface RxInternalOperatorsOperatorGroupByTest_$3 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$3_init(RxInternalOperatorsOperatorGroupByTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$3 *new_RxInternalOperatorsOperatorGroupByTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$3 *create_RxInternalOperatorsOperatorGroupByTest_$3_init();

@interface RxInternalOperatorsOperatorGroupByTest_$54 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$54)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$54_init(RxInternalOperatorsOperatorGroupByTest_$54 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$54 *new_RxInternalOperatorsOperatorGroupByTest_$54_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$54 *create_RxInternalOperatorsOperatorGroupByTest_$54_init();

@interface RxInternalOperatorsOperatorGroupByTest_$54_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservablesGroupedObservable *val$g_;
}

- (NSString *)callWithId:(JavaLangInteger *)l;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$54_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$54_$1, val$g_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$54_$1 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$54_$1 *new_RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$54_$1 *create_RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$55 : NSObject < RxFunctionsFunc1 > {
 @public
  id val$value_;
}

- (id)callWithId:(id)t1;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$55)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$55, val$value_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(RxInternalOperatorsOperatorGroupByTest_$55 *self, id capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$55 *new_RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$55 *create_RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(id capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$56 : NSObject < RxFunctionsFunc1 >

- (id)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$56)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$56_init(RxInternalOperatorsOperatorGroupByTest_$56 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$56 *new_RxInternalOperatorsOperatorGroupByTest_$56_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$56 *create_RxInternalOperatorsOperatorGroupByTest_$56_init();

@interface RxInternalOperatorsOperatorGroupByTest_$57 : NSObject < RxFunctionsFunc1 >

- (id)callWithId:(id)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$57)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$57_init(RxInternalOperatorsOperatorGroupByTest_$57 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$57 *new_RxInternalOperatorsOperatorGroupByTest_$57_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$57 *create_RxInternalOperatorsOperatorGroupByTest_$57_init();

@interface RxInternalOperatorsOperatorGroupByTest_$4 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$4_init(RxInternalOperatorsOperatorGroupByTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$4 *new_RxInternalOperatorsOperatorGroupByTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$4 *create_RxInternalOperatorsOperatorGroupByTest_$4_init();

@interface RxInternalOperatorsOperatorGroupByTest_$58 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$58)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$58_init(RxInternalOperatorsOperatorGroupByTest_$58 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$58 *new_RxInternalOperatorsOperatorGroupByTest_$58_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$58 *create_RxInternalOperatorsOperatorGroupByTest_$58_init();

@interface RxInternalOperatorsOperatorGroupByTest_$59 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$59)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$59_init(RxInternalOperatorsOperatorGroupByTest_$59 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$59 *new_RxInternalOperatorsOperatorGroupByTest_$59_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$59 *create_RxInternalOperatorsOperatorGroupByTest_$59_init();

@interface RxInternalOperatorsOperatorGroupByTest_$60 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$60)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$60_init(RxInternalOperatorsOperatorGroupByTest_$60 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$60 *new_RxInternalOperatorsOperatorGroupByTest_$60_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$60 *create_RxInternalOperatorsOperatorGroupByTest_$60_init();

@interface RxInternalOperatorsOperatorGroupByTest_$60_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  jint count_;
  RxObservablesGroupedObservable *val$g_;
}

- (NSString *)callWithId:(NSString *)v;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$60_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$60_$1, val$g_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$60_$1 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$60_$1 *new_RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$60_$1 *create_RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$61 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$inner_;
}

- (void)callWithId:(RxObservablesGroupedObservable *)t1;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$61)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$61, val$inner_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorGroupByTest_$61 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$61 *new_RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$61 *create_RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$62 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$62)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$62_init(RxInternalOperatorsOperatorGroupByTest_$62 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62 *new_RxInternalOperatorsOperatorGroupByTest_$62_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62 *create_RxInternalOperatorsOperatorGroupByTest_$62_init();

@interface RxInternalOperatorsOperatorGroupByTest_$62_$1 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$62_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$62_$1_init(RxInternalOperatorsOperatorGroupByTest_$62_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$1 *new_RxInternalOperatorsOperatorGroupByTest_$62_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$1 *create_RxInternalOperatorsOperatorGroupByTest_$62_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$62_$2 : NSObject < RxFunctionsFunc1 > {
 @public
  jint c_;
  RxObservablesGroupedObservable *val$g_;
}

- (NSString *)callWithId:(JavaLangInteger *)l;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$62_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$62_$2, val$g_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$62_$2 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$2 *new_RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$2 *create_RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$62_$3 : NSObject < RxFunctionsAction0 >

- (void)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$62_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$62_$3_init(RxInternalOperatorsOperatorGroupByTest_$62_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$3 *new_RxInternalOperatorsOperatorGroupByTest_$62_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$62_$3 *create_RxInternalOperatorsOperatorGroupByTest_$62_$3_init();

@interface RxInternalOperatorsOperatorGroupByTest_$63 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxNotification *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$63)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$63_init(RxInternalOperatorsOperatorGroupByTest_$63 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$63 *new_RxInternalOperatorsOperatorGroupByTest_$63_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$63 *create_RxInternalOperatorsOperatorGroupByTest_$63_init();

@interface RxInternalOperatorsOperatorGroupByTest_$64 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$64)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$64_init(RxInternalOperatorsOperatorGroupByTest_$64 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$64 *new_RxInternalOperatorsOperatorGroupByTest_$64_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$64 *create_RxInternalOperatorsOperatorGroupByTest_$64_init();

@interface RxInternalOperatorsOperatorGroupByTest_$64_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxObservablesGroupedObservable *val$g_;
}

- (NSString *)callWithId:(JavaLangInteger *)l;

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$64_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$64_$1, val$g_, RxObservablesGroupedObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$64_$1 *self, RxObservablesGroupedObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$64_$1 *new_RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$64_$1 *create_RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$5 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$5_init(RxInternalOperatorsOperatorGroupByTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$5 *new_RxInternalOperatorsOperatorGroupByTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$5 *create_RxInternalOperatorsOperatorGroupByTest_$5_init();

@interface RxInternalOperatorsOperatorGroupByTest_$65 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)value;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$65)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$65_init(RxInternalOperatorsOperatorGroupByTest_$65 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$65 *new_RxInternalOperatorsOperatorGroupByTest_$65_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$65 *create_RxInternalOperatorsOperatorGroupByTest_$65_init();

@interface RxInternalOperatorsOperatorGroupByTest_$66 : NSObject < RxFunctionsAction1 > {
 @public
  IOSObjectArray *val$key_;
  id<JavaUtilList> val$values_;
}

- (void)callWithId:(RxObservablesGroupedObservable *)groupedObservable;

- (instancetype)initWithNSStringArray:(IOSObjectArray *)capture$0
                     withJavaUtilList:(id<JavaUtilList>)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$66)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$66, val$key_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$66, val$values_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$66 *self, IOSObjectArray *capture$0, id<JavaUtilList> capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$66 *new_RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(IOSObjectArray *capture$0, id<JavaUtilList> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$66 *create_RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(IOSObjectArray *capture$0, id<JavaUtilList> capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$66_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxInternalOperatorsOperatorGroupByTest_$66 *this$0_;
}

- (void)callWithId:(NSString *)s;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$66:(RxInternalOperatorsOperatorGroupByTest_$66 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$66_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$66_$1, this$0_, RxInternalOperatorsOperatorGroupByTest_$66 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66_$1 *self, RxInternalOperatorsOperatorGroupByTest_$66 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$66_$1 *new_RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$66_$1 *create_RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66 *outer$);

@interface RxInternalOperatorsOperatorGroupByTest_$67 : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxSubscription> val$s_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$67)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$67, val$s_, id<RxSubscription>)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(RxInternalOperatorsOperatorGroupByTest_$67 *self, id<RxSubscription> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$67 *new_RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$67 *create_RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(id<RxSubscription> capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$68 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)integer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$68)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$68_init(RxInternalOperatorsOperatorGroupByTest_$68 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$68 *new_RxInternalOperatorsOperatorGroupByTest_$68_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$68 *create_RxInternalOperatorsOperatorGroupByTest_$68_init();

@interface RxInternalOperatorsOperatorGroupByTest_$69 : RxSubscriber {
 @public
  RxObserversTestSubscriber *val$inner1_;
  RxObserversTestSubscriber *val$inner2_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxObservablesGroupedObservable *)o;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$69)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$69, val$inner1_, RxObserversTestSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$69, val$inner2_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$69 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$69 *new_RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$69 *create_RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$70 : NSObject < RxObservable_OnSubscribe > {
 @public
  NSException *val$e_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$70)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$70, val$e_, NSException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(RxInternalOperatorsOperatorGroupByTest_$70 *self, NSException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$70 *new_RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$70 *create_RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(NSException *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$71 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$71)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$71_init(RxInternalOperatorsOperatorGroupByTest_$71 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$71 *new_RxInternalOperatorsOperatorGroupByTest_$71_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$71 *create_RxInternalOperatorsOperatorGroupByTest_$71_init();

@interface RxInternalOperatorsOperatorGroupByTest_$72 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$72)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$72_init(RxInternalOperatorsOperatorGroupByTest_$72 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$72 *new_RxInternalOperatorsOperatorGroupByTest_$72_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$72 *create_RxInternalOperatorsOperatorGroupByTest_$72_init();

@interface RxInternalOperatorsOperatorGroupByTest_$73 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$73)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$73_init(RxInternalOperatorsOperatorGroupByTest_$73 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$73 *new_RxInternalOperatorsOperatorGroupByTest_$73_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$73 *create_RxInternalOperatorsOperatorGroupByTest_$73_init();

@interface RxInternalOperatorsOperatorGroupByTest_$74 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$completed_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$74)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$74, val$completed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorGroupByTest_$74 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$74 *new_RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$74 *create_RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$75 : NSObject < RxFunctionsFunc1 >

- (id)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$75)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$75_init(RxInternalOperatorsOperatorGroupByTest_$75 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$75 *new_RxInternalOperatorsOperatorGroupByTest_$75_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$75 *create_RxInternalOperatorsOperatorGroupByTest_$75_init();

@interface RxInternalOperatorsOperatorGroupByTest_$76 : NSObject < RxFunctionsFunc1 >

- (id)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$76)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$76_init(RxInternalOperatorsOperatorGroupByTest_$76 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$76 *new_RxInternalOperatorsOperatorGroupByTest_$76_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$76 *create_RxInternalOperatorsOperatorGroupByTest_$76_init();

@interface RxInternalOperatorsOperatorGroupByTest_$77 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$77)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$77_init(RxInternalOperatorsOperatorGroupByTest_$77 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$77 *new_RxInternalOperatorsOperatorGroupByTest_$77_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$77 *create_RxInternalOperatorsOperatorGroupByTest_$77_init();

@interface RxInternalOperatorsOperatorGroupByTest_$78 : NSObject < RxFunctionsFunc1 >

- (id)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$78)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$78_init(RxInternalOperatorsOperatorGroupByTest_$78 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$78 *new_RxInternalOperatorsOperatorGroupByTest_$78_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$78 *create_RxInternalOperatorsOperatorGroupByTest_$78_init();

@interface RxInternalOperatorsOperatorGroupByTest_$79 : NSObject < RxFunctionsAction1 > {
 @public
  RxObserversTestSubscriber *val$ts2_;
}

- (void)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$79)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$79, val$ts2_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$79 *self, RxObserversTestSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$79 *new_RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$79 *create_RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$80 : RxSubscriber {
 @public
  RxObserversTestSubscriber *val$inner1_;
  RxObserversTestSubscriber *val$inner2_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id<JavaUtilList>)o;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$80)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$80, val$inner1_, RxObserversTestSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$80, val$inner2_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$80 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$80 *new_RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$80 *create_RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$81 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)pair;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$81)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$81_init(RxInternalOperatorsOperatorGroupByTest_$81 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$81 *new_RxInternalOperatorsOperatorGroupByTest_$81_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$81 *create_RxInternalOperatorsOperatorGroupByTest_$81_init();

@interface RxInternalOperatorsOperatorGroupByTest_$82 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)oddOrEven;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$82)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$82_init(RxInternalOperatorsOperatorGroupByTest_$82 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$82 *new_RxInternalOperatorsOperatorGroupByTest_$82_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$82 *create_RxInternalOperatorsOperatorGroupByTest_$82_init();

@interface RxInternalOperatorsOperatorGroupByTest_$83 : RxSubscriber {
 @public
  jint toInner_;
  id<JavaUtilList> val$inners_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxObservable *)o;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$83)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$83, val$inners_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$83 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$83 *new_RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$83 *create_RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$84 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)pair;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$84)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$84_init(RxInternalOperatorsOperatorGroupByTest_$84 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$84 *new_RxInternalOperatorsOperatorGroupByTest_$84_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$84 *create_RxInternalOperatorsOperatorGroupByTest_$84_init();

@interface RxInternalOperatorsOperatorGroupByTest_$85 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)booleanIntegerGroupedObservable;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$85)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$85_init(RxInternalOperatorsOperatorGroupByTest_$85 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$85 *new_RxInternalOperatorsOperatorGroupByTest_$85_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$85 *create_RxInternalOperatorsOperatorGroupByTest_$85_init();

@interface RxInternalOperatorsOperatorGroupByTest_$86 : RxSubscriber {
 @public
  RxObserversTestSubscriber *val$inner1_;
  RxObserversTestSubscriber *val$inner2_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id<JavaUtilMap>)integerObservableMap;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$86)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$86, val$inner1_, RxObserversTestSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$86, val$inner2_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$86 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$86 *new_RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$86 *create_RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1);

@interface RxInternalOperatorsOperatorGroupByTest_$87 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)pair;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$87)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$87_init(RxInternalOperatorsOperatorGroupByTest_$87 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$87 *new_RxInternalOperatorsOperatorGroupByTest_$87_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$87 *create_RxInternalOperatorsOperatorGroupByTest_$87_init();

@interface RxInternalOperatorsOperatorGroupByTest_$88 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(RxObservablesGroupedObservable *)group;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$88)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$88_init(RxInternalOperatorsOperatorGroupByTest_$88 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$88 *new_RxInternalOperatorsOperatorGroupByTest_$88_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$88 *create_RxInternalOperatorsOperatorGroupByTest_$88_init();

@interface RxInternalOperatorsOperatorGroupByTest_$89 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)integerGroup;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$89)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$89_init(RxInternalOperatorsOperatorGroupByTest_$89 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$89 *new_RxInternalOperatorsOperatorGroupByTest_$89_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$89 *create_RxInternalOperatorsOperatorGroupByTest_$89_init();

@interface RxInternalOperatorsOperatorGroupByTest_$89_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)integer;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$89_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$89_$1_init(RxInternalOperatorsOperatorGroupByTest_$89_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$89_$1 *new_RxInternalOperatorsOperatorGroupByTest_$89_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$89_$1 *create_RxInternalOperatorsOperatorGroupByTest_$89_$1_init();

@interface RxInternalOperatorsOperatorGroupByTest_$90 : RxSubscriber {
 @public
  RxObserversTestSubscriber *val$inner1_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxObservablesGroupedObservable *)o;

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$90)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$90, val$inner1_, RxObserversTestSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$90 *self, RxObserversTestSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$90 *new_RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$90 *create_RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$91 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)pair;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$91)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$91_init(RxInternalOperatorsOperatorGroupByTest_$91 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$91 *new_RxInternalOperatorsOperatorGroupByTest_$91_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$91 *create_RxInternalOperatorsOperatorGroupByTest_$91_init();

@interface RxInternalOperatorsOperatorGroupByTest_$92 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$92)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$92_init(RxInternalOperatorsOperatorGroupByTest_$92 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$92 *new_RxInternalOperatorsOperatorGroupByTest_$92_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$92 *create_RxInternalOperatorsOperatorGroupByTest_$92_init();

@interface RxInternalOperatorsOperatorGroupByTest_$93 : NSObject < RxFunctionsFunc1 > {
 @public
  id<JavaUtilList> val$evictedKeys_;
}

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)evicted;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$93)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$93, val$evictedKeys_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$93 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$93 *new_RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$93 *create_RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$93_$1 : JavaUtilConcurrentConcurrentHashMap {
 @public
  RxInternalOperatorsOperatorGroupByTest_$93 *this$0_;
  JavaLangInteger *lastKey_;
  id<RxFunctionsAction1> val$evicted_;
}

- (id)putWithId:(JavaLangInteger *)key
         withId:(id)value;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$93:(RxInternalOperatorsOperatorGroupByTest_$93 *)outer$
                                            withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$93_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$93_$1, this$0_, RxInternalOperatorsOperatorGroupByTest_$93 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$93_$1, lastKey_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$93_$1, val$evicted_, id<RxFunctionsAction1>)

inline jlong RxInternalOperatorsOperatorGroupByTest_$93_$1_get_serialVersionUID();
#define RxInternalOperatorsOperatorGroupByTest_$93_$1_serialVersionUID -7519109652858021153LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorGroupByTest_$93_$1, serialVersionUID, jlong)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93_$1 *self, RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$93_$1 *new_RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$93_$1 *create_RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$94 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$94)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$94_init(RxInternalOperatorsOperatorGroupByTest_$94 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$94 *new_RxInternalOperatorsOperatorGroupByTest_$94_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$94 *create_RxInternalOperatorsOperatorGroupByTest_$94_init();

@interface RxInternalOperatorsOperatorGroupByTest_$95 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(JavaLangInteger *)x;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$95)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$95_init(RxInternalOperatorsOperatorGroupByTest_$95 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$95 *new_RxInternalOperatorsOperatorGroupByTest_$95_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$95 *create_RxInternalOperatorsOperatorGroupByTest_$95_init();

@interface RxInternalOperatorsOperatorGroupByTest_$6 : NSObject < RxFunctionsFunc1 >

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$6_init(RxInternalOperatorsOperatorGroupByTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$6 *new_RxInternalOperatorsOperatorGroupByTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$6 *create_RxInternalOperatorsOperatorGroupByTest_$6_init();

@interface RxInternalOperatorsOperatorGroupByTest_$96 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$exception_;
}

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)evicted;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$96)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$96, val$exception_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorGroupByTest_$96 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$96 *new_RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$96 *create_RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOperatorGroupByTest_$96_$1 : JavaUtilConcurrentConcurrentHashMap {
 @public
  RxInternalOperatorsOperatorGroupByTest_$96 *this$0_;
}

- (id)putWithId:(JavaLangInteger *)key
         withId:(id)value;

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$96:(RxInternalOperatorsOperatorGroupByTest_$96 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$96_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$96_$1, this$0_, RxInternalOperatorsOperatorGroupByTest_$96 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96_$1 *self, RxInternalOperatorsOperatorGroupByTest_$96 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$96_$1 *new_RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$96_$1 *create_RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96 *outer$);

@interface RxInternalOperatorsOperatorGroupByTest_$97 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$exception_;
}

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorGroupByTest_$97)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupByTest_$97, val$exception_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorGroupByTest_$97 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$97 *new_RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorGroupByTest_$97 *create_RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorGroupByTest)

id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER;

@implementation RxInternalOperatorsOperatorGroupByTest

- (void)testGroupBy {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"one", @"two", @"three", @"four", @"five", @"six");
  RxObservable *grouped = [((RxObservable *) nil_chk(source)) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(length_)];
  id<JavaUtilMap> map = RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(grouped);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilMap>) nil_chk(map)) size]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two", @"six" } count:3 type:NSString_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(3)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"four", @"five" } count:2 type:NSString_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(4)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"three" } count:1 type:NSString_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(5)])) toArray]);
}

- (void)testGroupByWithElementSelector {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"one", @"two", @"three", @"four", @"five", @"six");
  RxObservable *grouped = [((RxObservable *) nil_chk(source)) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(length_, length_)];
  id<JavaUtilMap> map = RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(grouped);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilMap>) nil_chk(map)) size]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(3)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4) } count:2 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(4)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5) } count:1 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(5)])) toArray]);
}

- (void)testGroupByWithElementSelector2 {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"one", @"two", @"three", @"four", @"five", @"six");
  RxObservable *grouped = [((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:length_ withRxFunctionsFunc1:length_];
  id<JavaUtilMap> map = RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(grouped);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilMap>) nil_chk(map)) size]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(3) } count:3 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(3)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(4) } count:2 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(4)])) toArray]);
  OrgJunitAssert_assertArrayEqualsWithNSObjectArray_withNSObjectArray_([((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(5) } count:1 type:JavaLangInteger_class_()]))) toArray], [((id<JavaUtilCollection>) nil_chk([map getWithId:JavaLangInteger_valueOfWithInt_(5)])) toArray]);
}

- (void)testEmpty {
  RxObservable *source = RxObservable_empty();
  RxObservable *grouped = [((RxObservable *) nil_chk(source)) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(length_)];
  id<JavaUtilMap> map = RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(grouped);
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilMap>) nil_chk(map)) isEmpty]);
}

- (void)testError {
  RxObservable *sourceStrings = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"one", @"two", @"three", @"four", @"five", @"six");
  RxObservable *errorSource = RxObservable_errorWithNSException_(create_JavaLangRuntimeException_initWithNSString_(@"forced failure"));
  RxObservable *source = RxObservable_concatWithRxObservable_withRxObservable_(sourceStrings, errorSource);
  RxObservable *grouped = [((RxObservable *) nil_chk(source)) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(length_)];
  JavaUtilConcurrentAtomicAtomicInteger *groupCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicReference *error = create_JavaUtilConcurrentAtomicAtomicReference_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(grouped)) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(groupCounter)])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(error, eventCounter)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [groupCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [eventCounter get]);
  OrgJunitAssert_assertNotNullWithId_([error get]);
}

+ (id<JavaUtilMap>)toMapWithRxObservable:(RxObservable *)observable {
  return RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(observable);
}

- (void)testGroupedEventStream {
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *groupCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  jint count = 100;
  jint groupCount = 2;
  RxObservable *es = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(subscribeCounter));
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(es)) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$11_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(groupCounter)])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(latch, eventCounter)];
  [latch awaitWithLong:5000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [subscribeCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(groupCount, [groupCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(count, [eventCounter get]);
}

- (void)testUnsubscribeOnNestedTakeAndSyncInfiniteStream {
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *sentEventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxInternalOperatorsOperatorGroupByTest_doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable_withJavaUtilConcurrentAtomicAtomicInteger_(self, [self SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:2 withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter], subscribeCounter);
  JavaLangThread_sleepWithLong_(500);
  OrgJunitAssert_assertEqualsWithLong_withLong_(39, [sentEventCounter get]);
}

- (void)testUnsubscribeOnNestedTakeAndAsyncInfiniteStream {
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *sentEventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxInternalOperatorsOperatorGroupByTest_doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable_withJavaUtilConcurrentAtomicAtomicInteger_(self, [self ASYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:2 withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter], subscribeCounter);
  JavaLangThread_sleepWithLong_(500);
  OrgJunitAssert_assertEqualsWithLong_withLong_(39, [sentEventCounter get]);
}

- (void)doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:(RxObservable *)es
                                  withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)subscribeCounter {
  RxInternalOperatorsOperatorGroupByTest_doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable_withJavaUtilConcurrentAtomicAtomicInteger_(self, es, subscribeCounter);
}

- (void)testUnsubscribeViaTakeOnGroupThenMergeAndTake {
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *sentEventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([self SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:4 withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter])) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$17_init()])) takeWithInt:2])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$18_init()])) takeWithInt:30])) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(eventCounter)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(30, [eventCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(58, [sentEventCounter get]);
}

- (void)testUnsubscribeViaTakeOnGroupThenTakeOnInner {
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *sentEventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([self SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:4 withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter])) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$20_init()])) takeWithInt:2])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$21_init()])) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(eventCounter)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(15, [eventCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(37, [sentEventCounter get]);
}

- (void)testStaggeredCompletion {
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 100))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$23_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$24_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(latch, eventCounter)];
  if (![latch awaitWithLong:3000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]) {
    [self failWithId:@"timed out"];
  }
  OrgJunitAssert_assertEqualsWithLong_withLong_(100, [eventCounter get]);
}

- (void)testCompletionIfInnerNotSubscribed {
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 100))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$26_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(latch, eventCounter)];
  if (![latch awaitWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]) {
    [self failWithId:@"timed out - never got completion"];
  }
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [eventCounter get]);
}

- (void)testIgnoringGroups {
  JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *sentEventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([self SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:4 withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter])) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$28_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$29_init()])) takeWithInt:30])) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(eventCounter)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(30, [eventCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(60, [sentEventCounter get]);
}

- (void)testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete {
  JavaUtilConcurrentCountDownLatch *first = create_JavaUtilConcurrentCountDownLatch_initWithInt_(2);
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(first)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$32_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(first)])) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(results)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Results: ", results)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [results size]);
}

- (void)testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"----------------------------------------------------------------------------------------------"];
  JavaUtilConcurrentCountDownLatch *first = create_JavaUtilConcurrentCountDownLatch_initWithInt_(2);
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(first)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$36_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(first)])) doOnEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$38_init()])) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(results)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Results: ", results)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [results size]);
}

- (void)testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes {
  JavaUtilConcurrentCountDownLatch *first = create_JavaUtilConcurrentCountDownLatch_initWithInt_(2);
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(first)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$41_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(first)])) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(results)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Results: ", results)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(6, [results size]);
}

- (void)testGroupsWithNestedSubscribeOn {
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$44_init()))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$45_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$46_init()])) doOnEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$47_init()])) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(results)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Results: ", results)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(4, [results size]);
}

- (void)testGroupsWithNestedObserveOn {
  JavaUtilArrayList *results = create_JavaUtilArrayList_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$49_init()))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$50_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$51_init()])) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(results)];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Results: ", results)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(4, [results size]);
}

- (RxObservable *)ASYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:(jint)numGroups
                  withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)subscribeCounter
                  withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)sentEventCounter {
  return [((RxObservable *) nil_chk([self SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:numGroups withJavaUtilConcurrentAtomicAtomicInteger:subscribeCounter withJavaUtilConcurrentAtomicAtomicInteger:sentEventCounter])) subscribeOnWithRxScheduler:RxSchedulersSchedulers_newThread()];
}

- (RxObservable *)SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:(jint)numGroups
                 withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)subscribeCounter
                 withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)sentEventCounter {
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(subscribeCounter, numGroups, sentEventCounter));
}

- (void)testGroupByOnAsynchronousSourceAcceptsMultipleSubscriptions {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_(10, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) takeWithInt:1];
  RxObservable *stream = [((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_IS_EVEN];
  id<RxObserver> o1 = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  id<RxObserver> o2 = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk(stream)) subscribeWithRxObserver:o1];
  [stream subscribeWithRxObserver:o2];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o1, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o2, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_any()];
}

- (void)testGroupByBackpressure {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 4000))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_IS_EVEN2])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$54_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
}

- (id<RxFunctionsFunc1>)justWithId:(id)value {
  return create_RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(value);
}

- (id<RxFunctionsFunc1>)failWithId:(id)dummy {
  return create_RxInternalOperatorsOperatorGroupByTest_$56_init();
}

- (id<RxFunctionsFunc1>)fail2WithId:(id)dummy2 {
  return create_RxInternalOperatorsOperatorGroupByTest_$57_init();
}

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)normalBehavior {
  RxObservable *source = RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"  foo", @" FoO ", @"baR  ", @"foO ", @" Baz   ", @"  qux ", @"   bar", @" BAR  ", @"FOO ", @"baz  ", @" bAZ ", @"    fOo    " } count:12 type:NSString_class_()]));
  id<RxFunctionsFunc1> keysel = create_RxInternalOperatorsOperatorGroupByTest_$58_init();
  id<RxFunctionsFunc1> valuesel = create_RxInternalOperatorsOperatorGroupByTest_$59_init();
  RxObservable *m = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:keysel withRxFunctionsFunc1:valuesel])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$60_init()];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"ts .get ", [ts getOnNextEvents])];
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithId_withId_([ts getOnNextEvents], JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"foo-0", @"foo-1", @"bar-0", @"foo-0", @"baz-0", @"qux-0", @"bar-1", @"bar-0", @"foo-1", @"baz-1", @"baz-0", @"foo-0" } count:12 type:NSString_class_()]));
}

- (void)keySelectorThrows {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6));
  RxObservable *m = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:[self failWithId:JavaLangInteger_valueOfWithInt_(0)] withRxFunctionsFunc1:dbl_])) flatMapWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)valueSelectorThrows {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_withId_(JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6));
  RxObservable *m = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:identity_ withRxFunctionsFunc1:[self failWithId:JavaLangInteger_valueOfWithInt_(0)]])) flatMapWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)innerEscapeCompleted {
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(0));
  RxObservable *m = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:identity_ withRxFunctionsFunc1:dbl_])) flatMapWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:[ts getOnNextEvents]];
}

- (void)testExceptionIfSubscribeToChildMoreThanOnce {
  RxObservable *source = RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(0));
  JavaUtilConcurrentAtomicAtomicReference *inner = create_JavaUtilConcurrentAtomicAtomicReference_init();
  RxObservable *m = [((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:identity_ withRxFunctionsFunc1:dbl_];
  [((RxObservable *) nil_chk(m)) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(inner)];
  [((RxObservablesGroupedObservable *) nil_chk([inner get])) subscribe];
  id<RxObserver> o2 = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservablesGroupedObservable *) nil_chk([inner get])) subscribeWithRxObserver:o2];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o2, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(o2, OrgMockitoMockito_never()))) onNextWithId:JavaLangInteger_valueOfWithInt_(OrgMockitoMatchers_anyInt())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(o2))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangIllegalStateException_class_())];
}

- (void)testError2 {
  RxObservable *source = RxObservable_concatWithRxObservable_withRxObservable_(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(0)), RxObservable_errorWithNSException_(create_RxExceptionsTestException_initWithNSString_(@"Forced failure")));
  RxObservable *m = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) groupByWithRxFunctionsFunc1:identity_ withRxFunctionsFunc1:dbl_])) flatMapWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER];
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk(m)) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnErrorEvents])) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
}

- (void)testGroupByBackpressure2 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 4000))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_IS_EVEN2])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$62_init()])) doOnEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$63_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
}

- (void)testgroupByBackpressure2 {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 4000))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_IS_EVEN2])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$64_init()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoErrors];
}

- (void)testGroupByWithNullKey {
  IOSObjectArray *key = [IOSObjectArray arrayWithObjects:(id[]){ @"uninitialized" } count:1 type:NSString_class_()];
  id<JavaUtilList> values = create_JavaUtilArrayList_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(@"a", @"b", @"c"))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$65_init()])) subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(key, values)];
  OrgJunitAssert_assertEqualsWithId_withId_(nil, IOSObjectArray_Get(key, 0));
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"a", @"b", @"c" } count:3 type:NSString_class_()]), values);
}

- (void)testGroupByUnsubscribe {
  id<RxSubscription> s = OrgMockitoMockito_mockWithIOSClass_(RxSubscription_class_());
  RxObservable *o = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(s));
  [((id<RxSubscription>) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o)) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$68_init()])) subscribe])) unsubscribe];
  [((id<RxSubscription>) nil_chk(OrgMockitoMockito_verifyWithId_(s))) unsubscribe];
}

- (void)testGroupByShouldPropagateError {
  NSException *e = create_JavaLangRuntimeException_initWithNSString_(@"Oops");
  RxObserversTestSubscriber *inner1 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *inner2 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *outer = create_RxObserversTestSubscriber_initWithRxSubscriber_(create_RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(inner1, inner2));
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(e)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$71_init()])) subscribeWithRxSubscriber:outer];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:NSException_class_()]), [outer getOnErrorEvents]);
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:NSException_class_()]), [inner1 getOnErrorEvents]);
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:NSException_class_()]), [inner2 getOnErrorEvents]);
}

- (void)testRequestOverflow {
  JavaUtilConcurrentAtomicAtomicBoolean *completed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$72_init()])) concatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$73_init()])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(completed)];
  OrgJunitAssert_assertTrueWithBoolean_([completed get]);
}

- (void)testBackpressureObserveOnOuter {
  for (jint j = 0; j < 1000; j++) {
    @autoreleasepool {
      [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_mergeWithRxObservable_([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 500))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$75_init()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()]))) toBlocking])) last];
    }
  }
}

- (void)testBackpressureInnerDoesntOverflowOuter {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2)))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$76_init()])) doOnNextWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$77_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) requestMoreWithLong:1];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts assertValueCountWithInt:1];
}

- (void)testOneGroupInnerRequestsTwiceBuffer {
  RxObserversTestSubscriber *ts1 = RxObserversTestSubscriber_createWithLong_(0);
  RxObserversTestSubscriber *ts2 = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$78_init()])) doOnNextWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(ts2)])) subscribeWithRxSubscriber:ts1];
  [((RxObserversTestSubscriber *) nil_chk(ts1)) assertNoValues];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
  [((RxObserversTestSubscriber *) nil_chk(ts2)) assertNoValues];
  [ts2 assertNoErrors];
  [ts2 assertNotCompleted];
  [ts1 requestMoreWithLong:1];
  [ts1 assertValueCountWithInt:1];
  [ts1 assertNoErrors];
  [ts1 assertNotCompleted];
  [ts2 assertNoValues];
  [ts2 assertNoErrors];
  [ts2 assertNotCompleted];
  [ts2 requestMoreWithLong:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2];
  [ts2 assertValueCountWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2];
  [ts2 assertNoErrors];
  [ts2 assertNotCompleted];
}

- (void)testGroupedObservableCollection {
  RxObserversTestSubscriber *inner1 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *inner2 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *outer = create_RxObserversTestSubscriber_initWithRxSubscriber_(create_RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(inner1, inner2));
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 10))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$81_init()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$82_init()])) toList])) subscribeWithRxSubscriber:outer];
  [inner1 assertNoErrors];
  [inner1 assertCompleted];
  [inner2 assertNoErrors];
  [inner2 assertCompleted];
  [inner1 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(8) } count:5 type:JavaLangInteger_class_()]) } count:1 type:JavaUtilList_class_()])];
  [inner2 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(9) } count:5 type:JavaLangInteger_class_()]) } count:1 type:JavaUtilList_class_()])];
  [outer assertNoErrors];
  [outer assertCompleted];
  [outer assertValueCountWithInt:1];
}

- (void)testCollectedGroups {
  RxObserversTestSubscriber *inner1 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *inner2 = create_RxObserversTestSubscriber_init();
  id<JavaUtilList> inners = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ inner1, inner2 } count:2 type:RxObserversTestSubscriber_class_()]);
  RxObserversTestSubscriber *outer = create_RxObserversTestSubscriber_initWithRxSubscriber_(create_RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(inners));
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 10))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$84_init()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$85_init()])) subscribeWithRxSubscriber:outer];
  [inner1 assertNoErrors];
  [inner1 assertCompleted];
  [inner1 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(8) } count:5 type:JavaLangInteger_class_()]) } count:1 type:JavaUtilList_class_()])];
  [inner2 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(9) } count:5 type:JavaLangInteger_class_()]) } count:1 type:JavaUtilList_class_()])];
  [outer assertNoErrors];
  [outer assertCompleted];
  [outer assertValueCountWithInt:2];
}

- (void)testMappedCollectedGroups {
  RxObserversTestSubscriber *inner1 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *inner2 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *outer = create_RxObserversTestSubscriber_initWithRxSubscriber_(create_RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(inner1, inner2));
  RxObservable *mapObservable = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 10))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$87_init()])) toMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$88_init() withRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$89_init()];
  [((RxObservable *) nil_chk(mapObservable)) subscribeWithRxSubscriber:outer];
  [inner1 assertNoErrors];
  [inner1 assertCompleted];
  [inner1 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(20), JavaLangInteger_valueOfWithInt_(40), JavaLangInteger_valueOfWithInt_(60), JavaLangInteger_valueOfWithInt_(80) } count:5 type:JavaLangInteger_class_()])];
  [inner2 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(10), JavaLangInteger_valueOfWithInt_(30), JavaLangInteger_valueOfWithInt_(50), JavaLangInteger_valueOfWithInt_(70), JavaLangInteger_valueOfWithInt_(90) } count:5 type:JavaLangInteger_class_()])];
  [outer assertNoErrors];
  [outer assertCompleted];
  [outer assertValueCountWithInt:1];
}

- (void)testSkippedGroup {
  RxObserversTestSubscriber *inner1 = create_RxObserversTestSubscriber_init();
  RxObserversTestSubscriber *outer = create_RxObserversTestSubscriber_initWithRxSubscriber_(create_RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(inner1));
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, 10))) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$91_init()])) subscribeWithRxSubscriber:outer];
  [inner1 assertNoErrors];
  [inner1 assertCompleted];
  [inner1 assertReceivedOnNextWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(9) } count:5 type:JavaLangInteger_class_()])];
  [outer assertNoErrors];
  [outer assertCompleted];
  [outer assertValueCountWithInt:2];
}

- (void)mapFactoryEvictionWorks {
  id<RxFunctionsFunc1> keySelector = create_RxInternalOperatorsOperatorGroupByTest_$92_init();
  id<RxFunctionsFunc1> elementSelector = RxInternalUtilUtilityFunctions_identity();
  id<JavaUtilList> evictedKeys = create_JavaUtilArrayList_init();
  id<RxFunctionsFunc1> mapFactory = create_RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(evictedKeys);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:keySelector withRxFunctionsFunc1:elementSelector withRxFunctionsFunc1:mapFactory])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$94_init()])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:6 type:JavaLangInteger_class_()]), evictedKeys);
  id<JavaUtilList> expected = [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$95_init()])) toList])) toBlocking])) single];
  OrgJunitAssert_assertEqualsWithId_withId_(expected, [((RxObserversTestSubscriber *) nil_chk(ts)) getOnNextEvents]);
}

- (void)testEvictingMapFactoryIfMapPutThrowsRuntimeExceptionThenErrorEmittedByStream {
  JavaLangRuntimeException *exception = create_JavaLangRuntimeException_initWithNSString_(@"boo");
  id<RxFunctionsFunc1> mapFactory = RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException_(exception);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR withRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR withRxFunctionsFunc1:mapFactory])) flatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithNSException:exception];
}

- (void)testEvictingMapFactoryIfMapPutThrowsFatalErrorThenErrorThrownBySubscribe {
  JavaLangRuntimeException *exception = create_RxExceptionsOnErrorNotImplementedException_initWithNSString_withNSException_(@"boo", create_JavaLangRuntimeException_init());
  id<RxFunctionsFunc1> mapFactory = RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException_(exception);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR withRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR withRxFunctionsFunc1:mapFactory])) flatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) subscribeWithRxSubscriber:ts];
}

+ (id<RxFunctionsFunc1>)createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException:(JavaLangRuntimeException *)exception {
  return RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException_(exception);
}

- (void)testGroupByThrowsNpeIfEvictingMapFactoryNull {
  [((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR withRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR withRxFunctionsFunc1:nil];
}

- (void)testEvictingMapFactoryIfMapCreateThrowsRuntimeExceptionThenErrorEmittedByStream {
  JavaLangRuntimeException *exception = create_JavaLangRuntimeException_initWithNSString_(@"boo");
  id<RxFunctionsFunc1> mapFactory = RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException_(exception);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR withRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR withRxFunctionsFunc1:mapFactory])) flatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithNSException:exception];
}

- (void)testEvictingMapFactoryIfMapCreateThrowsFatalErrorThenSubscribeThrows {
  RxExceptionsOnErrorNotImplementedException *exception = create_RxExceptionsOnErrorNotImplementedException_initWithNSString_withNSException_(@"boo", create_JavaLangRuntimeException_init());
  id<RxFunctionsFunc1> mapFactory = RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException_(exception);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, 100))) groupByWithRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR withRxFunctionsFunc1:RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR withRxFunctionsFunc1:mapFactory])) flatMapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) subscribeWithRxSubscriber:ts];
}

+ (id<RxFunctionsFunc1>)createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException:(JavaLangRuntimeException *)exception {
  return RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException_(exception);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(length_);
  RELEASE_(dbl_);
  RELEASE_(identity_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "LJavaUtilMap;", 0xa, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 8, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 12, -1 },
    { NULL, "V", 0x2, 13, 14, 10, 15, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 25, -1 },
    { NULL, "LRxObservable;", 0x0, 26, 27, -1, 28, -1, -1 },
    { NULL, "LRxObservable;", 0x0, 29, 27, -1, 28, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 31, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x0, 32, 33, -1, 34, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x0, 35, 33, -1, 36, -1, -1 },
    { NULL, "LRxFunctionsFunc1;", 0x0, 37, 33, -1, 34, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 38, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 39, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 40, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 41, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 42, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 43, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 44, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 45, -1 },
    { NULL, "V", 0x1, -1, -1, 10, -1, 46, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 47, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 48, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 49, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 50, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 51, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 52, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 53, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 54, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 55, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 56, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 57, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 58, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 59, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 60, -1 },
    { NULL, "LRxFunctionsFunc1;", 0xa, 61, 62, -1, 63, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 64, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 65, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 66, -1 },
    { NULL, "LRxFunctionsFunc1;", 0xa, 67, 62, -1, 63, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testGroupBy);
  methods[1].selector = @selector(testGroupByWithElementSelector);
  methods[2].selector = @selector(testGroupByWithElementSelector2);
  methods[3].selector = @selector(testEmpty);
  methods[4].selector = @selector(testError);
  methods[5].selector = @selector(toMapWithRxObservable:);
  methods[6].selector = @selector(testGroupedEventStream);
  methods[7].selector = @selector(testUnsubscribeOnNestedTakeAndSyncInfiniteStream);
  methods[8].selector = @selector(testUnsubscribeOnNestedTakeAndAsyncInfiniteStream);
  methods[9].selector = @selector(doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:withJavaUtilConcurrentAtomicAtomicInteger:);
  methods[10].selector = @selector(testUnsubscribeViaTakeOnGroupThenMergeAndTake);
  methods[11].selector = @selector(testUnsubscribeViaTakeOnGroupThenTakeOnInner);
  methods[12].selector = @selector(testStaggeredCompletion);
  methods[13].selector = @selector(testCompletionIfInnerNotSubscribed);
  methods[14].selector = @selector(testIgnoringGroups);
  methods[15].selector = @selector(testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete);
  methods[16].selector = @selector(testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes);
  methods[17].selector = @selector(testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes);
  methods[18].selector = @selector(testGroupsWithNestedSubscribeOn);
  methods[19].selector = @selector(testGroupsWithNestedObserveOn);
  methods[20].selector = @selector(ASYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:withJavaUtilConcurrentAtomicAtomicInteger:withJavaUtilConcurrentAtomicAtomicInteger:);
  methods[21].selector = @selector(SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:withJavaUtilConcurrentAtomicAtomicInteger:withJavaUtilConcurrentAtomicAtomicInteger:);
  methods[22].selector = @selector(testGroupByOnAsynchronousSourceAcceptsMultipleSubscriptions);
  methods[23].selector = @selector(testGroupByBackpressure);
  methods[24].selector = @selector(justWithId:);
  methods[25].selector = @selector(failWithId:);
  methods[26].selector = @selector(fail2WithId:);
  methods[27].selector = @selector(before);
  methods[28].selector = @selector(normalBehavior);
  methods[29].selector = @selector(keySelectorThrows);
  methods[30].selector = @selector(valueSelectorThrows);
  methods[31].selector = @selector(innerEscapeCompleted);
  methods[32].selector = @selector(testExceptionIfSubscribeToChildMoreThanOnce);
  methods[33].selector = @selector(testError2);
  methods[34].selector = @selector(testGroupByBackpressure2);
  methods[35].selector = @selector(testgroupByBackpressure2);
  methods[36].selector = @selector(testGroupByWithNullKey);
  methods[37].selector = @selector(testGroupByUnsubscribe);
  methods[38].selector = @selector(testGroupByShouldPropagateError);
  methods[39].selector = @selector(testRequestOverflow);
  methods[40].selector = @selector(testBackpressureObserveOnOuter);
  methods[41].selector = @selector(testBackpressureInnerDoesntOverflowOuter);
  methods[42].selector = @selector(testOneGroupInnerRequestsTwiceBuffer);
  methods[43].selector = @selector(testGroupedObservableCollection);
  methods[44].selector = @selector(testCollectedGroups);
  methods[45].selector = @selector(testMappedCollectedGroups);
  methods[46].selector = @selector(testSkippedGroup);
  methods[47].selector = @selector(mapFactoryEvictionWorks);
  methods[48].selector = @selector(testEvictingMapFactoryIfMapPutThrowsRuntimeExceptionThenErrorEmittedByStream);
  methods[49].selector = @selector(testEvictingMapFactoryIfMapPutThrowsFatalErrorThenErrorThrownBySubscribe);
  methods[50].selector = @selector(createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException:);
  methods[51].selector = @selector(testGroupByThrowsNpeIfEvictingMapFactoryNull);
  methods[52].selector = @selector(testEvictingMapFactoryIfMapCreateThrowsRuntimeExceptionThenErrorEmittedByStream);
  methods[53].selector = @selector(testEvictingMapFactoryIfMapCreateThrowsFatalErrorThenSubscribeThrows);
  methods[54].selector = @selector(createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException:);
  methods[55].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "length_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 68, -1 },
    { "IS_EVEN", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0xa, -1, 69, 70, -1 },
    { "IS_EVEN2", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0xa, -1, 71, 72, -1 },
    { "dbl_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 73, -1 },
    { "identity_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x0, -1, -1, 73, -1 },
    { "FLATTEN_INTEGER", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x8, -1, 74, 75, -1 },
    { "EVICTING_MAP_ELEMENT_SELECTOR", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1a, -1, 76, 73, -1 },
    { "EVICTING_MAP_KEY_SELECTOR", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1a, -1, 77, 73, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$0, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$1, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$2, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$3, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$4, "toMap", "LRxObservable;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Lrx/Observable<Lrx/observables/GroupedObservable<TK;TV;>;>;)Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;", "LNSException;", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$5, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$6, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$7, "doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStream", "LRxObservable;LJavaUtilConcurrentAtomicAtomicInteger;", "(Lrx/Observable<Lrx/internal/operators/OperatorGroupByTest$Event;>;Ljava/util/concurrent/atomic/AtomicInteger;)V", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$8, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$9, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$10, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$11, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$12, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$13, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$14, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$15, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$16, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$17, "ASYNC_INFINITE_OBSERVABLE_OF_EVENT", "ILJavaUtilConcurrentAtomicAtomicInteger;LJavaUtilConcurrentAtomicAtomicInteger;", "(ILjava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/atomic/AtomicInteger;)Lrx/Observable<Lrx/internal/operators/OperatorGroupByTest$Event;>;", "SYNC_INFINITE_OBSERVABLE_OF_EVENT", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$18, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$19, "just", "LNSObject;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(TR;)Lrx/functions/Func1<TT;TR;>;", "fail", "<T:Ljava/lang/Object;>(TT;)Lrx/functions/Func1<Ljava/lang/Integer;TT;>;", "fail2", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$20, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$21, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$22, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$23, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$24, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$25, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$26, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$27, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$28, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$29, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$30, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$31, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$32, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$33, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$34, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$35, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$36, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$37, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$38, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$39, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$40, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$41, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$42, "createMapFactoryThatThrowsOnPut", "LJavaLangRuntimeException;", "(Ljava/lang/RuntimeException;)Lrx/functions/Func1<Lrx/functions/Action1<Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;>;", (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$43, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$44, (void *)&RxInternalOperatorsOperatorGroupByTest__Annotations$45, "createMapFactoryThatThrowsOnCreate", "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;", &RxInternalOperatorsOperatorGroupByTest_IS_EVEN, "Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/Boolean;>;", &RxInternalOperatorsOperatorGroupByTest_IS_EVEN2, "Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;", "Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;", &RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER, "Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;", &RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR, &RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR, "LRxInternalOperatorsOperatorGroupByTest_Event;LRxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest = { "OperatorGroupByTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 56, 8, -1, 78, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorGroupByTest class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorGroupByTest_IS_EVEN, new_RxInternalOperatorsOperatorGroupByTest_$2_init());
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorGroupByTest_IS_EVEN2, new_RxInternalOperatorsOperatorGroupByTest_$3_init());
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorGroupByTest_FLATTEN_INTEGER, new_RxInternalOperatorsOperatorGroupByTest_$5_init());
    JreStrongAssign(&RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_ELEMENT_SELECTOR, RxInternalUtilUtilityFunctions_identity());
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorGroupByTest_EVICTING_MAP_KEY_SELECTOR, new_RxInternalOperatorsOperatorGroupByTest_$6_init());
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorGroupByTest)
  }
}

@end

id<JavaUtilMap> RxInternalOperatorsOperatorGroupByTest_toMapWithRxObservable_(RxObservable *observable) {
  RxInternalOperatorsOperatorGroupByTest_initialize();
  JavaUtilConcurrentConcurrentHashMap *result = create_JavaUtilConcurrentConcurrentHashMap_init();
  [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(observable)) toBlocking])) forEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(result)];
  return result;
}

void RxInternalOperatorsOperatorGroupByTest_doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest *self, RxObservable *es, JavaUtilConcurrentAtomicAtomicInteger *subscribeCounter) {
  JavaUtilConcurrentAtomicAtomicInteger *eventCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentAtomicAtomicInteger *groupCounter = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  JavaUtilConcurrentCountDownLatch *latch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(es)) groupByWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$14_init()])) takeWithInt:1])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(groupCounter)])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(latch, eventCounter)];
  if (![latch awaitWithLong:2000 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]) {
    [self failWithId:@"timed out so likely did not unsubscribe correctly"];
  }
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(subscribeCounter)) get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [groupCounter get]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(20, [eventCounter get]);
}

id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException_(JavaLangRuntimeException *exception) {
  RxInternalOperatorsOperatorGroupByTest_initialize();
  return create_RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(exception);
}

id<RxFunctionsFunc1> RxInternalOperatorsOperatorGroupByTest_createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException_(JavaLangRuntimeException *exception) {
  RxInternalOperatorsOperatorGroupByTest_initialize();
  return create_RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(exception);
}

void RxInternalOperatorsOperatorGroupByTest_init(RxInternalOperatorsOperatorGroupByTest *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->length_, new_RxInternalOperatorsOperatorGroupByTest_$1_init());
  JreStrongAssignAndConsume(&self->dbl_, new_RxInternalOperatorsOperatorGroupByTest_$4_init());
  JreStrongAssign(&self->identity_, RxInternalUtilUtilityFunctions_identity());
}

RxInternalOperatorsOperatorGroupByTest *new_RxInternalOperatorsOperatorGroupByTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest, init)
}

RxInternalOperatorsOperatorGroupByTest *create_RxInternalOperatorsOperatorGroupByTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$32() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$33() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$34() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$35() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$36() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$37() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$38() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$39() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$40() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$41() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$42() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorNotImplementedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$43() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaLangNullPointerException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$44() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorGroupByTest__Annotations$45() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(RxExceptionsOnErrorNotImplementedException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorGroupByTest)

@implementation RxInternalOperatorsOperatorGroupByTest_Event

- (NSString *)description {
  return JreStrcat("$I$$", @"Event => source: ", source_, @" message: ", message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_Event_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(message_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "message_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "LRxInternalOperatorsOperatorGroupByTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_Event = { "Event", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 2, 1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_Event;
}

@end

void RxInternalOperatorsOperatorGroupByTest_Event_init(RxInternalOperatorsOperatorGroupByTest_Event *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_Event *new_RxInternalOperatorsOperatorGroupByTest_Event_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_Event, init)
}

RxInternalOperatorsOperatorGroupByTest_Event *create_RxInternalOperatorsOperatorGroupByTest_Event_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_Event, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorGroupByTest_Event)

@implementation RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)g {
  RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(self, g);
  return self;
}

- (NSString *)callWithId:(JavaLangInteger *)x {
  return JreStrcat("@C@", [((RxObservablesGroupedObservable *) nil_chk(g_)) getKey], ':', x);
}

- (void)__javaClone:(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *)original {
  [super __javaClone:original];
  [g_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservablesGroupedObservable:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "g_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "call", "LJavaLangInteger;", "Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction = { "MapFactoryEvictionFunction", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 5, -1, -1, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction;
}

@end

void RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *self, RxObservablesGroupedObservable *g) {
  NSObject_init(self);
  self->g_ = g;
}

RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *new_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *g) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction, initWithRxObservablesGroupedObservable_, g)
}

RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction *create_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *g) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction, initWithRxObservablesGroupedObservable_, g)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction)

@implementation RxInternalOperatorsOperatorGroupByTest_$1

- (JavaLangInteger *)callWithId:(NSString *)s {
  return JavaLangInteger_valueOfWithInt_(((jint) [((NSString *) nil_chk(s)) length]));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$1_init(RxInternalOperatorsOperatorGroupByTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$1 *new_RxInternalOperatorsOperatorGroupByTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$1 *create_RxInternalOperatorsOperatorGroupByTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$7

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)o {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$groupCounter_)) incrementAndGet];
  return [((RxObservablesGroupedObservable *) nil_chk(o)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(o)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$groupCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$groupCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/String;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testError", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/String;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$7;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$7 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$groupCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$7 *new_RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$7, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$7 *create_RxInternalOperatorsOperatorGroupByTest_$7_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$7, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$7_$1

- (NSString *)callWithId:(NSString *)v {
  return JreStrcat("$@$$", @"Event => key: ", [((RxObservablesGroupedObservable *) nil_chk(val$o_)) getKey], @" value: ", v);
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$o_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$o_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/String;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest_$7;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$7_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$7_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$7_$1 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$o_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$7_$1 *new_RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$7_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$7_$1 *create_RxInternalOperatorsOperatorGroupByTest_$7_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$7_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$8

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$error_)) setWithId:e];
}

- (void)onNextWithId:(NSString *)v {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:v];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                      withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$8 class]);
  RELEASE_(val$error_);
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$error_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LJavaUtilConcurrentAtomicAtomicReference;LJavaUtilConcurrentAtomicAtomicInteger;", "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;Ljava/util/concurrent/atomic/AtomicInteger;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testError", "Lrx/Subscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$8;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$8 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  JreStrongAssign(&self->val$error_, capture$0);
  JreStrongAssign(&self->val$eventCounter_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$8 *new_RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$8, initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$8 *create_RxInternalOperatorsOperatorGroupByTest_$8_initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicReference *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$8, initWithJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$9

- (void)callWithId:(RxObservablesGroupedObservable *)o {
  [((JavaUtilConcurrentConcurrentHashMap *) nil_chk(val$result_)) putWithId:[((RxObservablesGroupedObservable *) nil_chk(o)) getKey] withId:create_JavaUtilConcurrentConcurrentLinkedQueue_init()];
  [o subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(self, o)];
}

- (instancetype)initWithJavaUtilConcurrentConcurrentHashMap:(JavaUtilConcurrentConcurrentHashMap *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentConcurrentHashMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$result_", "LJavaUtilConcurrentConcurrentHashMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<TK;TV;>;)V", "LJavaUtilConcurrentConcurrentHashMap;", "(Ljava/util/concurrent/ConcurrentHashMap<TK;Ljava/util/Collection<TV;>;>;)V", "Ljava/util/concurrent/ConcurrentHashMap<TK;Ljava/util/Collection<TV;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "toMapWithRxObservable:", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<TK;TV;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$9;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(RxInternalOperatorsOperatorGroupByTest_$9 *self, JavaUtilConcurrentConcurrentHashMap *capture$0) {
  JreStrongAssign(&self->val$result_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$9 *new_RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$9, initWithJavaUtilConcurrentConcurrentHashMap_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$9 *create_RxInternalOperatorsOperatorGroupByTest_$9_initWithJavaUtilConcurrentConcurrentHashMap_(JavaUtilConcurrentConcurrentHashMap *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$9, initWithJavaUtilConcurrentConcurrentHashMap_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$9_$1

- (void)callWithId:(id)v {
  [((id<JavaUtilCollection>) nil_chk([((JavaUtilConcurrentConcurrentHashMap *) nil_chk(this$0_->val$result_)) getWithId:[((RxObservablesGroupedObservable *) nil_chk(val$o_)) getKey]])) addWithId:v];
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$9:(RxInternalOperatorsOperatorGroupByTest_$9 *)outer$
                               withRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$o_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$9:withRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$9;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$o_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "(TV;)V", "LRxInternalOperatorsOperatorGroupByTest_$9;LRxObservablesGroupedObservable;", "(Lrx/internal/operators/OperatorGroupByTest$9;Lrx/observables/GroupedObservable<TK;TV;>;)V", "Lrx/observables/GroupedObservable<TK;TV;>;", "LRxInternalOperatorsOperatorGroupByTest_$9;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Action1<TV;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$9_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$9_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9_$1 *self, RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$o_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$9_$1 *new_RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$9_$1, initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_, outer$, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$9_$1 *create_RxInternalOperatorsOperatorGroupByTest_$9_$1_initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$9 *outer$, RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$9_$1, initWithRxInternalOperatorsOperatorGroupByTest_$9_withRxObservablesGroupedObservable_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$10

- (void)callWithId:(RxSubscriber *)observer {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"*** Subscribing to EventStream ***"];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$subscribeCounter_)) incrementAndGet];
  [create_JavaLangThread_initWithJavaLangRunnable_(create_RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(observer)) start];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$subscribeCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$subscribeCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/internal/operators/OperatorGroupByTest$Event;>;)V", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedEventStream", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/internal/operators/OperatorGroupByTest$Event;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$10;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$10 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$subscribeCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$10 *new_RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$10, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$10 *create_RxInternalOperatorsOperatorGroupByTest_$10_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$10, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$10_$1

- (void)run {
  for (jint i = 0; i < 100; i++) {
    RxInternalOperatorsOperatorGroupByTest_Event *e = create_RxInternalOperatorsOperatorGroupByTest_Event_init();
    e->source_ = i % 2;
    JreStrongAssign(&e->message_, JreStrcat("$I", @"Event-", i));
    [((RxSubscriber *) nil_chk(val$observer_)) onNextWithId:e];
  }
  [((RxSubscriber *) nil_chk(val$observer_)) onCompleted];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$observer_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/internal/operators/OperatorGroupByTest$Event;>;)V", "Lrx/Subscriber<-Lrx/internal/operators/OperatorGroupByTest$Event;>;", "LRxInternalOperatorsOperatorGroupByTest_$10;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$10_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$10_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorGroupByTest_$10_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$observer_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$10_$1 *new_RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$10_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$10_$1 *create_RxInternalOperatorsOperatorGroupByTest_$10_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$10_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$11

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e {
  return JavaLangInteger_valueOfWithInt_(((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(e))->source_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedEventStream", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$11;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$11_init(RxInternalOperatorsOperatorGroupByTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$11 *new_RxInternalOperatorsOperatorGroupByTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$11, init)
}

RxInternalOperatorsOperatorGroupByTest_$11 *create_RxInternalOperatorsOperatorGroupByTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$11, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$12

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"GroupedObservable Key: ", [((RxObservablesGroupedObservable *) nil_chk(eventGroupedObservable)) getKey])];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$groupCounter_)) incrementAndGet];
  return [eventGroupedObservable mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$12_$1_init()];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$groupCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$groupCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedEventStream", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$12;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$12 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$groupCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$12 *new_RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$12, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$12 *create_RxInternalOperatorsOperatorGroupByTest_$12_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$12, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$12_$1

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event {
  return JreStrcat("$I$$", @"Source: ", ((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(event))->source_, @"  Message: ", event->message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$12_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$12;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$12_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$12_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$12_$1_init(RxInternalOperatorsOperatorGroupByTest_$12_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$12_$1 *new_RxInternalOperatorsOperatorGroupByTest_$12_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$12_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$12_$1 *create_RxInternalOperatorsOperatorGroupByTest_$12_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$12_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$13

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(NSString *)outputMessage {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:outputMessage];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$13 class]);
  RELEASE_(val$latch_);
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedEventStream", "Lrx/Subscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$13 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$13;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$13 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  JreStrongAssign(&self->val$latch_, capture$0);
  JreStrongAssign(&self->val$eventCounter_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$13 *new_RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$13, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$13 *create_RxInternalOperatorsOperatorGroupByTest_$13_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$13, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$14

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e {
  return JavaLangInteger_valueOfWithInt_(((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(e))->source_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest;", "doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:withJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$14;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$14_init(RxInternalOperatorsOperatorGroupByTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$14 *new_RxInternalOperatorsOperatorGroupByTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$14, init)
}

RxInternalOperatorsOperatorGroupByTest_$14 *create_RxInternalOperatorsOperatorGroupByTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$14, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$15

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"testUnsubscribe => GroupedObservable Key: ", [((RxObservablesGroupedObservable *) nil_chk(eventGroupedObservable)) getKey])];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$groupCounter_)) incrementAndGet];
  return [((RxObservable *) nil_chk([eventGroupedObservable takeWithInt:20])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$15_$1_init()];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$groupCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$groupCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:withJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$15;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$15 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$groupCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$15 *new_RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$15, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$15 *create_RxInternalOperatorsOperatorGroupByTest_$15_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$15, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$15_$1

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event {
  return JreStrcat("$I$$", @"testUnsubscribe => Source: ", ((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(event))->source_, @"  Message: ", event->message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$15_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$15;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$15_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$15_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$15_$1_init(RxInternalOperatorsOperatorGroupByTest_$15_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$15_$1 *new_RxInternalOperatorsOperatorGroupByTest_$15_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$15_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$15_$1 *create_RxInternalOperatorsOperatorGroupByTest_$15_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$15_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$16

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(NSString *)outputMessage {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:outputMessage];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$16 class]);
  RELEASE_(val$latch_);
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSString;", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "doTestUnsubscribeOnNestedTakeAndAsyncInfiniteStreamWithRxObservable:withJavaUtilConcurrentAtomicAtomicInteger:", "Lrx/Subscriber<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$16;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$16 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  JreStrongAssign(&self->val$latch_, capture$0);
  JreStrongAssign(&self->val$eventCounter_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$16 *new_RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$16, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$16 *create_RxInternalOperatorsOperatorGroupByTest_$16_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$16, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$17

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e {
  return JavaLangInteger_valueOfWithInt_(((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(e))->source_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenMergeAndTake", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$17 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$17;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$17_init(RxInternalOperatorsOperatorGroupByTest_$17 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$17 *new_RxInternalOperatorsOperatorGroupByTest_$17_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$17, init)
}

RxInternalOperatorsOperatorGroupByTest_$17 *create_RxInternalOperatorsOperatorGroupByTest_$17_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$17, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$18

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable {
  return [((RxObservablesGroupedObservable *) nil_chk(eventGroupedObservable)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$18_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenMergeAndTake", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$18 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$18;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$18_init(RxInternalOperatorsOperatorGroupByTest_$18 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$18 *new_RxInternalOperatorsOperatorGroupByTest_$18_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$18, init)
}

RxInternalOperatorsOperatorGroupByTest_$18 *create_RxInternalOperatorsOperatorGroupByTest_$18_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$18, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$18_$1

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event {
  return JreStrcat("$I$$", @"testUnsubscribe => Source: ", ((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(event))->source_, @"  Message: ", event->message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$18_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$18;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$18_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$18_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$18_$1_init(RxInternalOperatorsOperatorGroupByTest_$18_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$18_$1 *new_RxInternalOperatorsOperatorGroupByTest_$18_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$18_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$18_$1 *create_RxInternalOperatorsOperatorGroupByTest_$18_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$18_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$19

- (void)callWithId:(NSString *)s {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"=> ", s)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenMergeAndTake", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$19 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$19;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$19 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$eventCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$19 *new_RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$19, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$19 *create_RxInternalOperatorsOperatorGroupByTest_$19_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$19, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$20

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e {
  return JavaLangInteger_valueOfWithInt_(((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(e))->source_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenTakeOnInner", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$20 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$20;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$20_init(RxInternalOperatorsOperatorGroupByTest_$20 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$20 *new_RxInternalOperatorsOperatorGroupByTest_$20_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$20, init)
}

RxInternalOperatorsOperatorGroupByTest_$20 *create_RxInternalOperatorsOperatorGroupByTest_$20_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$20, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$21

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable {
  jint numToTake = 0;
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(eventGroupedObservable)) getKey])) intValue] == 1) {
    numToTake = 10;
  }
  else if ([((JavaLangInteger *) nil_chk([eventGroupedObservable getKey])) intValue] == 2) {
    numToTake = 5;
  }
  return [((RxObservable *) nil_chk([eventGroupedObservable takeWithInt:numToTake])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$21_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenTakeOnInner", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$21 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$21;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$21_init(RxInternalOperatorsOperatorGroupByTest_$21 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$21 *new_RxInternalOperatorsOperatorGroupByTest_$21_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$21, init)
}

RxInternalOperatorsOperatorGroupByTest_$21 *create_RxInternalOperatorsOperatorGroupByTest_$21_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$21, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$21_$1

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event {
  return JreStrcat("$I$$", @"testUnsubscribe => Source: ", ((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(event))->source_, @"  Message: ", event->message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$21_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$21;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$21_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$21_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$21_$1_init(RxInternalOperatorsOperatorGroupByTest_$21_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$21_$1 *new_RxInternalOperatorsOperatorGroupByTest_$21_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$21_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$21_$1 *create_RxInternalOperatorsOperatorGroupByTest_$21_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$21_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$22

- (void)callWithId:(NSString *)s {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"=> ", s)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testUnsubscribeViaTakeOnGroupThenTakeOnInner", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$22 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$22;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$22 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$eventCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$22 *new_RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$22, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$22 *create_RxInternalOperatorsOperatorGroupByTest_$22_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$22, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$23

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i)) intValue] % 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testStaggeredCompletion", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$23 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$23;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$23_init(RxInternalOperatorsOperatorGroupByTest_$23 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$23 *new_RxInternalOperatorsOperatorGroupByTest_$23_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$23, init)
}

RxInternalOperatorsOperatorGroupByTest_$23 *create_RxInternalOperatorsOperatorGroupByTest_$23_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$23, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$24

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) getKey])) intValue] == 0) {
    return [((RxObservable *) nil_chk([group delayWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$24_$1_init()];
  }
  else {
    return group;
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testStaggeredCompletion", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$24 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$24;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$24_init(RxInternalOperatorsOperatorGroupByTest_$24 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$24 *new_RxInternalOperatorsOperatorGroupByTest_$24_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$24, init)
}

RxInternalOperatorsOperatorGroupByTest_$24 *create_RxInternalOperatorsOperatorGroupByTest_$24_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$24, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$24_$1

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t)) intValue] * 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$24_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$24;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$24_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$24_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$24_$1_init(RxInternalOperatorsOperatorGroupByTest_$24_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$24_$1 *new_RxInternalOperatorsOperatorGroupByTest_$24_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$24_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$24_$1 *create_RxInternalOperatorsOperatorGroupByTest_$24_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$24_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$25

- (void)onCompleted {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"=> onCompleted"];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(JavaLangInteger *)s {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"=> ", s)];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$25 class]);
  RELEASE_(val$latch_);
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testStaggeredCompletion", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$25 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$25;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$25 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  JreStrongAssign(&self->val$latch_, capture$0);
  JreStrongAssign(&self->val$eventCounter_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$25 *new_RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$25, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$25 *create_RxInternalOperatorsOperatorGroupByTest_$25_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$25, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$26

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i)) intValue] % 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testCompletionIfInnerNotSubscribed", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$26 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$26;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$26_init(RxInternalOperatorsOperatorGroupByTest_$26 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$26 *new_RxInternalOperatorsOperatorGroupByTest_$26_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$26, init)
}

RxInternalOperatorsOperatorGroupByTest_$26 *create_RxInternalOperatorsOperatorGroupByTest_$26_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$26, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$27

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((NSException *) nil_chk(e)) printStackTrace];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(RxObservablesGroupedObservable *)s {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"=> ", s)];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
               withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$27 class]);
  RELEASE_(val$latch_);
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testCompletionIfInnerNotSubscribed", "Lrx/Subscriber<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$27 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$27;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$27 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  JreStrongAssign(&self->val$latch_, capture$0);
  JreStrongAssign(&self->val$eventCounter_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$27 *new_RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$27, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$27 *create_RxInternalOperatorsOperatorGroupByTest_$27_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicInteger *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$27, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$28

- (JavaLangInteger *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)e {
  return JavaLangInteger_valueOfWithInt_(((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(e))->source_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest;", "testIgnoringGroups", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$28 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$28;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$28_init(RxInternalOperatorsOperatorGroupByTest_$28 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$28 *new_RxInternalOperatorsOperatorGroupByTest_$28_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$28, init)
}

RxInternalOperatorsOperatorGroupByTest_$28 *create_RxInternalOperatorsOperatorGroupByTest_$28_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$28, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$29

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)eventGroupedObservable {
  RxObservable *eventStream = eventGroupedObservable;
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(eventGroupedObservable)) getKey])) intValue] >= 2) {
    eventStream = [eventGroupedObservable filterWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$29_$1_init()];
  }
  return [((RxObservable *) nil_chk(eventStream)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$29_$2_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testIgnoringGroups", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Lrx/internal/operators/OperatorGroupByTest$Event;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$29 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$29;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$29_init(RxInternalOperatorsOperatorGroupByTest_$29 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$29 *new_RxInternalOperatorsOperatorGroupByTest_$29_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$29, init)
}

RxInternalOperatorsOperatorGroupByTest_$29 *create_RxInternalOperatorsOperatorGroupByTest_$29_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$29, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$29_$1

- (JavaLangBoolean *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)t1 {
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$29_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$29;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$29_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$29_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$29_$1_init(RxInternalOperatorsOperatorGroupByTest_$29_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$29_$1 *new_RxInternalOperatorsOperatorGroupByTest_$29_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$29_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$29_$1 *create_RxInternalOperatorsOperatorGroupByTest_$29_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$29_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$29_$2

- (NSString *)callWithId:(RxInternalOperatorsOperatorGroupByTest_Event *)event {
  return JreStrcat("$I$$", @"testUnsubscribe => Source: ", ((RxInternalOperatorsOperatorGroupByTest_Event *) nil_chk(event))->source_, @"  Message: ", event->message_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$29_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxInternalOperatorsOperatorGroupByTest_Event;", "LRxInternalOperatorsOperatorGroupByTest_$29;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorGroupByTest$Event;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$29_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$29_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$29_$2_init(RxInternalOperatorsOperatorGroupByTest_$29_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$29_$2 *new_RxInternalOperatorsOperatorGroupByTest_$29_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$29_$2, init)
}

RxInternalOperatorsOperatorGroupByTest_$29_$2 *create_RxInternalOperatorsOperatorGroupByTest_$29_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$29_$2, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$30

- (void)callWithId:(NSString *)s {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$eventCounter_)) incrementAndGet];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"=> ", s)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$eventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$eventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testIgnoringGroups", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$30 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$30;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$30 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$eventCounter_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$30 *new_RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$30, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$30 *create_RxInternalOperatorsOperatorGroupByTest_$30_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$30, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$31

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  @try {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$first_)) await];
  }
  @catch (JavaLangInterruptedException *e) {
    [sub onErrorWithNSException:e];
    return;
  }
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onCompleted];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$31 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$31;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$31 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$31 *new_RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$31, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$31 *create_RxInternalOperatorsOperatorGroupByTest_$31_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$31, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$32

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$32_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$32 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$32;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$32_init(RxInternalOperatorsOperatorGroupByTest_$32 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$32 *new_RxInternalOperatorsOperatorGroupByTest_$32_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$32, init)
}

RxInternalOperatorsOperatorGroupByTest_$32 *create_RxInternalOperatorsOperatorGroupByTest_$32_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$32, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$33

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) getKey])) intValue] < 3) {
    return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([group mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$33_$1_init()])) takeWithInt:2])) doOnCompletedWithRxFunctionsAction0:create_RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(self)];
  }
  else {
    return [group mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$33_$3_init()];
  }
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$33 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$33;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$33 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$33 *new_RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$33, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$33 *create_RxInternalOperatorsOperatorGroupByTest_$33_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$33, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$33_$1

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"first groups: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$33_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$33;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$33_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$33_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$33_$1_init(RxInternalOperatorsOperatorGroupByTest_$33_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$33_$1 *new_RxInternalOperatorsOperatorGroupByTest_$33_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$33_$1 *create_RxInternalOperatorsOperatorGroupByTest_$33_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$33_$2

- (void)call {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(this$0_->val$first_)) countDown];
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$33:(RxInternalOperatorsOperatorGroupByTest_$33 *)outer$ {
  RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$33:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$33;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorGroupByTest_$33;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$33_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$33_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33_$2 *self, RxInternalOperatorsOperatorGroupByTest_$33 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$33_$2 *new_RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$2, initWithRxInternalOperatorsOperatorGroupByTest_$33_, outer$)
}

RxInternalOperatorsOperatorGroupByTest_$33_$2 *create_RxInternalOperatorsOperatorGroupByTest_$33_$2_initWithRxInternalOperatorsOperatorGroupByTest_$33_(RxInternalOperatorsOperatorGroupByTest_$33 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$2, initWithRxInternalOperatorsOperatorGroupByTest_$33_, outer$)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$33_$3

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"last group: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$33_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$33;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$33_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$33_$3;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$33_$3_init(RxInternalOperatorsOperatorGroupByTest_$33_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$33_$3 *new_RxInternalOperatorsOperatorGroupByTest_$33_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$3, init)
}

RxInternalOperatorsOperatorGroupByTest_$33_$3 *create_RxInternalOperatorsOperatorGroupByTest_$33_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$33_$3, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$34

- (void)callWithId:(NSString *)s {
  [((JavaUtilArrayList *) nil_chk(val$results_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsAndThenComplete", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$34 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$34;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$34 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$results_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$34 *new_RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$34, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$34 *create_RxInternalOperatorsOperatorGroupByTest_$34_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$34, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$35

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  @try {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$first_)) await];
  }
  @catch (JavaLangInterruptedException *e) {
    [sub onErrorWithNSException:e];
    return;
  }
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onCompleted];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$35 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$35;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$35 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$35 *new_RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$35, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$35 *create_RxInternalOperatorsOperatorGroupByTest_$35_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$35, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$36

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$36_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$36 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$36;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$36_init(RxInternalOperatorsOperatorGroupByTest_$36 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$36 *new_RxInternalOperatorsOperatorGroupByTest_$36_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$36, init)
}

RxInternalOperatorsOperatorGroupByTest_$36 *create_RxInternalOperatorsOperatorGroupByTest_$36_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$36, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$37

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) getKey])) intValue] < 3) {
    return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([group mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$37_$1_init()])) takeWithInt:2])) doOnCompletedWithRxFunctionsAction0:create_RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(self)];
  }
  else {
    return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([group subscribeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) delayWithLong:400 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$37_$3_init()])) doOnEachWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$37_$4_init()];
  }
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$37 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$37;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$37 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$37 *new_RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$37, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$37 *create_RxInternalOperatorsOperatorGroupByTest_$37_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$37, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$37_$1

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"first groups: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$37_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$37;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$37_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$37_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$37_$1_init(RxInternalOperatorsOperatorGroupByTest_$37_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$37_$1 *new_RxInternalOperatorsOperatorGroupByTest_$37_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$37_$1 *create_RxInternalOperatorsOperatorGroupByTest_$37_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$37_$2

- (void)call {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(this$0_->val$first_)) countDown];
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$37:(RxInternalOperatorsOperatorGroupByTest_$37 *)outer$ {
  RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$37:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$37;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorGroupByTest_$37;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$37_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$37_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37_$2 *self, RxInternalOperatorsOperatorGroupByTest_$37 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$37_$2 *new_RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$2, initWithRxInternalOperatorsOperatorGroupByTest_$37_, outer$)
}

RxInternalOperatorsOperatorGroupByTest_$37_$2 *create_RxInternalOperatorsOperatorGroupByTest_$37_$2_initWithRxInternalOperatorsOperatorGroupByTest_$37_(RxInternalOperatorsOperatorGroupByTest_$37 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$2, initWithRxInternalOperatorsOperatorGroupByTest_$37_, outer$)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$37_$3

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"last group: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$37_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$37;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$37_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$37_$3;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$37_$3_init(RxInternalOperatorsOperatorGroupByTest_$37_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$37_$3 *new_RxInternalOperatorsOperatorGroupByTest_$37_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$3, init)
}

RxInternalOperatorsOperatorGroupByTest_$37_$3 *create_RxInternalOperatorsOperatorGroupByTest_$37_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$3, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$37_$4

- (void)callWithId:(RxNotification *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"subscribeOn notification => ", t1)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$37_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorGroupByTest_$37;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Notification<-Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$37_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$37_$4;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$37_$4_init(RxInternalOperatorsOperatorGroupByTest_$37_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$37_$4 *new_RxInternalOperatorsOperatorGroupByTest_$37_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$4, init)
}

RxInternalOperatorsOperatorGroupByTest_$37_$4 *create_RxInternalOperatorsOperatorGroupByTest_$37_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$37_$4, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$38

- (void)callWithId:(RxNotification *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"outer notification => ", t1)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$38_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Notification<-Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$38 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$38;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$38_init(RxInternalOperatorsOperatorGroupByTest_$38 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$38 *new_RxInternalOperatorsOperatorGroupByTest_$38_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$38, init)
}

RxInternalOperatorsOperatorGroupByTest_$38 *create_RxInternalOperatorsOperatorGroupByTest_$38_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$38, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$39

- (void)callWithId:(NSString *)s {
  [((JavaUtilArrayList *) nil_chk(val$results_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenSubscribesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$39 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$39;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$39 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$results_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$39 *new_RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$39, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$39 *create_RxInternalOperatorsOperatorGroupByTest_$39_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$39, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$40

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  @try {
    [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$first_)) await];
  }
  @catch (JavaLangInterruptedException *e) {
    [sub onErrorWithNSException:e];
    return;
  }
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(3)];
  [sub onCompleted];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$40 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$40;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$40 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$40 *new_RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$40, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$40 *create_RxInternalOperatorsOperatorGroupByTest_$40_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$40, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$41

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$41_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$41 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$41;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$41_init(RxInternalOperatorsOperatorGroupByTest_$41 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$41 *new_RxInternalOperatorsOperatorGroupByTest_$41_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$41, init)
}

RxInternalOperatorsOperatorGroupByTest_$41 *create_RxInternalOperatorsOperatorGroupByTest_$41_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$41, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$42

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) getKey])) intValue] < 3) {
    return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([group mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$42_$1_init()])) takeWithInt:2])) doOnCompletedWithRxFunctionsAction0:create_RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(self)];
  }
  else {
    return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([group observeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) delayWithLong:400 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$42_$3_init()];
  }
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$first_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$42 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$42;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorGroupByTest_$42 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$first_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$42 *new_RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$42, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$42 *create_RxInternalOperatorsOperatorGroupByTest_$42_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$42, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$42_$1

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"first groups: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$42_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$42;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$42_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$42_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$42_$1_init(RxInternalOperatorsOperatorGroupByTest_$42_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$42_$1 *new_RxInternalOperatorsOperatorGroupByTest_$42_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$42_$1 *create_RxInternalOperatorsOperatorGroupByTest_$42_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$42_$2

- (void)call {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(this$0_->val$first_)) countDown];
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$42:(RxInternalOperatorsOperatorGroupByTest_$42 *)outer$ {
  RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$42:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$42;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorGroupByTest_$42;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$42_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$42_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42_$2 *self, RxInternalOperatorsOperatorGroupByTest_$42 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$42_$2 *new_RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$2, initWithRxInternalOperatorsOperatorGroupByTest_$42_, outer$)
}

RxInternalOperatorsOperatorGroupByTest_$42_$2 *create_RxInternalOperatorsOperatorGroupByTest_$42_$2_initWithRxInternalOperatorsOperatorGroupByTest_$42_(RxInternalOperatorsOperatorGroupByTest_$42 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$2, initWithRxInternalOperatorsOperatorGroupByTest_$42_, outer$)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$42_$3

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"last group: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$42_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$42;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$42_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$42_$3;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$42_$3_init(RxInternalOperatorsOperatorGroupByTest_$42_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$42_$3 *new_RxInternalOperatorsOperatorGroupByTest_$42_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$3, init)
}

RxInternalOperatorsOperatorGroupByTest_$42_$3 *create_RxInternalOperatorsOperatorGroupByTest_$42_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$42_$3, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$43

- (void)callWithId:(NSString *)s {
  [((JavaUtilArrayList *) nil_chk(val$results_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testFirstGroupsCompleteAndParentSlowToThenEmitFinalGroupsWhichThenObservesOnAndDelaysAndThenCompletes", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$43 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$43;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$43 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$results_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$43 *new_RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$43, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$43 *create_RxInternalOperatorsOperatorGroupByTest_$43_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$43, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$44

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$44_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedSubscribeOn", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$44 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$44;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$44_init(RxInternalOperatorsOperatorGroupByTest_$44 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$44 *new_RxInternalOperatorsOperatorGroupByTest_$44_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$44, init)
}

RxInternalOperatorsOperatorGroupByTest_$44 *create_RxInternalOperatorsOperatorGroupByTest_$44_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$44, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$45

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$45_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedSubscribeOn", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$45 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$45;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$45_init(RxInternalOperatorsOperatorGroupByTest_$45 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$45 *new_RxInternalOperatorsOperatorGroupByTest_$45_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$45, init)
}

RxInternalOperatorsOperatorGroupByTest_$45 *create_RxInternalOperatorsOperatorGroupByTest_$45_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$45, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$46

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  return [((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) subscribeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(group)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$46_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedSubscribeOn", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$46 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$46;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$46_init(RxInternalOperatorsOperatorGroupByTest_$46 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$46 *new_RxInternalOperatorsOperatorGroupByTest_$46_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$46, init)
}

RxInternalOperatorsOperatorGroupByTest_$46 *create_RxInternalOperatorsOperatorGroupByTest_$46_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$46, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$46_$1

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$@", @"Received: ", t1, @" on group : ", [((RxObservablesGroupedObservable *) nil_chk(val$group_)) getKey])];
  return JreStrcat("$@", @"first groups: ", t1);
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$group_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$group_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest_$46;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$46_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$46_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$46_$1 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$group_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$46_$1 *new_RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$46_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$46_$1 *create_RxInternalOperatorsOperatorGroupByTest_$46_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$46_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$47

- (void)callWithId:(RxNotification *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"notification => ", t1)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$47_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedSubscribeOn", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Notification<-Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$47 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$47;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$47_init(RxInternalOperatorsOperatorGroupByTest_$47 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$47 *new_RxInternalOperatorsOperatorGroupByTest_$47_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$47, init)
}

RxInternalOperatorsOperatorGroupByTest_$47 *create_RxInternalOperatorsOperatorGroupByTest_$47_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$47, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$48

- (void)callWithId:(NSString *)s {
  [((JavaUtilArrayList *) nil_chk(val$results_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedSubscribeOn", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$48 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$48;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$48 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$results_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$48 *new_RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$48, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$48 *create_RxInternalOperatorsOperatorGroupByTest_$48_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$48, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$49

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [sub onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  [sub onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$49_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedObserveOn", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$49 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$49;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$49_init(RxInternalOperatorsOperatorGroupByTest_$49 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$49 *new_RxInternalOperatorsOperatorGroupByTest_$49_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$49, init)
}

RxInternalOperatorsOperatorGroupByTest_$49 *create_RxInternalOperatorsOperatorGroupByTest_$49_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$49, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$50

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$50_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedObserveOn", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$50 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$50;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$50_init(RxInternalOperatorsOperatorGroupByTest_$50 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$50 *new_RxInternalOperatorsOperatorGroupByTest_$50_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$50, init)
}

RxInternalOperatorsOperatorGroupByTest_$50 *create_RxInternalOperatorsOperatorGroupByTest_$50_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$50, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$51

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)group {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(group)) observeOnWithRxScheduler:RxSchedulersSchedulers_newThread()])) delayWithLong:400 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$51_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$51_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedObserveOn", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$51 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$51;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$51_init(RxInternalOperatorsOperatorGroupByTest_$51 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$51 *new_RxInternalOperatorsOperatorGroupByTest_$51_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$51, init)
}

RxInternalOperatorsOperatorGroupByTest_$51 *create_RxInternalOperatorsOperatorGroupByTest_$51_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$51, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$51_$1

- (NSString *)callWithId:(JavaLangInteger *)t1 {
  return JreStrcat("$@", @"first groups: ", t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$51_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$51;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$51_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$51_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$51_$1_init(RxInternalOperatorsOperatorGroupByTest_$51_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$51_$1 *new_RxInternalOperatorsOperatorGroupByTest_$51_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$51_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$51_$1 *create_RxInternalOperatorsOperatorGroupByTest_$51_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$51_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$52

- (void)callWithId:(NSString *)s {
  [((JavaUtilArrayList *) nil_chk(val$results_)) addWithId:s];
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$results_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilArrayList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$results_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ljava/lang/String;>;)V", "Ljava/util/ArrayList<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupsWithNestedObserveOn", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$52 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$52;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(RxInternalOperatorsOperatorGroupByTest_$52 *self, JavaUtilArrayList *capture$0) {
  JreStrongAssign(&self->val$results_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$52 *new_RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$52, initWithJavaUtilArrayList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$52 *create_RxInternalOperatorsOperatorGroupByTest_$52_initWithJavaUtilArrayList_(JavaUtilArrayList *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$52, initWithJavaUtilArrayList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$53

- (void)callWithId:(RxSubscriber *)op {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$subscribeCounter_)) incrementAndGet];
  jint i = 0;
  while (![((RxSubscriber *) nil_chk(op)) isUnsubscribed]) {
    i++;
    RxInternalOperatorsOperatorGroupByTest_Event *e = create_RxInternalOperatorsOperatorGroupByTest_Event_init();
    e->source_ = i % val$numGroups_;
    JreStrongAssign(&e->message_, JreStrcat("$I", @"Event-", i));
    [op onNextWithId:e];
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$sentEventCounter_)) incrementAndGet];
  }
  [op onCompleted];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0
                                                      withInt:(jint)capture$1
                    withJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$2 {
  RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0, capture$1, capture$2);
  return self;
}

- (void)dealloc {
  RELEASE_(val$subscribeCounter_);
  RELEASE_(val$sentEventCounter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:withInt:withJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$subscribeCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$numGroups_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sentEventCounter_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/internal/operators/OperatorGroupByTest$Event;>;)V", "LJavaUtilConcurrentAtomicAtomicInteger;ILJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "SYNC_INFINITE_OBSERVABLE_OF_EVENTWithInt:withJavaUtilConcurrentAtomicAtomicInteger:withJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lrx/internal/operators/OperatorGroupByTest$Event;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$53 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 3, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$53;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorGroupByTest_$53 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2) {
  JreStrongAssign(&self->val$subscribeCounter_, capture$0);
  self->val$numGroups_ = capture$1;
  JreStrongAssign(&self->val$sentEventCounter_, capture$2);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$53 *new_RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$53, initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1, capture$2)
}

RxInternalOperatorsOperatorGroupByTest_$53 *create_RxInternalOperatorsOperatorGroupByTest_$53_initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0, jint capture$1, JavaUtilConcurrentAtomicAtomicInteger *capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$53, initWithJavaUtilConcurrentAtomicAtomicInteger_withInt_withJavaUtilConcurrentAtomicAtomicInteger_, capture$0, capture$1, capture$2)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$2

- (JavaLangBoolean *)callWithId:(JavaLangLong *)n {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangLong *) nil_chk(n)) longLongValue] % 2 == 0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Long;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$2_init(RxInternalOperatorsOperatorGroupByTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$2 *new_RxInternalOperatorsOperatorGroupByTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$2, init)
}

RxInternalOperatorsOperatorGroupByTest_$2 *create_RxInternalOperatorsOperatorGroupByTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$2, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$3

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)n {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(n)) intValue] % 2 == 0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$3;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$3_init(RxInternalOperatorsOperatorGroupByTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$3 *new_RxInternalOperatorsOperatorGroupByTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$3, init)
}

RxInternalOperatorsOperatorGroupByTest_$3 *create_RxInternalOperatorsOperatorGroupByTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$3, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$54

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(g)) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(g)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$54_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByBackpressure", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$54 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$54;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$54_init(RxInternalOperatorsOperatorGroupByTest_$54 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$54 *new_RxInternalOperatorsOperatorGroupByTest_$54_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$54, init)
}

RxInternalOperatorsOperatorGroupByTest_$54 *create_RxInternalOperatorsOperatorGroupByTest_$54_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$54, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$54_$1

- (NSString *)callWithId:(JavaLangInteger *)l {
  if ([((JavaLangBoolean *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(val$g_)) getKey])) booleanValue]) {
    @try {
      JavaLangThread_sleepWithLong_(1);
    }
    @catch (JavaLangInterruptedException *e) {
    }
    return JreStrcat("@$", l, @" is even.");
  }
  else {
    return JreStrcat("@$", l, @" is odd.");
  }
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$g_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest_$54;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$54_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$54_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$54_$1 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$g_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$54_$1 *new_RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$54_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$54_$1 *create_RxInternalOperatorsOperatorGroupByTest_$54_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$54_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$55

- (id)callWithId:(id)t1 {
  return val$value_;
}

- (instancetype)initWithId:(id)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "(TT;)TR;", "(TR;)V", "TR;", "LRxInternalOperatorsOperatorGroupByTest;", "justWithId:", "Ljava/lang/Object;Lrx/functions/Func1<TT;TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$55 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$55;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(RxInternalOperatorsOperatorGroupByTest_$55 *self, id capture$0) {
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$55 *new_RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$55, initWithId_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$55 *create_RxInternalOperatorsOperatorGroupByTest_$55_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$55, initWithId_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$56

- (id)callWithId:(JavaLangInteger *)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$56_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)TT;", "LRxInternalOperatorsOperatorGroupByTest;", "failWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$56 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$56;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$56_init(RxInternalOperatorsOperatorGroupByTest_$56 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$56 *new_RxInternalOperatorsOperatorGroupByTest_$56_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$56, init)
}

RxInternalOperatorsOperatorGroupByTest_$56 *create_RxInternalOperatorsOperatorGroupByTest_$56_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$56, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$57

- (id)callWithId:(id)t1 {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Forced failure");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$57_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "(TT;)TR;", "LRxInternalOperatorsOperatorGroupByTest;", "fail2WithId:", "Ljava/lang/Object;Lrx/functions/Func1<TT;TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$57 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$57;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$57_init(RxInternalOperatorsOperatorGroupByTest_$57 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$57 *new_RxInternalOperatorsOperatorGroupByTest_$57_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$57, init)
}

RxInternalOperatorsOperatorGroupByTest_$57 *create_RxInternalOperatorsOperatorGroupByTest_$57_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$57, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$4

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t1 {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t1)) intValue] * 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$4;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$4_init(RxInternalOperatorsOperatorGroupByTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$4 *new_RxInternalOperatorsOperatorGroupByTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$4, init)
}

RxInternalOperatorsOperatorGroupByTest_$4 *create_RxInternalOperatorsOperatorGroupByTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$4, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$58

- (NSString *)callWithId:(NSString *)t1 {
  return [((NSString *) nil_chk([((NSString *) nil_chk(t1)) trim])) lowercaseString];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$58_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorGroupByTest;", "normalBehavior", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$58 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$58;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$58_init(RxInternalOperatorsOperatorGroupByTest_$58 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$58 *new_RxInternalOperatorsOperatorGroupByTest_$58_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$58, init)
}

RxInternalOperatorsOperatorGroupByTest_$58 *create_RxInternalOperatorsOperatorGroupByTest_$58_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$58, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$59

- (NSString *)callWithId:(NSString *)t1 {
  return JreStrcat("$$", t1, t1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$59_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorGroupByTest;", "normalBehavior", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$59 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$59;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$59_init(RxInternalOperatorsOperatorGroupByTest_$59 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$59 *new_RxInternalOperatorsOperatorGroupByTest_$59_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$59, init)
}

RxInternalOperatorsOperatorGroupByTest_$59 *create_RxInternalOperatorsOperatorGroupByTest_$59_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$59, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$60

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"-----------> NEXT: ", [((RxObservablesGroupedObservable *) nil_chk(g)) getKey])];
  return [((RxObservable *) nil_chk([g takeWithInt:2])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(g)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$60_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "normalBehavior", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$60 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$60;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$60_init(RxInternalOperatorsOperatorGroupByTest_$60 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$60 *new_RxInternalOperatorsOperatorGroupByTest_$60_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$60, init)
}

RxInternalOperatorsOperatorGroupByTest_$60 *create_RxInternalOperatorsOperatorGroupByTest_$60_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$60, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$60_$1

- (NSString *)callWithId:(NSString *)v {
  return JreStrcat("$CI", [((RxObservablesGroupedObservable *) nil_chk(val$g_)) getKey], '-', count_++);
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$g_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest_$60;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$60_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$60_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$60_$1 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$g_, capture$0);
  NSObject_init(self);
  self->count_ = 0;
}

RxInternalOperatorsOperatorGroupByTest_$60_$1 *new_RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$60_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$60_$1 *create_RxInternalOperatorsOperatorGroupByTest_$60_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$60_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$61

- (void)callWithId:(RxObservablesGroupedObservable *)t1 {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$inner_)) setWithId:t1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$inner_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inner_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/atomic/AtomicReference<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testExceptionIfSubscribeToChildMoreThanOnce", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$61 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$61;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(RxInternalOperatorsOperatorGroupByTest_$61 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  JreStrongAssign(&self->val$inner_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$61 *new_RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$61, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$61 *create_RxInternalOperatorsOperatorGroupByTest_$61_initWithJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentAtomicAtomicReference *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$61, initWithJavaUtilConcurrentAtomicAtomicReference_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$62

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(g)) doOnCompletedWithRxFunctionsAction0:create_RxInternalOperatorsOperatorGroupByTest_$62_$1_init()])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(g)])) doOnCompletedWithRxFunctionsAction0:create_RxInternalOperatorsOperatorGroupByTest_$62_$3_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$62_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByBackpressure2", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$62 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$62;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$62_init(RxInternalOperatorsOperatorGroupByTest_$62 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$62 *new_RxInternalOperatorsOperatorGroupByTest_$62_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$62, init)
}

RxInternalOperatorsOperatorGroupByTest_$62 *create_RxInternalOperatorsOperatorGroupByTest_$62_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$62, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$62_$1

- (void)call {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"//////////////////// COMPLETED-A"];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$62_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorGroupByTest_$62;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$62_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$62_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$62_$1_init(RxInternalOperatorsOperatorGroupByTest_$62_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$62_$1 *new_RxInternalOperatorsOperatorGroupByTest_$62_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$62_$1 *create_RxInternalOperatorsOperatorGroupByTest_$62_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$62_$2

- (NSString *)callWithId:(JavaLangInteger *)l {
  if ([((JavaLangBoolean *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(val$g_)) getKey])) booleanValue]) {
    if (c_++ < 400) {
      @try {
        JavaLangThread_sleepWithLong_(1);
      }
      @catch (JavaLangInterruptedException *e) {
      }
    }
    return JreStrcat("@$", l, @" is even.");
  }
  else {
    return JreStrcat("@$", l, @" is odd.");
  }
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$g_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest_$62;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$62_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$62_$2;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$62_$2 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$g_, capture$0);
  NSObject_init(self);
  self->c_ = 0;
}

RxInternalOperatorsOperatorGroupByTest_$62_$2 *new_RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$2, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$62_$2 *create_RxInternalOperatorsOperatorGroupByTest_$62_$2_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$2, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$62_$3

- (void)call {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"//////////////////// COMPLETED-B"];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$62_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorGroupByTest_$62;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$62_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$62_$3;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$62_$3_init(RxInternalOperatorsOperatorGroupByTest_$62_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$62_$3 *new_RxInternalOperatorsOperatorGroupByTest_$62_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$3, init)
}

RxInternalOperatorsOperatorGroupByTest_$62_$3 *create_RxInternalOperatorsOperatorGroupByTest_$62_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$62_$3, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$63

- (void)callWithId:(RxNotification *)t1 {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"NEXT: ", t1)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$63_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<-Ljava/lang/String;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByBackpressure2", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Notification<-Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$63 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$63;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$63_init(RxInternalOperatorsOperatorGroupByTest_$63 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$63 *new_RxInternalOperatorsOperatorGroupByTest_$63_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$63, init)
}

RxInternalOperatorsOperatorGroupByTest_$63 *create_RxInternalOperatorsOperatorGroupByTest_$63_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$63, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$64

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(g)) takeWithInt:2])) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(g)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$64_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testgroupByBackpressure2", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$64 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$64;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$64_init(RxInternalOperatorsOperatorGroupByTest_$64 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$64 *new_RxInternalOperatorsOperatorGroupByTest_$64_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$64, init)
}

RxInternalOperatorsOperatorGroupByTest_$64 *create_RxInternalOperatorsOperatorGroupByTest_$64_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$64, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$64_$1

- (NSString *)callWithId:(JavaLangInteger *)l {
  if ([((JavaLangBoolean *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(val$g_)) getKey])) booleanValue]) {
    @try {
      JavaLangThread_sleepWithLong_(1);
    }
    @catch (JavaLangInterruptedException *e) {
    }
    return JreStrcat("@$", l, @" is even.");
  }
  else {
    return JreStrcat("@$", l, @" is odd.");
  }
}

- (instancetype)initWithRxObservablesGroupedObservable:(RxObservablesGroupedObservable *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObservablesGroupedObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$g_", "LRxObservablesGroupedObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)V", "Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest_$64;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$64_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$64_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxInternalOperatorsOperatorGroupByTest_$64_$1 *self, RxObservablesGroupedObservable *capture$0) {
  JreStrongAssign(&self->val$g_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$64_$1 *new_RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$64_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$64_$1 *create_RxInternalOperatorsOperatorGroupByTest_$64_$1_initWithRxObservablesGroupedObservable_(RxObservablesGroupedObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$64_$1, initWithRxObservablesGroupedObservable_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$5

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)t {
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$5;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$5_init(RxInternalOperatorsOperatorGroupByTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$5 *new_RxInternalOperatorsOperatorGroupByTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$5, init)
}

RxInternalOperatorsOperatorGroupByTest_$5 *create_RxInternalOperatorsOperatorGroupByTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$5, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$65

- (NSString *)callWithId:(NSString *)value {
  return nil;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$65_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByWithNullKey", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$65 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$65;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$65_init(RxInternalOperatorsOperatorGroupByTest_$65 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$65 *new_RxInternalOperatorsOperatorGroupByTest_$65_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$65, init)
}

RxInternalOperatorsOperatorGroupByTest_$65 *create_RxInternalOperatorsOperatorGroupByTest_$65_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$65, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$66

- (void)callWithId:(RxObservablesGroupedObservable *)groupedObservable {
  IOSObjectArray_Set(nil_chk(val$key_), 0, [((RxObservablesGroupedObservable *) nil_chk(groupedObservable)) getKey]);
  [groupedObservable subscribeWithRxFunctionsAction1:create_RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(self)];
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)capture$0
                     withJavaUtilList:(id<JavaUtilList>)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$key_);
  RELEASE_(val$values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithNSStringArray:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$key_", "[LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$values_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;)V", "[LNSString;LJavaUtilList;", "([Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)V", "Ljava/util/List<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByWithNullKey", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$66 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$66;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$66 *self, IOSObjectArray *capture$0, id<JavaUtilList> capture$1) {
  JreStrongAssign(&self->val$key_, capture$0);
  JreStrongAssign(&self->val$values_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$66 *new_RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(IOSObjectArray *capture$0, id<JavaUtilList> capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$66, initWithNSStringArray_withJavaUtilList_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$66 *create_RxInternalOperatorsOperatorGroupByTest_$66_initWithNSStringArray_withJavaUtilList_(IOSObjectArray *capture$0, id<JavaUtilList> capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$66, initWithNSStringArray_withJavaUtilList_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$66_$1

- (void)callWithId:(NSString *)s {
  [((id<JavaUtilList>) nil_chk(this$0_->val$values_)) addWithId:s];
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$66:(RxInternalOperatorsOperatorGroupByTest_$66 *)outer$ {
  RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$66:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$66;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorGroupByTest_$66;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$66_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$66_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66_$1 *self, RxInternalOperatorsOperatorGroupByTest_$66 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$66_$1 *new_RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$66_$1, initWithRxInternalOperatorsOperatorGroupByTest_$66_, outer$)
}

RxInternalOperatorsOperatorGroupByTest_$66_$1 *create_RxInternalOperatorsOperatorGroupByTest_$66_$1_initWithRxInternalOperatorsOperatorGroupByTest_$66_(RxInternalOperatorsOperatorGroupByTest_$66 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$66_$1, initWithRxInternalOperatorsOperatorGroupByTest_$66_, outer$)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$67

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:val$s_];
}

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxSubscription;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByUnsubscribe", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$67 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$67;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(RxInternalOperatorsOperatorGroupByTest_$67 *self, id<RxSubscription> capture$0) {
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$67 *new_RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$67, initWithRxSubscription_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$67 *create_RxInternalOperatorsOperatorGroupByTest_$67_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$67, initWithRxSubscription_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$68

- (JavaLangInteger *)callWithId:(JavaLangInteger *)integer {
  return nil;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$68_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByUnsubscribe", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$68 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$68;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$68_init(RxInternalOperatorsOperatorGroupByTest_$68 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$68 *new_RxInternalOperatorsOperatorGroupByTest_$68_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$68, init)
}

RxInternalOperatorsOperatorGroupByTest_$68 *create_RxInternalOperatorsOperatorGroupByTest_$68_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$68, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$69

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(RxObservablesGroupedObservable *)o {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(o)) getKey])) intValue] == 0) {
    [o subscribeWithRxSubscriber:val$inner1_];
  }
  else {
    [o subscribeWithRxSubscriber:val$inner2_];
  }
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$69 class]);
  RELEASE_(val$inner1_);
  RELEASE_(val$inner2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxObserversTestSubscriber:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inner1_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$inner2_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "LRxObserversTestSubscriber;LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByShouldPropagateError", "Lrx/Subscriber<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$69 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$69;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$69 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$inner1_, capture$0);
  JreStrongAssign(&self->val$inner2_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$69 *new_RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$69, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$69 *create_RxInternalOperatorsOperatorGroupByTest_$69_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$69, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$70

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) onNextWithId:JavaLangInteger_valueOfWithInt_(0)];
  [subscriber onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
  [subscriber onErrorWithNSException:val$e_];
}

- (instancetype)initWithNSException:(NSException *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LNSException;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByShouldPropagateError", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$70 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$70;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(RxInternalOperatorsOperatorGroupByTest_$70 *self, NSException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$70 *new_RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$70, initWithNSException_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$70 *create_RxInternalOperatorsOperatorGroupByTest_$70_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$70, initWithNSException_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$71

- (JavaLangInteger *)callWithId:(JavaLangInteger *)i {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i)) intValue] % 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$71_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupByShouldPropagateError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$71 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$71;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$71_init(RxInternalOperatorsOperatorGroupByTest_$71 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$71 *new_RxInternalOperatorsOperatorGroupByTest_$71_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$71, init)
}

RxInternalOperatorsOperatorGroupByTest_$71 *create_RxInternalOperatorsOperatorGroupByTest_$71_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$71, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$72

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return JavaLangInteger_valueOfWithInt_(1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$72_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testRequestOverflow", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$72 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$72;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$72_init(RxInternalOperatorsOperatorGroupByTest_$72 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$72 *new_RxInternalOperatorsOperatorGroupByTest_$72_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$72, init)
}

RxInternalOperatorsOperatorGroupByTest_$72 *create_RxInternalOperatorsOperatorGroupByTest_$72_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$72, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$73

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return g;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$73_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testRequestOverflow", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$73 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$73;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$73_init(RxInternalOperatorsOperatorGroupByTest_$73 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$73 *new_RxInternalOperatorsOperatorGroupByTest_$73_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$73, init)
}

RxInternalOperatorsOperatorGroupByTest_$73 *create_RxInternalOperatorsOperatorGroupByTest_$73_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$73, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$74

- (void)onStart {
  [self requestWithLong:2];
}

- (void)onCompleted {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$completed_)) setWithBoolean:true];
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(JavaLangInteger *)t {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:t];
  [self requestWithLong:JavaLangLong_MAX_VALUE - 1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$74 class]);
  RELEASE_(val$completed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$completed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangInteger;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorGroupByTest;", "testRequestOverflow", "Lrx/Subscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$74 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$74;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorGroupByTest_$74 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$completed_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$74 *new_RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$74, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$74 *create_RxInternalOperatorsOperatorGroupByTest_$74_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$74, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$75

- (id)callWithId:(JavaLangInteger *)i {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(i)) intValue] % (JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) + 2));
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$75_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testBackpressureObserveOnOuter", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$75 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$75;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$75_init(RxInternalOperatorsOperatorGroupByTest_$75 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$75 *new_RxInternalOperatorsOperatorGroupByTest_$75_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$75, init)
}

RxInternalOperatorsOperatorGroupByTest_$75 *create_RxInternalOperatorsOperatorGroupByTest_$75_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$75, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$76

- (id)callWithId:(JavaLangInteger *)v {
  return v;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$76_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testBackpressureInnerDoesntOverflowOuter", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$76 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$76;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$76_init(RxInternalOperatorsOperatorGroupByTest_$76 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$76 *new_RxInternalOperatorsOperatorGroupByTest_$76_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$76, init)
}

RxInternalOperatorsOperatorGroupByTest_$76 *create_RxInternalOperatorsOperatorGroupByTest_$76_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$76, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$77

- (void)callWithId:(RxObservablesGroupedObservable *)g {
  [((RxObservablesGroupedObservable *) nil_chk(g)) subscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$77_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Object;Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorGroupByTest;", "testBackpressureInnerDoesntOverflowOuter", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<Ljava/lang/Object;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$77 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$77;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$77_init(RxInternalOperatorsOperatorGroupByTest_$77 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$77 *new_RxInternalOperatorsOperatorGroupByTest_$77_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$77, init)
}

RxInternalOperatorsOperatorGroupByTest_$77 *create_RxInternalOperatorsOperatorGroupByTest_$77_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$77, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$78

- (id)callWithId:(JavaLangInteger *)v {
  return JavaLangInteger_valueOfWithInt_(1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$78_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testOneGroupInnerRequestsTwiceBuffer", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$78 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$78;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$78_init(RxInternalOperatorsOperatorGroupByTest_$78 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$78 *new_RxInternalOperatorsOperatorGroupByTest_$78_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$78, init)
}

RxInternalOperatorsOperatorGroupByTest_$78 *create_RxInternalOperatorsOperatorGroupByTest_$78_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$78, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$79

- (void)callWithId:(RxObservablesGroupedObservable *)g {
  [((RxObservablesGroupedObservable *) nil_chk(g)) subscribeWithRxSubscriber:val$ts2_];
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ts2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ts2_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Object;Ljava/lang/Integer;>;)V", "LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/lang/Object;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testOneGroupInnerRequestsTwiceBuffer", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/observables/GroupedObservable<Ljava/lang/Object;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$79 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$79;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$79 *self, RxObserversTestSubscriber *capture$0) {
  JreStrongAssign(&self->val$ts2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$79 *new_RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$79, initWithRxObserversTestSubscriber_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$79 *create_RxInternalOperatorsOperatorGroupByTest_$79_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$79, initWithRxObserversTestSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$80

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id<JavaUtilList>)o {
  [((RxObservable *) nil_chk([((id<JavaUtilList>) nil_chk(o)) getWithInt:0])) subscribeWithRxSubscriber:val$inner1_];
  [((RxObservable *) nil_chk([o getWithInt:1])) subscribeWithRxSubscriber:val$inner2_];
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$80 class]);
  RELEASE_(val$inner1_);
  RELEASE_(val$inner2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxObserversTestSubscriber:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inner1_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$inner2_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaUtilList;", "(Ljava/util/List<Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;>;)V", "LRxObserversTestSubscriber;LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;)V", "Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedObservableCollection", "Lrx/Subscriber<Ljava/util/List<Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$80 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$80;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$80 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$inner1_, capture$0);
  JreStrongAssign(&self->val$inner2_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$80 *new_RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$80, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$80 *create_RxInternalOperatorsOperatorGroupByTest_$80_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$80, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$81

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)pair {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(pair)) intValue] % 2 == 1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$81_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedObservableCollection", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$81 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$81;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$81_init(RxInternalOperatorsOperatorGroupByTest_$81 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$81 *new_RxInternalOperatorsOperatorGroupByTest_$81_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$81, init)
}

RxInternalOperatorsOperatorGroupByTest_$81 *create_RxInternalOperatorsOperatorGroupByTest_$81_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$81, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$82

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)oddOrEven {
  return [((RxObservablesGroupedObservable *) nil_chk(oddOrEven)) toList];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$82_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testGroupedObservableCollection", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$82 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$82;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$82_init(RxInternalOperatorsOperatorGroupByTest_$82 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$82 *new_RxInternalOperatorsOperatorGroupByTest_$82_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$82, init)
}

RxInternalOperatorsOperatorGroupByTest_$82 *create_RxInternalOperatorsOperatorGroupByTest_$82_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$82, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$83

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(RxObservable *)o {
  [((RxObservable *) nil_chk(o)) subscribeWithRxSubscriber:[((id<JavaUtilList>) nil_chk(val$inners_)) getWithInt:toInner_++]];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$83 class]);
  RELEASE_(val$inners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "toInner_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$inners_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LRxObservable;", "(Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;)V", "LJavaUtilList;", "(Ljava/util/List<Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;>;)V", "Ljava/util/List<Lrx/observers/TestSubscriber<Ljava/util/List<Ljava/lang/Integer;>;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testCollectedGroups", "Lrx/Subscriber<Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$83 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$83;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$83 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$inners_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$83 *new_RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$83, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$83 *create_RxInternalOperatorsOperatorGroupByTest_$83_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$83, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$84

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)pair {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(pair)) intValue] % 2 == 1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$84_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testCollectedGroups", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$84 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$84;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$84_init(RxInternalOperatorsOperatorGroupByTest_$84 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$84 *new_RxInternalOperatorsOperatorGroupByTest_$84_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$84, init)
}

RxInternalOperatorsOperatorGroupByTest_$84 *create_RxInternalOperatorsOperatorGroupByTest_$84_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$84, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$85

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)booleanIntegerGroupedObservable {
  return [((RxObservablesGroupedObservable *) nil_chk(booleanIntegerGroupedObservable)) toList];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$85_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testCollectedGroups", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Boolean;Ljava/lang/Integer;>;Lrx/Observable<Ljava/util/List<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$85 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$85;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$85_init(RxInternalOperatorsOperatorGroupByTest_$85 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$85 *new_RxInternalOperatorsOperatorGroupByTest_$85_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$85, init)
}

RxInternalOperatorsOperatorGroupByTest_$85 *create_RxInternalOperatorsOperatorGroupByTest_$85_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$85, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$86

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id<JavaUtilMap>)integerObservableMap {
  [((RxObservable *) nil_chk([((id<JavaUtilMap>) nil_chk(integerObservableMap)) getWithId:JavaLangInteger_valueOfWithInt_(0)])) subscribeWithRxSubscriber:val$inner1_];
  [((RxObservable *) nil_chk([integerObservableMap getWithId:JavaLangInteger_valueOfWithInt_(1)])) subscribeWithRxSubscriber:val$inner2_];
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0
                    withRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$1 {
  RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$86 class]);
  RELEASE_(val$inner1_);
  RELEASE_(val$inner2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxObserversTestSubscriber:withRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inner1_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$inner2_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;)V", "LRxObserversTestSubscriber;LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testMappedCollectedGroups", "Lrx/Subscriber<Ljava/util/Map<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$86 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$86;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$86 *self, RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  JreStrongAssign(&self->val$inner1_, capture$0);
  JreStrongAssign(&self->val$inner2_, capture$1);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$86 *new_RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$86, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

RxInternalOperatorsOperatorGroupByTest_$86 *create_RxInternalOperatorsOperatorGroupByTest_$86_initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0, RxObserversTestSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$86, initWithRxObserversTestSubscriber_withRxObserversTestSubscriber_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$87

- (JavaLangInteger *)callWithId:(JavaLangInteger *)pair {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(pair)) intValue] % 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$87_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testMappedCollectedGroups", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$87 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$87;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$87_init(RxInternalOperatorsOperatorGroupByTest_$87 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$87 *new_RxInternalOperatorsOperatorGroupByTest_$87_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$87, init)
}

RxInternalOperatorsOperatorGroupByTest_$87 *create_RxInternalOperatorsOperatorGroupByTest_$87_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$87, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$88

- (JavaLangInteger *)callWithId:(RxObservablesGroupedObservable *)group {
  return [((RxObservablesGroupedObservable *) nil_chk(group)) getKey];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$88_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Ljava/lang/Integer;", "LRxInternalOperatorsOperatorGroupByTest;", "testMappedCollectedGroups", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$88 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$88;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$88_init(RxInternalOperatorsOperatorGroupByTest_$88 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$88 *new_RxInternalOperatorsOperatorGroupByTest_$88_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$88, init)
}

RxInternalOperatorsOperatorGroupByTest_$88 *create_RxInternalOperatorsOperatorGroupByTest_$88_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$88, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$89

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)integerGroup {
  return [((RxObservablesGroupedObservable *) nil_chk(integerGroup)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_$89_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$89_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testMappedCollectedGroups", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$89 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$89;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$89_init(RxInternalOperatorsOperatorGroupByTest_$89 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$89 *new_RxInternalOperatorsOperatorGroupByTest_$89_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$89, init)
}

RxInternalOperatorsOperatorGroupByTest_$89 *create_RxInternalOperatorsOperatorGroupByTest_$89_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$89, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$89_$1

- (JavaLangInteger *)callWithId:(JavaLangInteger *)integer {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(integer)) intValue] * 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$89_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest_$89;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$89_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$89_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$89_$1_init(RxInternalOperatorsOperatorGroupByTest_$89_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$89_$1 *new_RxInternalOperatorsOperatorGroupByTest_$89_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$89_$1, init)
}

RxInternalOperatorsOperatorGroupByTest_$89_$1 *create_RxInternalOperatorsOperatorGroupByTest_$89_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$89_$1, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$90

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(RxObservablesGroupedObservable *)o {
  if ([((JavaLangInteger *) nil_chk([((RxObservablesGroupedObservable *) nil_chk(o)) getKey])) intValue] == 1) {
    [o subscribeWithRxSubscriber:val$inner1_];
  }
}

- (instancetype)initWithRxObserversTestSubscriber:(RxObserversTestSubscriber *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorGroupByTest_$90 class]);
  RELEASE_(val$inner1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxObserversTestSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inner1_", "LRxObserversTestSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)V", "LRxObserversTestSubscriber;", "(Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;)V", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "testSkippedGroup", "Lrx/Subscriber<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$90 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$90;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxInternalOperatorsOperatorGroupByTest_$90 *self, RxObserversTestSubscriber *capture$0) {
  JreStrongAssign(&self->val$inner1_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$90 *new_RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$90, initWithRxObserversTestSubscriber_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$90 *create_RxInternalOperatorsOperatorGroupByTest_$90_initWithRxObserversTestSubscriber_(RxObserversTestSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$90, initWithRxObserversTestSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$91

- (JavaLangInteger *)callWithId:(JavaLangInteger *)pair {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(pair)) intValue] % 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$91_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "testSkippedGroup", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$91 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$91;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$91_init(RxInternalOperatorsOperatorGroupByTest_$91 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$91 *new_RxInternalOperatorsOperatorGroupByTest_$91_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$91, init)
}

RxInternalOperatorsOperatorGroupByTest_$91 *create_RxInternalOperatorsOperatorGroupByTest_$91_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$91, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$92

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t)) intValue] / 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$92_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "mapFactoryEvictionWorks", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$92 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$92;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$92_init(RxInternalOperatorsOperatorGroupByTest_$92 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$92 *new_RxInternalOperatorsOperatorGroupByTest_$92_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$92, init)
}

RxInternalOperatorsOperatorGroupByTest_$92 *create_RxInternalOperatorsOperatorGroupByTest_$92_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$92, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$93

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)evicted {
  return create_RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(self, evicted);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$evictedKeys_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$evictedKeys_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Ljava/lang/Integer;>;)Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Integer;>;)V", "Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest;", "mapFactoryEvictionWorks", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/functions/Action1<Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$93 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$93;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(RxInternalOperatorsOperatorGroupByTest_$93 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$evictedKeys_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$93 *new_RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$93, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$93 *create_RxInternalOperatorsOperatorGroupByTest_$93_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$93, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$93_$1

- (id)putWithId:(JavaLangInteger *)key
         withId:(id)value {
  if ([self size] >= 5) {
    [super removeWithId:lastKey_];
    [((id<RxFunctionsAction1>) nil_chk(val$evicted_)) callWithId:lastKey_];
    [((id<JavaUtilList>) nil_chk(this$0_->val$evictedKeys_)) addWithId:lastKey_];
  }
  id result = [super putWithId:key withId:value];
  JreStrongAssign(&lastKey_, key);
  return result;
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$93:(RxInternalOperatorsOperatorGroupByTest_$93 *)outer$
                                            withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(lastKey_);
  RELEASE_(val$evicted_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(putWithId:withId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$93:withRxFunctionsAction1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$93;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalOperatorsOperatorGroupByTest_$93_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "lastKey_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$evicted_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "put", "LJavaLangInteger;LNSObject;", "(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;", "LRxInternalOperatorsOperatorGroupByTest_$93;LRxFunctionsAction1;", "(Lrx/internal/operators/OperatorGroupByTest$93;Lrx/functions/Action1<Ljava/lang/Integer;>;)V", "Lrx/functions/Action1<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorGroupByTest_$93;", "callWithId:", "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$93_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 4, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$93_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93_$1 *self, RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$evicted_, capture$0);
  JavaUtilConcurrentConcurrentHashMap_init(self);
  JreStrongAssign(&self->lastKey_, nil);
}

RxInternalOperatorsOperatorGroupByTest_$93_$1 *new_RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$93_$1, initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_, outer$, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$93_$1 *create_RxInternalOperatorsOperatorGroupByTest_$93_$1_initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_(RxInternalOperatorsOperatorGroupByTest_$93 *outer$, id<RxFunctionsAction1> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$93_$1, initWithRxInternalOperatorsOperatorGroupByTest_$93_withRxFunctionsAction1_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$94

- (RxObservable *)callWithId:(RxObservablesGroupedObservable *)g {
  return [((RxObservablesGroupedObservable *) nil_chk(g)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorGroupByTest_MapFactoryEvictionFunction_initWithRxObservablesGroupedObservable_(g)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$94_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservablesGroupedObservable;", "(Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalOperatorsOperatorGroupByTest;", "mapFactoryEvictionWorks", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/observables/GroupedObservable<Ljava/lang/Integer;Ljava/lang/Integer;>;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$94 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$94;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$94_init(RxInternalOperatorsOperatorGroupByTest_$94 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$94 *new_RxInternalOperatorsOperatorGroupByTest_$94_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$94, init)
}

RxInternalOperatorsOperatorGroupByTest_$94 *create_RxInternalOperatorsOperatorGroupByTest_$94_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$94, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$95

- (NSString *)callWithId:(JavaLangInteger *)x {
  return JreStrcat("IC@", ([((JavaLangInteger *) nil_chk(x)) intValue] / 10), ':', x);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$95_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "mapFactoryEvictionWorks", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$95 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$95;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$95_init(RxInternalOperatorsOperatorGroupByTest_$95 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$95 *new_RxInternalOperatorsOperatorGroupByTest_$95_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$95, init)
}

RxInternalOperatorsOperatorGroupByTest_$95 *create_RxInternalOperatorsOperatorGroupByTest_$95_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$95, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$6

- (JavaLangInteger *)callWithId:(JavaLangInteger *)t {
  return JavaLangInteger_valueOfWithInt_([((JavaLangInteger *) nil_chk(t)) intValue] / 10);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorGroupByTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorGroupByTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$6;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$6_init(RxInternalOperatorsOperatorGroupByTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$6 *new_RxInternalOperatorsOperatorGroupByTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$6, init)
}

RxInternalOperatorsOperatorGroupByTest_$6 *create_RxInternalOperatorsOperatorGroupByTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$6, init)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$96

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)evicted {
  return create_RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(self);
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$exception_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$exception_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Ljava/lang/Integer;>;)Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorGroupByTest;", "createMapFactoryThatThrowsOnPutWithJavaLangRuntimeException:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/functions/Action1<Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$96 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$96;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorGroupByTest_$96 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$exception_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$96 *new_RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$96, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$96 *create_RxInternalOperatorsOperatorGroupByTest_$96_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$96, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$96_$1

- (id)putWithId:(JavaLangInteger *)key
         withId:(id)value {
  @throw this$0_->val$exception_;
}

- (instancetype)initWithRxInternalOperatorsOperatorGroupByTest_$96:(RxInternalOperatorsOperatorGroupByTest_$96 *)outer$ {
  RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(putWithId:withId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorGroupByTest_$96:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorGroupByTest_$96;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "put", "LJavaLangInteger;LNSObject;", "(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;", "LRxInternalOperatorsOperatorGroupByTest_$96;", "callWithId:", "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Integer;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$96_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$96_$1;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96_$1 *self, RxInternalOperatorsOperatorGroupByTest_$96 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilConcurrentConcurrentHashMap_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$96_$1 *new_RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$96_$1, initWithRxInternalOperatorsOperatorGroupByTest_$96_, outer$)
}

RxInternalOperatorsOperatorGroupByTest_$96_$1 *create_RxInternalOperatorsOperatorGroupByTest_$96_$1_initWithRxInternalOperatorsOperatorGroupByTest_$96_(RxInternalOperatorsOperatorGroupByTest_$96 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$96_$1, initWithRxInternalOperatorsOperatorGroupByTest_$96_, outer$)
}

@implementation RxInternalOperatorsOperatorGroupByTest_$97

- (id<JavaUtilMap>)callWithId:(id<RxFunctionsAction1>)t {
  @throw val$exception_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$exception_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$exception_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxFunctionsAction1;", "(Lrx/functions/Action1<Ljava/lang/Integer;>;)Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorGroupByTest;", "createMapFactoryThatThrowsOnCreateWithJavaLangRuntimeException:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/functions/Action1<Ljava/lang/Integer;>;Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorGroupByTest_$97 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorGroupByTest_$97;
}

@end

void RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorGroupByTest_$97 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$exception_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorGroupByTest_$97 *new_RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorGroupByTest_$97, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorGroupByTest_$97 *create_RxInternalOperatorsOperatorGroupByTest_$97_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorGroupByTest_$97, initWithJavaLangRuntimeException_, capture$0)
}
