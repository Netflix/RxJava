//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeCollectTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsFunc0.h"
#include "RxInternalOperatorsOnSubscribeCollectTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$5();

@interface RxInternalOperatorsOnSubscribeCollectTest_MyProducer : NSObject < RxProducer > {
 @public
  __unsafe_unretained RxSubscriber *sub_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_MyProducer)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer *self, RxSubscriber *sub);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxSubscriber *sub) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxSubscriber *sub);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeCollectTest_MyProducer)

@interface RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 : NSObject < RxProducer > {
 @public
  __unsafe_unretained RxSubscriber *sub_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *self, RxSubscriber *sub);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxSubscriber *sub) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxSubscriber *sub);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2)

@interface RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 : NSObject < RxProducer > {
 @public
  __unsafe_unretained RxSubscriber *sub_;
  JavaLangRuntimeException *e2_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub
        withJavaLangRuntimeException:(JavaLangRuntimeException *)e2;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3, e2_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *self, RxSubscriber *sub, JavaLangRuntimeException *e2);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxSubscriber *sub, JavaLangRuntimeException *e2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxSubscriber *sub, JavaLangRuntimeException *e2);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3)

@interface RxInternalOperatorsOnSubscribeCollectTest_$1 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilList>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$1_init(RxInternalOperatorsOnSubscribeCollectTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$1 *new_RxInternalOperatorsOnSubscribeCollectTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$1 *create_RxInternalOperatorsOnSubscribeCollectTest_$1_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$2 : NSObject < RxFunctionsAction2 >

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$2_init(RxInternalOperatorsOnSubscribeCollectTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$2 *new_RxInternalOperatorsOnSubscribeCollectTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$2 *create_RxInternalOperatorsOnSubscribeCollectTest_$2_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$3 : NSObject < RxFunctionsFunc0 >

- (JavaLangStringBuilder *)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$3_init(RxInternalOperatorsOnSubscribeCollectTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$3 *new_RxInternalOperatorsOnSubscribeCollectTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$3 *create_RxInternalOperatorsOnSubscribeCollectTest_$3_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$4 : NSObject < RxFunctionsAction2 >

- (void)callWithId:(JavaLangStringBuilder *)sb
            withId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$4_init(RxInternalOperatorsOnSubscribeCollectTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$4 *new_RxInternalOperatorsOnSubscribeCollectTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$4 *create_RxInternalOperatorsOnSubscribeCollectTest_$4_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$5 : NSObject < RxFunctionsFunc0 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (id<JavaUtilList>)call;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$5, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$5 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$5 *new_RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$5 *create_RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeCollectTest_$6 : NSObject < RxFunctionsAction2 >

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$6_init(RxInternalOperatorsOnSubscribeCollectTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$6 *new_RxInternalOperatorsOnSubscribeCollectTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$6 *create_RxInternalOperatorsOnSubscribeCollectTest_$6_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$7 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$7, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeCollectTest_$7 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$7 *new_RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$7 *create_RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOnSubscribeCollectTest_$8 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangRuntimeException *val$e2_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$8)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$8, val$e2_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$8 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$8 *new_RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$8 *create_RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeCollectTest_$9 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilList>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$9_init(RxInternalOperatorsOnSubscribeCollectTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$9 *new_RxInternalOperatorsOnSubscribeCollectTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$9 *create_RxInternalOperatorsOnSubscribeCollectTest_$9_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$10 : NSObject < RxFunctionsAction2 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (void)callWithId:(id<JavaUtilList>)t1
            withId:(JavaLangInteger *)t2;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$10, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$10 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$10 *new_RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$10 *create_RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeCollectTest_$11 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$11_init(RxInternalOperatorsOnSubscribeCollectTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$11 *new_RxInternalOperatorsOnSubscribeCollectTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$11 *create_RxInternalOperatorsOnSubscribeCollectTest_$11_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$12 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilList>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$12_init(RxInternalOperatorsOnSubscribeCollectTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$12 *new_RxInternalOperatorsOnSubscribeCollectTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$12 *create_RxInternalOperatorsOnSubscribeCollectTest_$12_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$13 : NSObject < RxFunctionsAction2 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (void)callWithId:(id<JavaUtilList>)t1
            withId:(JavaLangInteger *)t2;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$13)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$13, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$13 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$13 *new_RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$13 *create_RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOnSubscribeCollectTest_$14 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$14_init(RxInternalOperatorsOnSubscribeCollectTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$14 *new_RxInternalOperatorsOnSubscribeCollectTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$14 *create_RxInternalOperatorsOnSubscribeCollectTest_$14_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$15 : NSObject < RxFunctionsFunc0 >

- (id<JavaUtilList>)call;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$15_init(RxInternalOperatorsOnSubscribeCollectTest_$15 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$15 *new_RxInternalOperatorsOnSubscribeCollectTest_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$15 *create_RxInternalOperatorsOnSubscribeCollectTest_$15_init();

@interface RxInternalOperatorsOnSubscribeCollectTest_$16 : NSObject < RxFunctionsAction2 > {
 @public
  jboolean once_;
  JavaLangRuntimeException *val$e1_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$added_;
}

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0
       withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeCollectTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$16, val$e1_, JavaLangRuntimeException *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCollectTest_$16, val$added_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeCollectTest_$16 *self, JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$16 *new_RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeCollectTest_$16 *create_RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1);

@implementation RxInternalOperatorsOnSubscribeCollectTest

- (void)testCollectToList {
  RxObservable *o = [((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$1_init() withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$2_init()];
  id<JavaUtilList> list = [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(o)) toBlocking])) last];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilList>) nil_chk(list)) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((JavaLangInteger *) nil_chk([list getWithInt:0])) intValue]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((JavaLangInteger *) nil_chk([list getWithInt:1])) intValue]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((JavaLangInteger *) nil_chk([list getWithInt:2])) intValue]);
  id<JavaUtilList> list2 = [((RxObservablesBlockingObservable *) nil_chk([o toBlocking])) last];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<JavaUtilList>) nil_chk(list2)) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((JavaLangInteger *) nil_chk([list2 getWithInt:0])) intValue]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((JavaLangInteger *) nil_chk([list2 getWithInt:1])) intValue]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((JavaLangInteger *) nil_chk([list2 getWithInt:2])) intValue]);
}

- (void)testCollectToString {
  NSString *value = [((JavaLangStringBuilder *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$3_init() withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$4_init()])) toBlocking])) last])) description];
  OrgJunitAssert_assertEqualsWithId_withId_(@"1-2-3", value);
}

- (void)testFactoryFailureResultsInErrorEmission {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(e) withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$6_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testCollectorFailureDoesNotResultInTwoErrorEmissions {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(list));
    JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
    JavaLangRuntimeException *e2 = create_JavaLangRuntimeException_init();
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(e2)))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$9_init() withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [((RxObserversTestSubscriber *) nil_chk(ts)) getOnErrorEvents]);
    [ts assertNotCompleted];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e2 } count:1 type:JavaLangRuntimeException_class_()]), list);
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

- (void)testCollectorFailureDoesNotResultInErrorAndCompletedEmissions {
  JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCollectTest_$11_init()))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$12_init() withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [((RxObserversTestSubscriber *) nil_chk(ts)) getOnErrorEvents]);
  [ts assertNotCompleted];
}

- (void)testCollectorFailureDoesNotResultInErrorAndOnNextEmissions {
  JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  JavaUtilConcurrentAtomicAtomicBoolean *added = create_JavaUtilConcurrentAtomicAtomicBoolean_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeCollectTest_$14_init()))) collectWithRxFunctionsFunc0:create_RxInternalOperatorsOnSubscribeCollectTest_$15_init() withRxFunctionsAction2:create_RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(e1, added)])) unsafeSubscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [((RxObserversTestSubscriber *) nil_chk(ts)) getOnErrorEvents]);
  [ts assertNoValues];
  [ts assertNotCompleted];
  OrgJunitAssert_assertFalseWithBoolean_([added get]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testCollectToList);
  methods[1].selector = @selector(testCollectToString);
  methods[2].selector = @selector(testFactoryFailureResultsInErrorEmission);
  methods[3].selector = @selector(testCollectorFailureDoesNotResultInTwoErrorEmissions);
  methods[4].selector = @selector(testCollectorFailureDoesNotResultInErrorAndCompletedEmissions);
  methods[5].selector = @selector(testCollectorFailureDoesNotResultInErrorAndOnNextEmissions);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeCollectTest__Annotations$5, "LRxInternalOperatorsOnSubscribeCollectTest_MyProducer;LRxInternalOperatorsOnSubscribeCollectTest_MyProducer2;LRxInternalOperatorsOnSubscribeCollectTest_MyProducer3;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest = { "OnSubscribeCollectTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, 6, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_init(RxInternalOperatorsOnSubscribeCollectTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest *new_RxInternalOperatorsOnSubscribeCollectTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest, init)
}

RxInternalOperatorsOnSubscribeCollectTest *create_RxInternalOperatorsOnSubscribeCollectTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeCollectTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCollectTest)

@implementation RxInternalOperatorsOnSubscribeCollectTest_MyProducer

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub {
  RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(self, sub);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    [((RxSubscriber *) nil_chk(sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [sub_ onCompleted];
  }
}

- (void)__javaClone:(RxInternalOperatorsOnSubscribeCollectTest_MyProducer *)original {
  [super __javaClone:original];
  [sub_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "request", "J", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_MyProducer = { "MyProducer", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 5, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_MyProducer;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer *self, RxSubscriber *sub) {
  NSObject_init(self);
  self->sub_ = sub;
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxSubscriber *sub) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer, initWithRxSubscriber_, sub)
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(RxSubscriber *sub) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer, initWithRxSubscriber_, sub)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCollectTest_MyProducer)

@implementation RxInternalOperatorsOnSubscribeCollectTest_MyProducer2

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub {
  RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(self, sub);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    [((RxSubscriber *) nil_chk(sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  }
}

- (void)__javaClone:(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *)original {
  [super __javaClone:original];
  [sub_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "request", "J", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 = { "MyProducer2", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 1, 5, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *self, RxSubscriber *sub) {
  NSObject_init(self);
  self->sub_ = sub;
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxSubscriber *sub) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2, initWithRxSubscriber_, sub)
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer2 *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(RxSubscriber *sub) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2, initWithRxSubscriber_, sub)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCollectTest_MyProducer2)

@implementation RxInternalOperatorsOnSubscribeCollectTest_MyProducer3

- (instancetype)initWithRxSubscriber:(RxSubscriber *)sub
        withJavaLangRuntimeException:(JavaLangRuntimeException *)e2 {
  RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(self, sub, e2);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    [((RxSubscriber *) nil_chk(sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [sub_ onErrorWithNSException:e2_];
  }
}

- (void)__javaClone:(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *)original {
  [super __javaClone:original];
  [sub_ release];
}

- (void)dealloc {
  RELEASE_(e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSubscriber:withJavaLangRuntimeException:);
  methods[1].selector = @selector(requestWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "e2_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LJavaLangRuntimeException;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;Ljava/lang/RuntimeException;)V", "request", "J", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 = { "MyProducer3", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 2, 2, 5, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *self, RxSubscriber *sub, JavaLangRuntimeException *e2) {
  NSObject_init(self);
  self->sub_ = sub;
  JreStrongAssign(&self->e2_, e2);
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *new_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxSubscriber *sub, JavaLangRuntimeException *e2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3, initWithRxSubscriber_withJavaLangRuntimeException_, sub, e2)
}

RxInternalOperatorsOnSubscribeCollectTest_MyProducer3 *create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(RxSubscriber *sub, JavaLangRuntimeException *e2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3, initWithRxSubscriber_withJavaLangRuntimeException_, sub, e2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCollectTest_MyProducer3)

@implementation RxInternalOperatorsOnSubscribeCollectTest_$1

- (id<JavaUtilList>)call {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectToList", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$1_init(RxInternalOperatorsOnSubscribeCollectTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$1 *new_RxInternalOperatorsOnSubscribeCollectTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$1, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$1 *create_RxInternalOperatorsOnSubscribeCollectTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$2

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)v {
  [((id<JavaUtilList>) nil_chk(list)) addWithId:v];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectToList", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$2_init(RxInternalOperatorsOnSubscribeCollectTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$2 *new_RxInternalOperatorsOnSubscribeCollectTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$2, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$2 *create_RxInternalOperatorsOnSubscribeCollectTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$2, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$3

- (JavaLangStringBuilder *)call {
  return create_JavaLangStringBuilder_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangStringBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectToString", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/lang/StringBuilder;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$3;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$3_init(RxInternalOperatorsOnSubscribeCollectTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$3 *new_RxInternalOperatorsOnSubscribeCollectTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$3, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$3 *create_RxInternalOperatorsOnSubscribeCollectTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$3, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$4

- (void)callWithId:(JavaLangStringBuilder *)sb
            withId:(JavaLangInteger *)v {
  if ([((JavaLangStringBuilder *) nil_chk(sb)) length] > 0) {
    [sb appendWithNSString:@"-"];
  }
  [sb appendWithId:v];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangStringBuilder;LJavaLangInteger;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectToString", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/lang/StringBuilder;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$4;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$4_init(RxInternalOperatorsOnSubscribeCollectTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$4 *new_RxInternalOperatorsOnSubscribeCollectTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$4, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$4 *create_RxInternalOperatorsOnSubscribeCollectTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$4, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$5

- (id<JavaUtilList>)call {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testFactoryFailureResultsInErrorEmission", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$5;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$5 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$5 *new_RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$5, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeCollectTest_$5 *create_RxInternalOperatorsOnSubscribeCollectTest_$5_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$5, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$6

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t {
  [((id<JavaUtilList>) nil_chk(list)) addWithId:t];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LRxInternalOperatorsOnSubscribeCollectTest;", "testFactoryFailureResultsInErrorEmission", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$6;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$6_init(RxInternalOperatorsOnSubscribeCollectTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$6 *new_RxInternalOperatorsOnSubscribeCollectTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$6, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$6 *create_RxInternalOperatorsOnSubscribeCollectTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$6, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$7

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$7;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(RxInternalOperatorsOnSubscribeCollectTest_$7 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$7 *new_RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$7, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOnSubscribeCollectTest_$7 *create_RxInternalOperatorsOnSubscribeCollectTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$7, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$8

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer3_initWithRxSubscriber_withJavaLangRuntimeException_(sub, val$e2_)];
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e2_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInTwoErrorEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$8 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$8;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$8 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$8 *new_RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$8, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeCollectTest_$8 *create_RxInternalOperatorsOnSubscribeCollectTest_$8_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$8, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$9

- (id<JavaUtilList>)call {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$9;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$9_init(RxInternalOperatorsOnSubscribeCollectTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$9 *new_RxInternalOperatorsOnSubscribeCollectTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$9, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$9 *create_RxInternalOperatorsOnSubscribeCollectTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$9, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$10

- (void)callWithId:(id<JavaUtilList>)t1
            withId:(JavaLangInteger *)t2 {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInTwoErrorEmissions", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$10;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$10 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$10 *new_RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$10, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeCollectTest_$10 *create_RxInternalOperatorsOnSubscribeCollectTest_$10_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$10, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$11

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$11;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$11_init(RxInternalOperatorsOnSubscribeCollectTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$11 *new_RxInternalOperatorsOnSubscribeCollectTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$11, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$11 *create_RxInternalOperatorsOnSubscribeCollectTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$11, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$12

- (id<JavaUtilList>)call {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$12;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$12_init(RxInternalOperatorsOnSubscribeCollectTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$12 *new_RxInternalOperatorsOnSubscribeCollectTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$12, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$12 *create_RxInternalOperatorsOnSubscribeCollectTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$12, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$13

- (void)callWithId:(id<JavaUtilList>)t1
            withId:(JavaLangInteger *)t2 {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndCompletedEmissions", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$13 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$13;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(RxInternalOperatorsOnSubscribeCollectTest_$13 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$13 *new_RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$13, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOnSubscribeCollectTest_$13 *create_RxInternalOperatorsOnSubscribeCollectTest_$13_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$13, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$14

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeCollectTest_MyProducer2_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndOnNextEmissions", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$14 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$14;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$14_init(RxInternalOperatorsOnSubscribeCollectTest_$14 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$14 *new_RxInternalOperatorsOnSubscribeCollectTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$14, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$14 *create_RxInternalOperatorsOnSubscribeCollectTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$14, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$15

- (id<JavaUtilList>)call {
  return create_JavaUtilArrayList_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeCollectTest_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndOnNextEmissions", "Ljava/lang/Object;Lrx/functions/Func0<Ljava/util/List<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$15 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 1, -1, 2, 3, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$15;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$15_init(RxInternalOperatorsOnSubscribeCollectTest_$15 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeCollectTest_$15 *new_RxInternalOperatorsOnSubscribeCollectTest_$15_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$15, init)
}

RxInternalOperatorsOnSubscribeCollectTest_$15 *create_RxInternalOperatorsOnSubscribeCollectTest_$15_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$15, init)
}

@implementation RxInternalOperatorsOnSubscribeCollectTest_$16

- (void)callWithId:(id<JavaUtilList>)list
            withId:(JavaLangInteger *)t {
  if (once_) {
    once_ = false;
    @throw val$e1_;
  }
  else {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$added_)) setWithBoolean:true];
  }
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0
       withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$1 {
  RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  RELEASE_(val$added_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:withJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "once_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$added_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaUtilList;LJavaLangInteger;", "(Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;)V", "LJavaLangRuntimeException;LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOnSubscribeCollectTest;", "testCollectorFailureDoesNotResultInErrorAndOnNextEmissions", "Ljava/lang/Object;Lrx/functions/Action2<Ljava/util/List<Ljava/lang/Integer;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCollectTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 3, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeCollectTest_$16;
}

@end

void RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeCollectTest_$16 *self, JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1) {
  JreStrongAssign(&self->val$e1_, capture$0);
  JreStrongAssign(&self->val$added_, capture$1);
  NSObject_init(self);
  self->once_ = true;
}

RxInternalOperatorsOnSubscribeCollectTest_$16 *new_RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$16, initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_, capture$0, capture$1)
}

RxInternalOperatorsOnSubscribeCollectTest_$16 *create_RxInternalOperatorsOnSubscribeCollectTest_$16_initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_(JavaLangRuntimeException *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeCollectTest_$16, initWithJavaLangRuntimeException_withJavaUtilConcurrentAtomicAtomicBoolean_, capture$0, capture$1)
}
