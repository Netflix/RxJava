//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorDistinctUntilChangedTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsOperatorDistinctUntilChangedTest.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest () {
 @public
  id<RxObserver> w_;
  id<RxObserver> w2_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDistinctUntilChangedTest, w_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDistinctUntilChangedTest, w2_, id<RxObserver>)

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorDistinctUntilChangedTest_get_TO_UPPER_WITH_EXCEPTION();
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorDistinctUntilChangedTest, TO_UPPER_WITH_EXCEPTION, id<RxFunctionsFunc1>)

inline id<RxFunctionsFunc1> RxInternalOperatorsOperatorDistinctUntilChangedTest_get_THROWS_NON_FATAL();
static id<RxFunctionsFunc1> RxInternalOperatorsOperatorDistinctUntilChangedTest_THROWS_NON_FATAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorDistinctUntilChangedTest, THROWS_NON_FATAL, id<RxFunctionsFunc1>)

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$11();

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDistinctUntilChangedTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init();

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 : NSObject < RxFunctionsFunc1 >

- (NSString *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDistinctUntilChangedTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init();

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$errorOccurred_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3, val$errorOccurred_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 : NSObject < RxFunctionsFunc2 >

- (JavaLangBoolean *)callWithId:(NSString *)a
                         withId:(NSString *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDistinctUntilChangedTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init();

@interface RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 : NSObject < RxFunctionsFunc2 >

- (JavaLangBoolean *)callWithId:(NSString *)a
                         withId:(NSString *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDistinctUntilChangedTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init();

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorDistinctUntilChangedTest)

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testDistinctUntilChangedOfNone {
  RxObservable *src = RxObservable_empty();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChanged])) subscribeWithRxObserver:w_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testDistinctUntilChangedOfNoneWithKeySelector {
  RxObservable *src = RxObservable_empty();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChangedWithRxFunctionsFunc1:RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION])) subscribeWithRxObserver:w_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
}

- (void)testDistinctUntilChangedOfNormalSource {
  RxObservable *src = RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(@"a", @"b", @"c", @"c", @"c", @"b", @"b", @"a", @"e");
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChanged])) subscribeWithRxObserver:w_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"c"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"e"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDistinctUntilChangedOfNormalSourceWithKeySelector {
  RxObservable *src = RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_withId_(@"a", @"b", @"c", @"C", @"c", @"B", @"b", @"a", @"e");
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChangedWithRxFunctionsFunc1:RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION])) subscribeWithRxObserver:w_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"c"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"B"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"e"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDistinctUntilChangedOfSourceWithNulls {
  RxObservable *src = RxObservable_justWithId_withId_withId_withId_withId_withId_withId_withId_(nil, @"a", @"a", nil, nil, @"b", nil, nil);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChanged])) subscribeWithRxObserver:w_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:nil];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:nil];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:nil];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onCompleted];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testDistinctUntilChangedOfSourceWithExceptionsFromKeySelector {
  RxObservable *src = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", nil, @"c");
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) distinctUntilChangedWithRxFunctionsFunc1:RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION])) subscribeWithRxObserver:w_];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ w_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"a"];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:@"b"];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(w_, OrgMockitoMockito_timesWithInt_(1)))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(JavaLangNullPointerException_class_())];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_anyString()];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:w_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
}

- (void)testDistinctUntilChangedWhenNonFatalExceptionThrownByKeySelectorIsNotReportedByUpstream {
  RxObservable *src = RxObservable_justWithId_withId_withId_withId_(@"a", @"b", nil, @"c");
  JavaUtilConcurrentAtomicAtomicBoolean *errorOccurred = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(src)) doOnErrorWithRxFunctionsAction1:create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(errorOccurred)])) distinctUntilChangedWithRxFunctionsFunc1:RxInternalOperatorsOperatorDistinctUntilChangedTest_THROWS_NON_FATAL])) subscribeWithRxObserver:w_];
  OrgJunitAssert_assertFalseWithBoolean_([errorOccurred get]);
}

- (void)customComparator {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"a", @"b", @"B", @"A", @"a", @"C");
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) distinctUntilChangedWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ @"a", @"b", @"A", @"C" } count:4 type:NSString_class_()]];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)customComparatorThrows {
  RxObservable *source = RxObservable_justWithId_withId_withId_withId_withId_withId_(@"a", @"b", @"B", @"A", @"a", @"C");
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(source)) distinctUntilChangedWithRxFunctionsFunc2:create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"a"];
  [ts assertNotCompleted];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(w_);
  RELEASE_(w2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testDistinctUntilChangedOfNone);
  methods[2].selector = @selector(testDistinctUntilChangedOfNoneWithKeySelector);
  methods[3].selector = @selector(testDistinctUntilChangedOfNormalSource);
  methods[4].selector = @selector(testDistinctUntilChangedOfNormalSourceWithKeySelector);
  methods[5].selector = @selector(testDistinctUntilChangedOfSourceWithNulls);
  methods[6].selector = @selector(testDistinctUntilChangedOfSourceWithExceptionsFromKeySelector);
  methods[7].selector = @selector(testDistinctUntilChangedWhenNonFatalExceptionThrownByKeySelectorIsNotReportedByUpstream);
  methods[8].selector = @selector(customComparator);
  methods[9].selector = @selector(customComparatorThrows);
  methods[10].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "w_", "LRxObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 10, 11 },
    { "w2_", "LRxObserver;", .constantValue.asLong = 0, 0x2, -1, -1, 10, 12 },
    { "TO_UPPER_WITH_EXCEPTION", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1a, -1, 13, 14, -1 },
    { "THROWS_NON_FATAL", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1a, -1, 15, 14, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$0, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$1, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$2, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$3, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$4, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$5, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$6, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$7, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$8, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$9, "Lrx/Observer<Ljava/lang/String;>;", (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$10, (void *)&RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$11, &RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION, "Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;", &RxInternalOperatorsOperatorDistinctUntilChangedTest_THROWS_NON_FATAL };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest = { "OperatorDistinctUntilChangedTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 11, 4, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorDistinctUntilChangedTest class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorDistinctUntilChangedTest_TO_UPPER_WITH_EXCEPTION, new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init());
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorDistinctUntilChangedTest_THROWS_NON_FATAL, new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init());
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorDistinctUntilChangedTest)
  }
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_init(RxInternalOperatorsOperatorDistinctUntilChangedTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest, init)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorDistinctUntilChangedTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorDistinctUntilChangedTest)

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest_$1

- (NSString *)callWithId:(NSString *)s {
  if ([((NSString *) nil_chk(s)) isEqual:@"x"]) {
    return @"xx";
  }
  return [s uppercaseString];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorDistinctUntilChangedTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1;
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$1, init)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$1 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$1, init)
}

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest_$2

- (NSString *)callWithId:(NSString *)s {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorDistinctUntilChangedTest;", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2;
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$2, init)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$2 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$2, init)
}

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest_$3

- (void)callWithId:(NSException *)t {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$errorOccurred_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$errorOccurred_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$errorOccurred_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorDistinctUntilChangedTest;", "testDistinctUntilChangedWhenNonFatalExceptionThrownByKeySelectorIsNotReportedByUpstream", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3;
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$errorOccurred_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$3 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$3_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$3, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest_$4

- (JavaLangBoolean *)callWithId:(NSString *)a
                         withId:(NSString *)b {
  return JavaLangBoolean_valueOfWithBoolean_([((NSString *) nil_chk(a)) compareToIgnoreCase:b] == 0);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LNSString;", "LRxInternalOperatorsOperatorDistinctUntilChangedTest;", "customComparator", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4;
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$4, init)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$4 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$4, init)
}

@implementation RxInternalOperatorsOperatorDistinctUntilChangedTest_$5

- (JavaLangBoolean *)callWithId:(NSString *)a
                         withId:(NSString *)b {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;LNSString;", "LRxInternalOperatorsOperatorDistinctUntilChangedTest;", "customComparatorThrows", "Ljava/lang/Object;Lrx/functions/Func2<Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5;
}

@end

void RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init(RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *new_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$5, init)
}

RxInternalOperatorsOperatorDistinctUntilChangedTest_$5 *create_RxInternalOperatorsOperatorDistinctUntilChangedTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorDistinctUntilChangedTest_$5, init)
}
