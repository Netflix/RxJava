//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorSwitchIfEmptyTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxInternalOperatorsOperatorSwitchIfEmptyTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSubscriptions.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$8();

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$subscribed_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1, val$subscribed_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$emitted_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2, val$emitted_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *this$0_;
  RxSubscriber *val$subscriber_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2:(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *)outer$
                                                       withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1, this$0_, RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1, val$subscriber_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *self, RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxSubscription> val$empty_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3, val$empty_, id<RxSubscription>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *self, id<RxSubscription> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(id<RxSubscription> capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 : NSObject < RxObservable_Operator >

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init();

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 : RxSubscriber

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangLong *)aLong;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *self, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxSubscriber *arg$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 : NSObject < RxObservable_OnSubscribe > {
 @public
  id<RxSubscription> val$s_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5, val$s_, id<RxSubscription>)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *self, id<RxSubscription> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(id<RxSubscription> capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init();

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 : RxObserversTestSubscriber

- (void)onStart;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init();

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init();

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 : NSObject < RxProducer > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *completed_;
  RxSubscriber *val$subscriber_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1, completed_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1, val$subscriber_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1:(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1, this$0_, RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *self, RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$);

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest

- (void)testSwitchWhenNotEmpty {
  JavaUtilConcurrentAtomicAtomicBoolean *subscribed = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(4)))) switchIfEmptyWithRxObservable:[((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2)))) doOnSubscribeWithRxFunctionsAction0:create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(subscribed)]];
  OrgJunitAssert_assertEqualsWithLong_withLong_(4, [((JavaLangInteger *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(observable)) toBlocking])) single])) intValue]);
  OrgJunitAssert_assertFalseWithBoolean_([subscribed get]);
}

- (void)testSwitchWhenEmpty {
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(42) } count:1 type:JavaLangInteger_class_()]))];
  OrgJunitAssert_assertEqualsWithLong_withLong_(42, [((JavaLangInteger *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(observable)) toBlocking])) single])) intValue]);
}

- (void)testSwitchWithProducer {
  JavaUtilConcurrentAtomicAtomicBoolean *emitted = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  RxObservable *withProducer = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(emitted));
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:withProducer];
  OrgJunitAssert_assertEqualsWithLong_withLong_(42, [((JavaLangLong *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(observable)) toBlocking])) single])) intValue]);
}

- (void)testSwitchTriggerUnsubscribe {
  id<RxSubscription> empty = RxSubscriptionsSubscriptions_empty();
  RxObservable *withProducer = RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(empty));
  id<RxSubscription> sub = [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:withProducer])) liftWithRxObservable_Operator:create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init()])) subscribe];
  OrgJunitAssert_assertTrueWithBoolean_([((id<RxSubscription>) nil_chk(empty)) isUnsubscribed]);
  OrgJunitAssert_assertTrueWithBoolean_([((id<RxSubscription>) nil_chk(sub)) isUnsubscribed]);
}

- (void)testSwitchShouldTriggerUnsubscribe {
  id<RxSubscription> s = RxSubscriptionsSubscriptions_empty();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(s)))) switchIfEmptyWithRxObservable:RxObservable_never()])) subscribe];
  OrgJunitAssert_assertTrueWithBoolean_([((id<RxSubscription>) nil_chk(s)) isUnsubscribed]);
}

- (void)testSwitchRequestAlternativeObservableWithBackpressure {
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3))])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:JavaLangInteger_class_()]), [ts getOnNextEvents]);
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValueCountWithInt:2];
  [ts requestMoreWithLong:1];
  [ts assertValueCountWithInt:3];
}

- (void)testBackpressureNoRequest {
  RxObserversTestSubscriber *ts = create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3))])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) isEmpty]);
  [ts assertNoErrors];
}

- (void)testBackpressureOnFirstObservable {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3)))) switchIfEmptyWithRxObservable:RxObservable_justWithId_withId_withId_(JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6))])) subscribeWithRxSubscriber:ts];
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts assertNoValues];
}

- (void)testRequestsNotLost {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init()))) switchIfEmptyWithRxObservable:RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(2LL), JavaLangLong_valueOfWithLong_(3LL) } count:3 type:JavaLangLong_class_()]))])) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:ts];
  [ts requestMoreWithLong:0];
  JavaLangThread_sleepWithLong_(50);
  [ts requestMoreWithLong:1];
  [ts requestMoreWithLong:1];
  JavaLangThread_sleepWithLong_(500);
  [ts assertNotCompleted];
  [ts assertNoErrors];
  [ts assertValueCountWithInt:2];
  [ts unsubscribe];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, 9, -1, 10, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testSwitchWhenNotEmpty);
  methods[1].selector = @selector(testSwitchWhenEmpty);
  methods[2].selector = @selector(testSwitchWithProducer);
  methods[3].selector = @selector(testSwitchTriggerUnsubscribe);
  methods[4].selector = @selector(testSwitchShouldTriggerUnsubscribe);
  methods[5].selector = @selector(testSwitchRequestAlternativeObservableWithBackpressure);
  methods[6].selector = @selector(testBackpressureNoRequest);
  methods[7].selector = @selector(testBackpressureOnFirstObservable);
  methods[8].selector = @selector(testRequestsNotLost);
  methods[9].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangException;", (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$0, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$1, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$2, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$3, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$4, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$5, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$6, (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$7, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$8 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest = { "OperatorSwitchIfEmptyTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 10, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_init(RxInternalOperatorsOperatorSwitchIfEmptyTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest, init)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorSwitchIfEmptyTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 10000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitchIfEmptyTest)

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$1

- (void)call {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$subscribed_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$subscribed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$subscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchWhenNotEmpty" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$subscribed_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$2

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(self, subscriber)];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$emitted_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$emitted_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchWithProducer", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$emitted_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1

- (void)requestWithLong:(jlong)n {
  if (n > 0 && ![((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->val$emitted_)) get]) {
    [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->val$emitted_)) setWithBoolean:true];
    [((RxSubscriber *) nil_chk(val$subscriber_)) onNextWithId:JavaLangLong_valueOfWithLong_(42LL)];
    [val$subscriber_ onCompleted];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2:(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *)outer$
                                                       withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$2;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$2;LRxSubscriber;", "(Lrx/internal/operators/OperatorSwitchIfEmptyTest$2;Lrx/Subscriber<-Ljava/lang/Long;>;)V", "Lrx/Subscriber<-Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$2;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *self, RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$subscriber_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1, initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$2_$1, initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$2_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$3

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:val$empty_];
  [subscriber onNextWithId:JavaLangLong_valueOfWithLong_(42LL)];
}

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$empty_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$empty_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "LRxSubscription;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchTriggerUnsubscribe", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *self, id<RxSubscription> capture$0) {
  JreStrongAssign(&self->val$empty_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3, initWithRxSubscription_, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$3 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$3_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$3, initWithRxSubscription_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$4

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  return create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(child);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscriber;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)Lrx/Subscriber<-Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchTriggerUnsubscribe", "Ljava/lang/Object;Lrx/Observable$Operator<Ljava/lang/Long;Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4, init)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$4 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4, init)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(JavaLangLong *)aLong {
  [self unsubscribe];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangLong;", "LRxSubscriber;", "(Lrx/Subscriber<*>;)V", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$4;", "callWithId:", "Lrx/Subscriber<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *self, RxSubscriber *arg$0) {
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxSubscriber *arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1, initWithRxSubscriber_, arg$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1_initWithRxSubscriber_(RxSubscriber *arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$4_$1, initWithRxSubscriber_, arg$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$5

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:val$s_];
  [subscriber onCompleted];
}

- (instancetype)initWithRxSubscription:(id<RxSubscription>)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "LRxSubscription;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchShouldTriggerUnsubscribe", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *self, id<RxSubscription> capture$0) {
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5, initWithRxSubscription_, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$5 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$5_initWithRxSubscription_(id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$5, initWithRxSubscription_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$6

- (void)onStart {
  [self requestWithLong:1];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testSwitchRequestAlternativeObservableWithBackpressure", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$6, init)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$6 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$6, init)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$7

- (void)onStart {
  [self requestWithLong:0];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testBackpressureNoRequest", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$7, init)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$7 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$7, init)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$8

- (void)callWithId:(RxSubscriber *)subscriber {
  [((RxSubscriber *) nil_chk(subscriber)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(subscriber)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "LRxInternalOperatorsOperatorSwitchIfEmptyTest;", "testRequestsNotLost", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8, init)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8, init)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1

- (void)requestWithLong:(jlong)n {
  if (n > 0 && [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(completed_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxScheduler_Worker *) nil_chk([((RxScheduler *) nil_chk(RxSchedulersSchedulers_io())) createWorker])) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(self) withLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(completed_);
  RELEASE_(val$subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "completed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "val$subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "Lrx/Subscriber<-Ljava/lang/Long;>;", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$8;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$subscriber_, capture$0);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->completed_, new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false));
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1

- (void)call {
  [((RxSubscriber *) nil_chk(this$0_->val$subscriber_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1:(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *)outer$ {
  RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1;", "requestWithLong:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *self, RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *new_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1, initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_, outer$)
}

RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1 *create_RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1_initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_$1, initWithRxInternalOperatorsOperatorSwitchIfEmptyTest_$8_$1_, outer$)
}
