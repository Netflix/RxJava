//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeTimerTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxInternalOperatorsOnSubscribeTimerTest.h"
#include "RxObservable.h"
#include "RxObservablesConnectableObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxSchedulersTestScheduler.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/InOrder.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/MockitoAnnotations.h"
#include "org/mockito/verification/VerificationMode.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$12();

@interface RxInternalOperatorsOnSubscribeTimerTest_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeTimerTest *this$0_;
}

- (void)onNextWithId:(JavaLangLong *)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsOnSubscribeTimerTest:(RxInternalOperatorsOnSubscribeTimerTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeTimerTest_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeTimerTest_$1, this$0_, RxInternalOperatorsOnSubscribeTimerTest *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest_$1 *self, RxInternalOperatorsOnSubscribeTimerTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeTimerTest_$1 *new_RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeTimerTest_$1 *create_RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$);

@interface RxInternalOperatorsOnSubscribeTimerTest_$2 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeTimerTest *this$0_;
}

- (void)onNextWithId:(JavaLangLong *)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsOnSubscribeTimerTest:(RxInternalOperatorsOnSubscribeTimerTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeTimerTest_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeTimerTest_$2, this$0_, RxInternalOperatorsOnSubscribeTimerTest *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest_$2 *self, RxInternalOperatorsOnSubscribeTimerTest *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeTimerTest_$2 *new_RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeTimerTest_$2 *create_RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$);

@implementation RxInternalOperatorsOnSubscribeTimerTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
  JreStrongAssignAndConsume(&scheduler_, new_RxSchedulersTestScheduler_init());
}

- (void)testTimerOnce {
  [((RxObservable *) nil_chk(RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_))) subscribeWithRxObserver:observer_];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_timesWithInt_(1)))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testTimerPeriodically {
  id<RxSubscription> c = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_))) subscribeWithRxObserver:observer_];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(3LL)];
  [((id<RxSubscription>) nil_chk(c)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:100 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:OrgMockitoMatchers_any()];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testInterval {
  RxObservable *w = RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_);
  id<RxSubscription> sub = [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxSubscription>) nil_chk(sub)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:4 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testWithMultipleSubscribersStartingAtSameTime {
  RxObservable *w = RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_);
  id<RxSubscription> sub1 = [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer_];
  id<RxSubscription> sub2 = [w subscribeWithRxObserver:observer2_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  id<OrgMockitoInOrder> inOrder1 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  id<OrgMockitoInOrder> inOrder2 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer2_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder1)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder2)) verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxSubscription>) nil_chk(sub1)) unsubscribe];
  [((id<RxSubscription>) nil_chk(sub2)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:4 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testWithMultipleStaggeredSubscribers {
  RxObservable *w = RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_);
  id<RxSubscription> sub1 = [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  id<RxSubscription> sub2 = [w subscribeWithRxObserver:observer2_];
  id<OrgMockitoInOrder> inOrder1 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder1)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:4 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(3LL)];
  id<OrgMockitoInOrder> inOrder2 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer2_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder2)) verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxSubscription>) nil_chk(sub1)) unsubscribe];
  [((id<RxSubscription>) nil_chk(sub2)) unsubscribe];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testWithMultipleStaggeredSubscribersAndPublish {
  RxObservablesConnectableObservable *w = [((RxObservable *) nil_chk(RxObservable_intervalWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_))) publish];
  id<RxSubscription> sub1 = [((RxObservablesConnectableObservable *) nil_chk(w)) subscribeWithRxObserver:observer_];
  [w connect];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  id<RxSubscription> sub2 = [w subscribeWithRxObserver:observer2_];
  id<OrgMockitoInOrder> inOrder1 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder1)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:4 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(3LL)];
  id<OrgMockitoInOrder> inOrder2 = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer2_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder2)) verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(3LL)];
  [((id<RxSubscription>) nil_chk(sub1)) unsubscribe];
  [((id<RxSubscription>) nil_chk(sub2)) unsubscribe];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk([inOrder1 verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk([inOrder2 verifyWithId:observer2_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer2_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)testOnceObserverThrows {
  RxObservable *source = RxObservable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(self)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer_))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(OrgMockitoMatchers_anyLong())];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)testPeriodicObserverThrows {
  RxObservable *source = RxObservable_intervalWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(100, 100, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS), scheduler_);
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(self)];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeByWithLong:1 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_])) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(RxExceptionsTestException_class_())];
  [inOrder verifyNoMoreInteractions];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
}

- (void)timerInterval {
  RxObservable *w = RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(1, 1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), scheduler_);
  id<RxSubscription> sub = [((RxObservable *) nil_chk(w)) subscribeWithRxObserver:observer_];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:2 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  id<OrgMockitoInOrder> inOrder = OrgMockitoMockito_inOrderWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer_ } count:1 type:NSObject_class_()]);
  [((id<RxObserver>) nil_chk([((id<OrgMockitoInOrder>) nil_chk(inOrder)) verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(0LL)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_timesWithInt_(1)])) onNextWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((id<RxObserver>) nil_chk([inOrder verifyWithId:observer_ withOrgMockitoVerificationVerificationMode:OrgMockitoMockito_never()])) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
  [((id<RxSubscription>) nil_chk(sub)) unsubscribe];
  [((RxSchedulersTestScheduler *) nil_chk(scheduler_)) advanceTimeToWithLong:4 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onNextWithId:JavaLangLong_valueOfWithLong_(2LL)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onCompleted];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(observer_, OrgMockitoMockito_never()))) onErrorWithNSException:OrgMockitoMatchers_anyWithIOSClass_(NSException_class_())];
}

- (void)timerIntervalDefaultScheduler {
  RxObservable *source = [((RxObservable *) nil_chk(RxObservable_timerWithLong_withLong_withJavaUtilConcurrentTimeUnit_(1, 1, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)))) takeWithInt:100];
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk(source)) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:5 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS)];
  [ts assertValueCountWithInt:100];
  [ts assertNoErrors];
  [ts assertCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeTimerTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(observer_);
  RELEASE_(observer2_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testTimerOnce);
  methods[2].selector = @selector(testTimerPeriodically);
  methods[3].selector = @selector(testInterval);
  methods[4].selector = @selector(testWithMultipleSubscribersStartingAtSameTime);
  methods[5].selector = @selector(testWithMultipleStaggeredSubscribers);
  methods[6].selector = @selector(testWithMultipleStaggeredSubscribersAndPublish);
  methods[7].selector = @selector(testOnceObserverThrows);
  methods[8].selector = @selector(testPeriodicObserverThrows);
  methods[9].selector = @selector(timerInterval);
  methods[10].selector = @selector(timerIntervalDefaultScheduler);
  methods[11].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 11, 12 },
    { "observer2_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 13, 14 },
    { "scheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$0, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$1, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$2, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$3, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$4, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$5, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$6, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$7, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$8, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$9, (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$10, "Lrx/Observer<Ljava/lang/Object;>;", (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$11, "Lrx/Observer<Ljava/lang/Long;>;", (void *)&RxInternalOperatorsOnSubscribeTimerTest__Annotations$12 };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeTimerTest = { "OnSubscribeTimerTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeTimerTest;
}

@end

void RxInternalOperatorsOnSubscribeTimerTest_init(RxInternalOperatorsOnSubscribeTimerTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeTimerTest *new_RxInternalOperatorsOnSubscribeTimerTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeTimerTest, init)
}

RxInternalOperatorsOnSubscribeTimerTest *create_RxInternalOperatorsOnSubscribeTimerTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeTimerTest, init)
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOnSubscribeTimerTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeTimerTest)

@implementation RxInternalOperatorsOnSubscribeTimerTest_$1

- (void)onNextWithId:(JavaLangLong *)t {
  @throw create_RxExceptionsTestException_init();
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxObserver>) nil_chk(this$0_->observer_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((id<RxObserver>) nil_chk(this$0_->observer_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeTimerTest:(RxInternalOperatorsOnSubscribeTimerTest *)outer$ {
  RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(initWithRxInternalOperatorsOnSubscribeTimerTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeTimerTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangLong;", "onError", "LNSException;", "LRxInternalOperatorsOnSubscribeTimerTest;", "testOnceObserverThrows", "Lrx/Subscriber<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeTimerTest_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeTimerTest_$1;
}

@end

void RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest_$1 *self, RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeTimerTest_$1 *new_RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeTimerTest_$1, initWithRxInternalOperatorsOnSubscribeTimerTest_, outer$)
}

RxInternalOperatorsOnSubscribeTimerTest_$1 *create_RxInternalOperatorsOnSubscribeTimerTest_$1_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeTimerTest_$1, initWithRxInternalOperatorsOnSubscribeTimerTest_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeTimerTest_$2

- (void)onNextWithId:(JavaLangLong *)t {
  if ([((JavaLangLong *) nil_chk(t)) longLongValue] > 0) {
    @throw create_RxExceptionsTestException_init();
  }
  [((id<RxObserver>) nil_chk(this$0_->observer_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxObserver>) nil_chk(this$0_->observer_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((id<RxObserver>) nil_chk(this$0_->observer_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeTimerTest:(RxInternalOperatorsOnSubscribeTimerTest *)outer$ {
  RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(initWithRxInternalOperatorsOnSubscribeTimerTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeTimerTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LJavaLangLong;", "onError", "LNSException;", "LRxInternalOperatorsOnSubscribeTimerTest;", "testPeriodicObserverThrows", "Lrx/Subscriber<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeTimerTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeTimerTest_$2;
}

@end

void RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest_$2 *self, RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeTimerTest_$2 *new_RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeTimerTest_$2, initWithRxInternalOperatorsOnSubscribeTimerTest_, outer$)
}

RxInternalOperatorsOnSubscribeTimerTest_$2 *create_RxInternalOperatorsOnSubscribeTimerTest_$2_initWithRxInternalOperatorsOnSubscribeTimerTest_(RxInternalOperatorsOnSubscribeTimerTest *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeTimerTest_$2, initWithRxInternalOperatorsOnSubscribeTimerTest_, outer$)
}
