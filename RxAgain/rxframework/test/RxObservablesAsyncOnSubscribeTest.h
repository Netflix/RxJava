//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/observables/AsyncOnSubscribeTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxObservablesAsyncOnSubscribeTest")
#ifdef RESTRICT_RxObservablesAsyncOnSubscribeTest
#define INCLUDE_ALL_RxObservablesAsyncOnSubscribeTest 0
#else
#define INCLUDE_ALL_RxObservablesAsyncOnSubscribeTest 1
#endif
#undef RESTRICT_RxObservablesAsyncOnSubscribeTest

#if !defined (RxObservablesAsyncOnSubscribeTest_) && (INCLUDE_ALL_RxObservablesAsyncOnSubscribeTest || defined(INCLUDE_RxObservablesAsyncOnSubscribeTest))
#define RxObservablesAsyncOnSubscribeTest_

@class RxObserversTestSubscriber;
@protocol RxObserver;

@interface RxObservablesAsyncOnSubscribeTest : NSObject {
 @public
  id<RxObserver> o_;
  RxObserversTestSubscriber *subscriber_;
}

#pragma mark Public

- (instancetype)init;

- (void)setup;

- (void)testEmittingEmptyObservable;

- (void)testGenerics;

- (void)testOnCompleteFollowedByOnErrorOuter;

- (void)testOnCompleteOuter;

- (void)testOnErrorOuter;

- (void)testOnNextAfterCompleted;

- (void)testOnNextAfterError;

- (void)testOnUnsubscribeHasCorrectState;

- (void)testSerializesConcurrentObservables;

- (void)testSubscribedByBufferingOperator;

- (void)testThrowException;

- (void)testThrowExceptionAfterTerminal;

- (void)testTryOnNextTwice;

- (void)testUnderdeliveryCorrection;

- (void)testUnsubscribesFromAllNonTerminatedObservables;

- (void)testUnsubscribesFromAllSelfTerminatedObservables;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribeTest)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribeTest, o_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribeTest, subscriber_, RxObserversTestSubscriber *)

FOUNDATION_EXPORT void RxObservablesAsyncOnSubscribeTest_init(RxObservablesAsyncOnSubscribeTest *self);

FOUNDATION_EXPORT RxObservablesAsyncOnSubscribeTest *new_RxObservablesAsyncOnSubscribeTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObservablesAsyncOnSubscribeTest *create_RxObservablesAsyncOnSubscribeTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesAsyncOnSubscribeTest)

#endif

#pragma pop_macro("INCLUDE_ALL_RxObservablesAsyncOnSubscribeTest")
