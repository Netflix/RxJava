//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorAllTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorAllTest.h"
#include "RxObservable.h"
#include "RxObservablesBlockingObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "java/util/concurrent/TimeUnit.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/mockito/Mockito.h"

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$11();

@interface RxInternalOperatorsOperatorAllTest_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$1_init(RxInternalOperatorsOperatorAllTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$1 *new_RxInternalOperatorsOperatorAllTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$1 *create_RxInternalOperatorsOperatorAllTest_$1_init();

@interface RxInternalOperatorsOperatorAllTest_$2 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$2_init(RxInternalOperatorsOperatorAllTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$2 *new_RxInternalOperatorsOperatorAllTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$2 *create_RxInternalOperatorsOperatorAllTest_$2_init();

@interface RxInternalOperatorsOperatorAllTest_$3 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$3)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$3_init(RxInternalOperatorsOperatorAllTest_$3 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$3 *new_RxInternalOperatorsOperatorAllTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$3 *create_RxInternalOperatorsOperatorAllTest_$3_init();

@interface RxInternalOperatorsOperatorAllTest_$4 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(NSString *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$4)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$4_init(RxInternalOperatorsOperatorAllTest_$4 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$4 *new_RxInternalOperatorsOperatorAllTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$4 *create_RxInternalOperatorsOperatorAllTest_$4_init();

@interface RxInternalOperatorsOperatorAllTest_$5 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)i;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$5)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$5_init(RxInternalOperatorsOperatorAllTest_$5 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$5 *new_RxInternalOperatorsOperatorAllTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$5 *create_RxInternalOperatorsOperatorAllTest_$5_init();

@interface RxInternalOperatorsOperatorAllTest_$6 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(id)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$6_init(RxInternalOperatorsOperatorAllTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$6 *new_RxInternalOperatorsOperatorAllTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$6 *create_RxInternalOperatorsOperatorAllTest_$6_init();

@interface RxInternalOperatorsOperatorAllTest_$7 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangBoolean *)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$7)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$7_init(RxInternalOperatorsOperatorAllTest_$7 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$7 *new_RxInternalOperatorsOperatorAllTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$7 *create_RxInternalOperatorsOperatorAllTest_$7_init();

@interface RxInternalOperatorsOperatorAllTest_$8 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(id)t1;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$8_init(RxInternalOperatorsOperatorAllTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$8 *new_RxInternalOperatorsOperatorAllTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$8 *create_RxInternalOperatorsOperatorAllTest_$8_init();

@interface RxInternalOperatorsOperatorAllTest_$9 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(id)object;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$9)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$9_init(RxInternalOperatorsOperatorAllTest_$9 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$9 *new_RxInternalOperatorsOperatorAllTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$9 *create_RxInternalOperatorsOperatorAllTest_$9_init();

@interface RxInternalOperatorsOperatorAllTest_$10 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangIllegalArgumentException *val$ex_;
}

- (JavaLangBoolean *)callWithId:(id)object;

- (instancetype)initWithJavaLangIllegalArgumentException:(JavaLangIllegalArgumentException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$10, val$ex_, JavaLangIllegalArgumentException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(RxInternalOperatorsOperatorAllTest_$10 *self, JavaLangIllegalArgumentException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$10 *new_RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(JavaLangIllegalArgumentException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$10 *create_RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(JavaLangIllegalArgumentException *capture$0);

@interface RxInternalOperatorsOperatorAllTest_$11 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$11)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$11_init(RxInternalOperatorsOperatorAllTest_$11 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$11 *new_RxInternalOperatorsOperatorAllTest_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$11 *create_RxInternalOperatorsOperatorAllTest_$11_init();

@interface RxInternalOperatorsOperatorAllTest_$11_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$11_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$11_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorAllTest_$11_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$11_$1 *new_RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$11_$1 *create_RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorAllTest_$12 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$12)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$12_init(RxInternalOperatorsOperatorAllTest_$12 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$12 *new_RxInternalOperatorsOperatorAllTest_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$12 *create_RxInternalOperatorsOperatorAllTest_$12_init();

@interface RxInternalOperatorsOperatorAllTest_$13 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$13_init(RxInternalOperatorsOperatorAllTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$13 *new_RxInternalOperatorsOperatorAllTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$13 *create_RxInternalOperatorsOperatorAllTest_$13_init();

@interface RxInternalOperatorsOperatorAllTest_$13_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$13_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$13_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorAllTest_$13_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$13_$1 *new_RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$13_$1 *create_RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorAllTest_$14 : NSObject < RxFunctionsFunc1 > {
 @public
  jboolean once_;
}

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$14)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$14_init(RxInternalOperatorsOperatorAllTest_$14 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$14 *new_RxInternalOperatorsOperatorAllTest_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$14 *create_RxInternalOperatorsOperatorAllTest_$14_init();

@interface RxInternalOperatorsOperatorAllTest_$15 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$15)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$15, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(RxInternalOperatorsOperatorAllTest_$15 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$15 *new_RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$15 *create_RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorAllTest_$16 : NSObject < RxObservable_OnSubscribe > {
 @public
  NSException *val$e2_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$16)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$16, val$e2_, NSException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(RxInternalOperatorsOperatorAllTest_$16 *self, NSException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$16 *new_RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$16 *create_RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(NSException *capture$0);

@interface RxInternalOperatorsOperatorAllTest_$16_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorAllTest_$16 *this$0_;
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorAllTest_$16:(RxInternalOperatorsOperatorAllTest_$16 *)outer$
                                              withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$16_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$16_$1, this$0_, RxInternalOperatorsOperatorAllTest_$16 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$16_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16_$1 *self, RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$16_$1 *new_RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$16_$1 *create_RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorAllTest_$17 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAllTest_$17)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAllTest_$17, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorAllTest_$17 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$17 *new_RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorAllTest_$17 *create_RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@implementation RxInternalOperatorsOperatorAllTest

- (void)testAll {
  RxObservable *obs = RxObservable_justWithId_withId_withId_(@"one", @"two", @"six");
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(obs)) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$1_init()])) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onNextWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onCompleted];
  OrgMockitoMockito_verifyNoMoreInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
}

- (void)testNotAll {
  RxObservable *obs = RxObservable_justWithId_withId_withId_withId_(@"one", @"two", @"three", @"six");
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(obs)) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$2_init()])) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onNextWithId:JavaLangBoolean_valueOfWithBoolean_(false)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onCompleted];
  OrgMockitoMockito_verifyNoMoreInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
}

- (void)testEmpty {
  RxObservable *obs = RxObservable_empty();
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(obs)) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$3_init()])) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onNextWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onCompleted];
  OrgMockitoMockito_verifyNoMoreInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
}

- (void)testError {
  NSException *error = create_NSException_init();
  RxObservable *obs = RxObservable_errorWithNSException_(error);
  id<RxObserver> observer = OrgMockitoMockito_mockWithIOSClass_(RxObserver_class_());
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(obs)) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$4_init()])) subscribeWithRxObserver:observer];
  [((id<RxObserver>) nil_chk(OrgMockitoMockito_verifyWithId_(observer))) onErrorWithNSException:error];
  OrgMockitoMockito_verifyNoMoreInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ observer } count:1 type:NSObject_class_()]);
}

- (void)testFollowingFirst {
  RxObservable *o = RxObservable_fromWithJavaLangIterable_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6) } count:4 type:JavaLangInteger_class_()]));
  RxObservable *allOdd = [((RxObservable *) nil_chk(o)) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$5_init()];
  OrgJunitAssert_assertFalseWithBoolean_([((JavaLangBoolean *) nil_chk([((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(allOdd)) toBlocking])) first])) booleanValue]);
}

- (void)testIssue1935NoUnsubscribeDownstream {
  RxObservable *source = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$6_init()])) flatMapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$7_init()];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaLangInteger_valueOfWithInt_(2), [((RxObservablesBlockingObservable *) nil_chk([((RxObservable *) nil_chk(source)) toBlocking])) first]);
}

- (void)testBackpressureIfNoneRequestedNoneShouldBeDelivered {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$8_init()])) subscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
}

- (void)testBackpressureIfOneRequestedOneShouldBeDelivered {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(1);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_empty())) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$9_init()])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [ts assertNoErrors];
  [ts assertCompleted];
  [ts assertValueWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
}

- (void)testPredicateThrowsExceptionAndValueInCauseMessage {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithLong_(0);
  JavaLangIllegalArgumentException *ex = create_JavaLangIllegalArgumentException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(@"Boo!"))) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(ex)])) subscribeWithRxSubscriber:ts];
  [ts assertTerminalEvent];
  [ts assertNoValues];
  [ts assertNotCompleted];
  id<JavaUtilList> errors = [ts getOnErrorEvents];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk(errors)) size]);
  OrgJunitAssert_assertEqualsWithId_withId_(ex, [errors getWithInt:0]);
  OrgJunitAssert_assertTrueWithBoolean_([((NSString *) nil_chk([((NSException *) nil_chk([ex getCause])) getMessage])) contains:@"Boo!"]);
}

- (void)testDoesNotEmitMultipleTerminalEvents {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorAllTest_$11_init()))) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$12_init()])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertErrorWithIOSClass:JavaLangRuntimeException_class_()];
  [ts assertNotCompleted];
}

- (void)testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorAllTest_$13_init()))) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$14_init()])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithIOSClass:JavaLangRuntimeException_class_()];
  [ts assertNotCompleted];
}

- (void)testDoesNotEmitMultipleErrorEventsAndReportsSecondErrorToHooks {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(list));
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
    JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
    NSException *e2 = create_JavaLangRuntimeException_init();
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(e2)))) allWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertNotCompleted];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [ts getOnErrorEvents]);
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e2 } count:1 type:NSException_class_()]), list);
  }
  @finally {
    RxPluginsRxJavaHooks_reset();
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testAll);
  methods[1].selector = @selector(testNotAll);
  methods[2].selector = @selector(testEmpty);
  methods[3].selector = @selector(testError);
  methods[4].selector = @selector(testFollowingFirst);
  methods[5].selector = @selector(testIssue1935NoUnsubscribeDownstream);
  methods[6].selector = @selector(testBackpressureIfNoneRequestedNoneShouldBeDelivered);
  methods[7].selector = @selector(testBackpressureIfOneRequestedOneShouldBeDelivered);
  methods[8].selector = @selector(testPredicateThrowsExceptionAndValueInCauseMessage);
  methods[9].selector = @selector(testDoesNotEmitMultipleTerminalEvents);
  methods[10].selector = @selector(testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription);
  methods[11].selector = @selector(testDoesNotEmitMultipleErrorEventsAndReportsSecondErrorToHooks);
  methods[12].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorAllTest__Annotations$0, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$1, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$2, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$3, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$4, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$5, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$6, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$7, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$8, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$9, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$10, (void *)&RxInternalOperatorsOperatorAllTest__Annotations$11 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest = { "OperatorAllTest", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x1, 13, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorAllTest;
}

@end

void RxInternalOperatorsOperatorAllTest_init(RxInternalOperatorsOperatorAllTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest *new_RxInternalOperatorsOperatorAllTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest, init)
}

RxInternalOperatorsOperatorAllTest *create_RxInternalOperatorsOperatorAllTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 5000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorAllTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorAllTest)

@implementation RxInternalOperatorsOperatorAllTest_$1

- (JavaLangBoolean *)callWithId:(NSString *)s {
  return JavaLangBoolean_valueOfWithBoolean_(((jint) [((NSString *) nil_chk(s)) length]) == 3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorAllTest;", "testAll", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$1;
}

@end

void RxInternalOperatorsOperatorAllTest_$1_init(RxInternalOperatorsOperatorAllTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$1 *new_RxInternalOperatorsOperatorAllTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$1, init)
}

RxInternalOperatorsOperatorAllTest_$1 *create_RxInternalOperatorsOperatorAllTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$1, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$2

- (JavaLangBoolean *)callWithId:(NSString *)s {
  return JavaLangBoolean_valueOfWithBoolean_(((jint) [((NSString *) nil_chk(s)) length]) == 3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorAllTest;", "testNotAll", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$2;
}

@end

void RxInternalOperatorsOperatorAllTest_$2_init(RxInternalOperatorsOperatorAllTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$2 *new_RxInternalOperatorsOperatorAllTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$2, init)
}

RxInternalOperatorsOperatorAllTest_$2 *create_RxInternalOperatorsOperatorAllTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$2, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$3

- (JavaLangBoolean *)callWithId:(NSString *)s {
  return JavaLangBoolean_valueOfWithBoolean_(((jint) [((NSString *) nil_chk(s)) length]) == 3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorAllTest;", "testEmpty", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$3 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$3;
}

@end

void RxInternalOperatorsOperatorAllTest_$3_init(RxInternalOperatorsOperatorAllTest_$3 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$3 *new_RxInternalOperatorsOperatorAllTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$3, init)
}

RxInternalOperatorsOperatorAllTest_$3 *create_RxInternalOperatorsOperatorAllTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$3, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$4

- (JavaLangBoolean *)callWithId:(NSString *)s {
  return JavaLangBoolean_valueOfWithBoolean_(((jint) [((NSString *) nil_chk(s)) length]) == 3);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSString;", "LRxInternalOperatorsOperatorAllTest;", "testError", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/String;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$4 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$4;
}

@end

void RxInternalOperatorsOperatorAllTest_$4_init(RxInternalOperatorsOperatorAllTest_$4 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$4 *new_RxInternalOperatorsOperatorAllTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$4, init)
}

RxInternalOperatorsOperatorAllTest_$4 *create_RxInternalOperatorsOperatorAllTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$4, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$5

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)i {
  return JavaLangBoolean_valueOfWithBoolean_([((JavaLangInteger *) nil_chk(i)) intValue] % 2 == 1);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorAllTest;", "testFollowingFirst", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$5 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$5;
}

@end

void RxInternalOperatorsOperatorAllTest_$5_init(RxInternalOperatorsOperatorAllTest_$5 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$5 *new_RxInternalOperatorsOperatorAllTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$5, init)
}

RxInternalOperatorsOperatorAllTest_$5 *create_RxInternalOperatorsOperatorAllTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$5, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$6

- (JavaLangBoolean *)callWithId:(id)t1 {
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "LRxInternalOperatorsOperatorAllTest;", "testIssue1935NoUnsubscribeDownstream", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$6;
}

@end

void RxInternalOperatorsOperatorAllTest_$6_init(RxInternalOperatorsOperatorAllTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$6 *new_RxInternalOperatorsOperatorAllTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$6, init)
}

RxInternalOperatorsOperatorAllTest_$6 *create_RxInternalOperatorsOperatorAllTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$6, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$7

- (RxObservable *)callWithId:(JavaLangBoolean *)t1 {
  return [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(2)))) delayWithLong:500 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangBoolean;", "(Ljava/lang/Boolean;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorAllTest;", "testIssue1935NoUnsubscribeDownstream", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Boolean;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$7 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$7;
}

@end

void RxInternalOperatorsOperatorAllTest_$7_init(RxInternalOperatorsOperatorAllTest_$7 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$7 *new_RxInternalOperatorsOperatorAllTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$7, init)
}

RxInternalOperatorsOperatorAllTest_$7 *create_RxInternalOperatorsOperatorAllTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$7, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$8

- (JavaLangBoolean *)callWithId:(id)t1 {
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "LRxInternalOperatorsOperatorAllTest;", "testBackpressureIfNoneRequestedNoneShouldBeDelivered", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$8;
}

@end

void RxInternalOperatorsOperatorAllTest_$8_init(RxInternalOperatorsOperatorAllTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$8 *new_RxInternalOperatorsOperatorAllTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$8, init)
}

RxInternalOperatorsOperatorAllTest_$8 *create_RxInternalOperatorsOperatorAllTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$8, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$9

- (JavaLangBoolean *)callWithId:(id)object {
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "LRxInternalOperatorsOperatorAllTest;", "testBackpressureIfOneRequestedOneShouldBeDelivered", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$9 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$9;
}

@end

void RxInternalOperatorsOperatorAllTest_$9_init(RxInternalOperatorsOperatorAllTest_$9 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$9 *new_RxInternalOperatorsOperatorAllTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$9, init)
}

RxInternalOperatorsOperatorAllTest_$9 *create_RxInternalOperatorsOperatorAllTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$9, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$10

- (JavaLangBoolean *)callWithId:(id)object {
  @throw val$ex_;
}

- (instancetype)initWithJavaLangIllegalArgumentException:(JavaLangIllegalArgumentException *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$ex_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangIllegalArgumentException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ex_", "LJavaLangIllegalArgumentException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;", "LJavaLangIllegalArgumentException;", "LRxInternalOperatorsOperatorAllTest;", "testPredicateThrowsExceptionAndValueInCauseMessage", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$10;
}

@end

void RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(RxInternalOperatorsOperatorAllTest_$10 *self, JavaLangIllegalArgumentException *capture$0) {
  JreStrongAssign(&self->val$ex_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$10 *new_RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(JavaLangIllegalArgumentException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$10, initWithJavaLangIllegalArgumentException_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$10 *create_RxInternalOperatorsOperatorAllTest_$10_initWithJavaLangIllegalArgumentException_(JavaLangIllegalArgumentException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$10, initWithJavaLangIllegalArgumentException_, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$11

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorAllTest;", "testDoesNotEmitMultipleTerminalEvents", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$11 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$11;
}

@end

void RxInternalOperatorsOperatorAllTest_$11_init(RxInternalOperatorsOperatorAllTest_$11 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$11 *new_RxInternalOperatorsOperatorAllTest_$11_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$11, init)
}

RxInternalOperatorsOperatorAllTest_$11 *create_RxInternalOperatorsOperatorAllTest_$11_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$11, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$11_$1

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorAllTest_$11;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$11_$1;
}

@end

void RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorAllTest_$11_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$11_$1 *new_RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$11_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$11_$1 *create_RxInternalOperatorsOperatorAllTest_$11_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$11_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$12

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"boo");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorAllTest;", "testDoesNotEmitMultipleTerminalEvents", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$12 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$12;
}

@end

void RxInternalOperatorsOperatorAllTest_$12_init(RxInternalOperatorsOperatorAllTest_$12 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$12 *new_RxInternalOperatorsOperatorAllTest_$12_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$12, init)
}

RxInternalOperatorsOperatorAllTest_$12 *create_RxInternalOperatorsOperatorAllTest_$12_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$12, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$13

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorAllTest;", "testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$13;
}

@end

void RxInternalOperatorsOperatorAllTest_$13_init(RxInternalOperatorsOperatorAllTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$13 *new_RxInternalOperatorsOperatorAllTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$13, init)
}

RxInternalOperatorsOperatorAllTest_$13 *create_RxInternalOperatorsOperatorAllTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$13, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$13_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorAllTest_$13;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$13_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$13_$1;
}

@end

void RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorAllTest_$13_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$13_$1 *new_RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$13_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$13_$1 *create_RxInternalOperatorsOperatorAllTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$13_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$14

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t {
  if (once_) @throw create_JavaLangRuntimeException_initWithNSString_(@"boo");
  else {
    once_ = false;
    return JavaLangBoolean_valueOfWithBoolean_(true);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorAllTest_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "once_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LRxInternalOperatorsOperatorAllTest;", "testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$14 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$14;
}

@end

void RxInternalOperatorsOperatorAllTest_$14_init(RxInternalOperatorsOperatorAllTest_$14 *self) {
  NSObject_init(self);
  self->once_ = true;
}

RxInternalOperatorsOperatorAllTest_$14 *new_RxInternalOperatorsOperatorAllTest_$14_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$14, init)
}

RxInternalOperatorsOperatorAllTest_$14 *create_RxInternalOperatorsOperatorAllTest_$14_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$14, init)
}

@implementation RxInternalOperatorsOperatorAllTest_$15

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorAllTest;", "testDoesNotEmitMultipleErrorEventsAndReportsSecondErrorToHooks", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$15;
}

@end

void RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(RxInternalOperatorsOperatorAllTest_$15 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$15 *new_RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$15, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$15 *create_RxInternalOperatorsOperatorAllTest_$15_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$15, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$16

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(self, sub)];
}

- (instancetype)initWithNSException:(NSException *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e2_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LNSException;", "LRxInternalOperatorsOperatorAllTest;", "testDoesNotEmitMultipleErrorEventsAndReportsSecondErrorToHooks", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$16 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$16;
}

@end

void RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(RxInternalOperatorsOperatorAllTest_$16 *self, NSException *capture$0) {
  JreStrongAssign(&self->val$e2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$16 *new_RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$16, initWithNSException_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$16 *create_RxInternalOperatorsOperatorAllTest_$16_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$16, initWithNSException_, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$16_$1

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onErrorWithNSException:this$0_->val$e2_];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorAllTest_$16:(RxInternalOperatorsOperatorAllTest_$16 *)outer$
                                              withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorAllTest_$16:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorAllTest_$16;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorAllTest_$16;LRxSubscriber;", "(Lrx/internal/operators/OperatorAllTest$16;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorAllTest_$16;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$16_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$16_$1;
}

@end

void RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16_$1 *self, RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$16_$1 *new_RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$16_$1, initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorAllTest_$16_$1 *create_RxInternalOperatorsOperatorAllTest_$16_$1_initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_(RxInternalOperatorsOperatorAllTest_$16 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$16_$1, initWithRxInternalOperatorsOperatorAllTest_$16_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorAllTest_$17

- (JavaLangBoolean *)callWithId:(JavaLangInteger *)t {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorAllTest;", "testDoesNotEmitMultipleErrorEventsAndReportsSecondErrorToHooks", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorAllTest_$17 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorAllTest_$17;
}

@end

void RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorAllTest_$17 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorAllTest_$17 *new_RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorAllTest_$17, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorAllTest_$17 *create_RxInternalOperatorsOperatorAllTest_$17_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorAllTest_$17, initWithJavaLangRuntimeException_, capture$0)
}
