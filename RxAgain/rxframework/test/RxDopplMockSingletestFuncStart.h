//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/doppl/mock/singletest/FuncStart.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxDopplMockSingletestFuncStart")
#ifdef RESTRICT_RxDopplMockSingletestFuncStart
#define INCLUDE_ALL_RxDopplMockSingletestFuncStart 0
#else
#define INCLUDE_ALL_RxDopplMockSingletestFuncStart 1
#endif
#undef RESTRICT_RxDopplMockSingletestFuncStart

#if !defined (RxDopplMockSingletestFuncStart_) && (INCLUDE_ALL_RxDopplMockSingletestFuncStart || defined(INCLUDE_RxDopplMockSingletestFuncStart))
#define RxDopplMockSingletestFuncStart_

#define RESTRICT_RxFunctionsFunc2 1
#define INCLUDE_RxFunctionsFunc2 1
#include "RxFunctionsFunc2.h"

@class RxSingle;
@protocol RxSingle_OnSubscribe;

@interface RxDopplMockSingletestFuncStart : NSObject < RxFunctionsFunc2 >

#pragma mark Public

- (instancetype)init;

- (id<RxSingle_OnSubscribe>)callWithId:(RxSingle *)t1
                                withId:(id<RxSingle_OnSubscribe>)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxDopplMockSingletestFuncStart)

FOUNDATION_EXPORT void RxDopplMockSingletestFuncStart_init(RxDopplMockSingletestFuncStart *self);

FOUNDATION_EXPORT RxDopplMockSingletestFuncStart *new_RxDopplMockSingletestFuncStart_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxDopplMockSingletestFuncStart *create_RxDopplMockSingletestFuncStart_init();

J2OBJC_TYPE_LITERAL_HEADER(RxDopplMockSingletestFuncStart)

#endif

#pragma pop_macro("INCLUDE_ALL_RxDopplMockSingletestFuncStart")
