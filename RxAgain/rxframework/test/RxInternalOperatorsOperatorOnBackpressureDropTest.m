//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorOnBackpressureDropTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction1.h"
#include "RxInternalOperatorsOperatorOnBackpressureDropTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/concurrent/CopyOnWriteArrayList.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

@interface RxInternalOperatorsOperatorOnBackpressureDropTest ()

+ (RxObservable *)rangeWithLong:(jlong)n;

@end

inline id<RxFunctionsAction1> RxInternalOperatorsOperatorOnBackpressureDropTest_get_THROW_NON_FATAL();
static id<RxFunctionsAction1> RxInternalOperatorsOperatorOnBackpressureDropTest_THROW_NON_FATAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorOnBackpressureDropTest, THROW_NON_FATAL, id<RxFunctionsAction1>)

__attribute__((unused)) static RxObservable *RxInternalOperatorsOperatorOnBackpressureDropTest_rangeWithLong_(jlong n);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$8();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$3 : NSObject < RxObserver > {
 @public
  JavaUtilConcurrentCountDownLatch *val$l1_;
  JavaUtilConcurrentCountDownLatch *val$l2_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangLong *)t;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                    withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$3, val$l1_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$3, val$l2_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$4 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$count_;
}

- (void)onStart;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangLong *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$4, val$count_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$5 : NSObject < RxFunctionsAction1 > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$errorOccurred_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$5, val$errorOccurred_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$6 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$6)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$7 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$7)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$7, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$8 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$8)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$9 : NSObject < RxFunctionsAction1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$9)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$9, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$10 : NSObject < RxFunctionsAction1 > {
 @public
  id<JavaUtilList> val$list_;
}

- (void)callWithId:(NSException *)t;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$10)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$10, val$list_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$11 : NSObject < RxObservable_OnSubscribe > {
 @public
  JavaLangRuntimeException *val$e2_;
}

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$11)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$11, val$e2_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *this$0_;
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11:(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *)outer$
                                                             withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1, this$0_, RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *self, RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$12 : NSObject < RxFunctionsAction1 > {
 @public
  JavaLangRuntimeException *val$e1_;
}

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$12)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$12, val$e1_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$13 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)sub;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$13)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 : NSObject < RxProducer > {
 @public
  RxSubscriber *val$sub_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1, val$sub_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$14 : NSObject < RxFunctionsAction1 > {
 @public
  JavaLangRuntimeException *val$e_;
}

- (void)callWithId:(JavaLangInteger *)t;

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$14)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorOnBackpressureDropTest_$14, val$e_, JavaLangRuntimeException *)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *self, JavaLangRuntimeException *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0);

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$1 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(JavaLangLong *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$2 : NSObject < RxObservable_OnSubscribe >

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init();

@interface RxInternalOperatorsOperatorOnBackpressureDropTest_$15 : NSObject < RxObservable_OnSubscribe > {
 @public
  jlong val$n_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithLong:(jlong)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnBackpressureDropTest_$15)

__attribute__((unused)) static void RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *self, jlong capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(jlong capture$0);

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorOnBackpressureDropTest)

RxObservable *RxInternalOperatorsOperatorOnBackpressureDropTest_infinite;

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest

- (void)testNoBackpressureSupport {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [ts requestMoreWithLong:100];
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxInternalOperatorsOperatorOnBackpressureDropTest_infinite)) takeWithInt:500])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithLong_withLong_(500, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [ts assertNoErrors];
}

- (void)testWithObserveOn {
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(0, JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 10))) onBackpressureDrop])) observeOnWithRxScheduler:RxSchedulersSchedulers_io()])) subscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
}

- (void)testFixBackpressureWithBuffer {
  JavaUtilConcurrentCountDownLatch *l1 = create_JavaUtilConcurrentCountDownLatch_initWithInt_(100);
  JavaUtilConcurrentCountDownLatch *l2 = create_JavaUtilConcurrentCountDownLatch_initWithInt_(150);
  RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_initWithRxObserver_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(l1, l2));
  [ts requestMoreWithLong:100];
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxInternalOperatorsOperatorOnBackpressureDropTest_infinite)) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) onBackpressureDrop])) takeWithInt:500])) subscribeWithRxSubscriber:ts];
  [l1 await];
  OrgJunitAssert_assertEqualsWithLong_withLong_(100, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [ts requestMoreWithLong:50];
  [l2 await];
  OrgJunitAssert_assertEqualsWithLong_withLong_(150, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [ts requestMoreWithLong:350];
  [ts awaitTerminalEvent];
  OrgJunitAssert_assertEqualsWithLong_withLong_(500, [((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) size]);
  [ts assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((JavaLangLong *) nil_chk([((id<JavaUtilList>) nil_chk([ts getOnNextEvents])) getWithInt:0])) intValue]);
}

- (void)testRequestOverflow {
  JavaUtilConcurrentAtomicAtomicInteger *count = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  jint n = 10;
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxInternalOperatorsOperatorOnBackpressureDropTest_rangeWithLong_(n))) onBackpressureDrop])) subscribeWithRxSubscriber:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(count)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(n, [count get]);
}

- (void)testNonFatalExceptionFromOverflowActionIsNotReportedFromUpstreamOperator {
  JavaUtilConcurrentAtomicAtomicBoolean *errorOccurred = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(false);
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxInternalOperatorsOperatorOnBackpressureDropTest_rangeWithLong_(2))) doOnErrorWithRxFunctionsAction1:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(errorOccurred)])) onBackpressureDropWithRxFunctionsAction1:RxInternalOperatorsOperatorOnBackpressureDropTest_THROW_NON_FATAL])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertFalseWithBoolean_([errorOccurred get]);
}

- (void)testOnDropMethodIsCalled {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init()))) onBackpressureDropWithRxFunctionsAction1:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(list)])) subscribeWithRxSubscriber:ts];
  OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]), list);
}

- (void)testUpstreamEmitsOnCompletedAfterFailureWithoutCheckingSubscription {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init()))) onBackpressureDropWithRxFunctionsAction1:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

- (void)testUpstreamEmitsErrorAfterFailureWithoutCheckingSubscriptionResultsInHooksOnErrorCalled {
  @try {
    id<JavaUtilList> list = create_JavaUtilConcurrentCopyOnWriteArrayList_init();
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(list));
    RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
    JavaLangRuntimeException *e1 = create_JavaLangRuntimeException_init();
    JavaLangRuntimeException *e2 = create_JavaLangRuntimeException_init();
    [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(e2)))) onBackpressureDropWithRxFunctionsAction1:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(e1)])) unsafeSubscribeWithRxSubscriber:ts];
    [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e1 } count:1 type:JavaLangRuntimeException_class_()]), [ts getOnErrorEvents]);
    [ts assertNotCompleted];
    OrgJunitAssert_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ e2 } count:1 type:JavaLangRuntimeException_class_()]), list);
  }
  @finally {
    RxPluginsRxJavaHooks_setOnErrorWithRxFunctionsAction1_(nil);
  }
}

- (void)testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  JavaLangRuntimeException *e = create_JavaLangRuntimeException_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init()))) onBackpressureDropWithRxFunctionsAction1:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(e)])) unsafeSubscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertErrorWithNSException:e];
  [ts assertNotCompleted];
}

+ (RxObservable *)rangeWithLong:(jlong)n {
  return RxInternalOperatorsOperatorOnBackpressureDropTest_rangeWithLong_(n);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "LRxObservable;", 0x1a, 10, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testNoBackpressureSupport);
  methods[1].selector = @selector(testWithObserveOn);
  methods[2].selector = @selector(testFixBackpressureWithBuffer);
  methods[3].selector = @selector(testRequestOverflow);
  methods[4].selector = @selector(testNonFatalExceptionFromOverflowActionIsNotReportedFromUpstreamOperator);
  methods[5].selector = @selector(testOnDropMethodIsCalled);
  methods[6].selector = @selector(testUpstreamEmitsOnCompletedAfterFailureWithoutCheckingSubscription);
  methods[7].selector = @selector(testUpstreamEmitsErrorAfterFailureWithoutCheckingSubscriptionResultsInHooksOnErrorCalled);
  methods[8].selector = @selector(testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription);
  methods[9].selector = @selector(rangeWithLong:);
  methods[10].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "THROW_NON_FATAL", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1a, -1, 13, 14, -1 },
    { "infinite", "LRxObservable;", .constantValue.asLong = 0, 0x18, -1, 15, 16, -1 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$0, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$1, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$2, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$3, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$4, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$5, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$6, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$7, (void *)&RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$8, "range", "J", "(J)Lrx/Observable<Ljava/lang/Long;>;", &RxInternalOperatorsOperatorOnBackpressureDropTest_THROW_NON_FATAL, "Lrx/functions/Action1<Ljava/lang/Long;>;", &RxInternalOperatorsOperatorOnBackpressureDropTest_infinite, "Lrx/Observable<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest = { "OperatorOnBackpressureDropTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 11, 2, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorOnBackpressureDropTest class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOperatorOnBackpressureDropTest_THROW_NON_FATAL, new_RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init());
    JreStrongAssign(&RxInternalOperatorsOperatorOnBackpressureDropTest_infinite, RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init()));
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorOnBackpressureDropTest)
  }
}

@end

RxObservable *RxInternalOperatorsOperatorOnBackpressureDropTest_rangeWithLong_(jlong n) {
  RxInternalOperatorsOperatorOnBackpressureDropTest_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(n));
}

void RxInternalOperatorsOperatorOnBackpressureDropTest_init(RxInternalOperatorsOperatorOnBackpressureDropTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest *new_RxInternalOperatorsOperatorOnBackpressureDropTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest *create_RxInternalOperatorsOperatorOnBackpressureDropTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 500) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 500) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorOnBackpressureDropTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorOnBackpressureDropTest)

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$3

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(JavaLangLong *)t {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$l1_)) countDown];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$l2_)) countDown];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                    withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$l1_);
  RELEASE_(val$l2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentCountDownLatch:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$l1_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$l2_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangLong;", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentCountDownLatch;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testFixBackpressureWithBuffer", "Ljava/lang/Object;Lrx/Observer<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$3;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  JreStrongAssign(&self->val$l1_, capture$0);
  JreStrongAssign(&self->val$l2_, capture$1);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$3, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$3 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$3, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$4

- (void)onStart {
  [self requestWithLong:10];
}

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
  @throw create_JavaLangRuntimeException_initWithNSException_(e);
}

- (void)onNextWithId:(JavaLangLong *)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$count_)) incrementAndGet];
  [self requestWithLong:JavaLangLong_MAX_VALUE - 1];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorOnBackpressureDropTest_$4 class]);
  RELEASE_(val$count_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(onCompleted);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onNextWithId:);
  methods[4].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$count_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LJavaLangLong;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testRequestOverflow", "Lrx/Subscriber<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$4;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$count_, capture$0);
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$4 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$4_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$4, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$5

- (void)callWithId:(NSException *)t {
  [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$errorOccurred_)) setWithBoolean:true];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$errorOccurred_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$errorOccurred_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilConcurrentAtomicAtomicBoolean;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testNonFatalExceptionFromOverflowActionIsNotReportedFromUpstreamOperator", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$5;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  JreStrongAssign(&self->val$errorOccurred_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$5, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$5 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$5_initWithJavaUtilConcurrentAtomicAtomicBoolean_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$5, initWithJavaUtilConcurrentAtomicAtomicBoolean_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$6

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testOnDropMethodIsCalled", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$6 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$6;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$6, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$6 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$6, init)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
    [val$sub_ onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$6;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$6_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$7

- (void)callWithId:(JavaLangInteger *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Integer;>;)V", "Ljava/util/List<Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testOnDropMethodIsCalled", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$7 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$7;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$7, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$7 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$7, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$8

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsOnCompletedAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$8 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$8;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$8, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$8 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$8, init)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onCompleted];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$8;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$8_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$9

- (void)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsOnCompletedAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$9 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$9;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$9, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$9 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$9_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$9, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$10

- (void)callWithId:(NSException *)t {
  [((id<JavaUtilList>) nil_chk(val$list_)) addWithId:t];
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$list_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "Ljava/util/List<Ljava/lang/Throwable;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsErrorAfterFailureWithoutCheckingSubscriptionResultsInHooksOnErrorCalled", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$10 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, 7, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$10;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$list_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$10, initWithJavaUtilList_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$10 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$10_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$10, initWithJavaUtilList_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$11

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(self, sub)];
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e2_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsErrorAfterFailureWithoutCheckingSubscriptionResultsInHooksOnErrorCalled", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$11 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$11;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e2_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$11, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$11, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onErrorWithNSException:this$0_->val$e2_];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11:(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *)outer$
                                                             withRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$11;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$11;LRxSubscriber;", "(Lrx/internal/operators/OperatorOnBackpressureDropTest$11;Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$11;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *self, RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1, initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_, outer$, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1_initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$11 *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$11_$1, initWithRxInternalOperatorsOperatorOnBackpressureDropTest_$11_withRxSubscriber_, outer$, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$12

- (void)callWithId:(JavaLangInteger *)t {
  @throw val$e1_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e1_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsErrorAfterFailureWithoutCheckingSubscriptionResultsInHooksOnErrorCalled", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$12 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$12;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e1_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$12, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$12 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$12_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$12, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$13

- (void)callWithId:(RxSubscriber *)sub {
  [((RxSubscriber *) nil_chk(sub)) setProducerWithRxProducer:create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(sub)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$13 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$13;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$13, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$13 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$13, init)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1

- (void)requestWithLong:(jlong)n {
  if (n > 1) {
    [((RxSubscriber *) nil_chk(val$sub_)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [val$sub_ onNextWithId:JavaLangInteger_valueOfWithInt_(2)];
  }
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$sub_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Integer;>;)V", "Lrx/Subscriber<-Ljava/lang/Integer;>;", "LRxInternalOperatorsOperatorOnBackpressureDropTest_$13;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *self, RxSubscriber *capture$0) {
  JreStrongAssign(&self->val$sub_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1, initWithRxSubscriber_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$13_$1, initWithRxSubscriber_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$14

- (void)callWithId:(JavaLangInteger *)t {
  @throw val$e_;
}

- (instancetype)initWithJavaLangRuntimeException:(JavaLangRuntimeException *)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaLangRuntimeException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "LJavaLangRuntimeException;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "testUpstreamEmitsOnNextAfterFailureWithoutCheckingSubscription", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$14 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$14;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *self, JavaLangRuntimeException *capture$0) {
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$14, initWithJavaLangRuntimeException_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$14 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$14_initWithJavaLangRuntimeException_(JavaLangRuntimeException *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$14, initWithJavaLangRuntimeException_, capture$0)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$1

- (void)callWithId:(JavaLangLong *)n {
  @throw create_JavaLangRuntimeException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangLong;", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$1;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$1, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$1 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$1, init)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$2

- (void)callWithId:(RxSubscriber *)s {
  jlong i = 0;
  while (![((RxSubscriber *) nil_chk(s)) isUnsubscribed]) {
    [s onNextWithId:JavaLangLong_valueOfWithLong_(i++)];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$2 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$2;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init(RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$2, init)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$2 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$2, init)
}

@implementation RxInternalOperatorsOperatorOnBackpressureDropTest_$15

- (void)callWithId:(RxSubscriber *)s {
  for (jlong i = 0; i < val$n_; i++) {
    if ([((RxSubscriber *) nil_chk(s)) isUnsubscribed]) {
      break;
    }
    [s onNextWithId:JavaLangLong_valueOfWithLong_(i)];
  }
  [((RxSubscriber *) nil_chk(s)) onCompleted];
}

- (instancetype)initWithLong:(jlong)capture$0 {
  RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$n_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Long;>;)V", "J", "LRxInternalOperatorsOperatorOnBackpressureDropTest;", "rangeWithLong:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorOnBackpressureDropTest_$15 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorOnBackpressureDropTest_$15;
}

@end

void RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *self, jlong capture$0) {
  self->val$n_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *new_RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(jlong capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$15, initWithLong_, capture$0)
}

RxInternalOperatorsOperatorOnBackpressureDropTest_$15 *create_RxInternalOperatorsOperatorOnBackpressureDropTest_$15_initWithLong_(jlong capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorOnBackpressureDropTest_$15, initWithLong_, capture$0)
}
