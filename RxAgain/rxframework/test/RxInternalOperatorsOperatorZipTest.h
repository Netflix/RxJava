//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorZipTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorZipTest")
#ifdef RESTRICT_RxInternalOperatorsOperatorZipTest
#define INCLUDE_ALL_RxInternalOperatorsOperatorZipTest 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorZipTest 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorZipTest

#if !defined (RxInternalOperatorsOperatorZipTest_) && (INCLUDE_ALL_RxInternalOperatorsOperatorZipTest || defined(INCLUDE_RxInternalOperatorsOperatorZipTest))
#define RxInternalOperatorsOperatorZipTest_

@class JavaUtilConcurrentAtomicAtomicInteger;
@class JavaUtilConcurrentCountDownLatch;
@class RxObservable;
@class RxSubjectsPublishSubject;
@protocol OrgMockitoInOrder;
@protocol RxFunctionsFunc2;
@protocol RxFunctionsFunc3;
@protocol RxObserver;

@interface RxInternalOperatorsOperatorZipTest : NSObject {
 @public
  id<RxFunctionsFunc2> concat2Strings_;
  RxSubjectsPublishSubject *s1_;
  RxSubjectsPublishSubject *s2_;
  RxObservable *zipped_;
  id<RxObserver> observer_;
  id<OrgMockitoInOrder> inOrder_;
  id<RxFunctionsFunc2> zipr2_;
  id<RxFunctionsFunc3> zipr3_;
  RxObservable *OBSERVABLE_OF_5_INTEGERS_;
}

#pragma mark Public

- (instancetype)init;

- (void)setUp;

- (void)testAggregate3Types;

- (void)testAggregateMultipleTypes;

- (void)testAggregatorDifferentSizedResultsWithOnComplete;

- (void)testAggregatorEarlyCompletion;

- (void)testAggregatorError;

- (void)testAggregatorSimple;

- (void)testAggregatorsWithDifferentSizesAndTiming;

- (void)testAggregatorUnsubscribe;

- (void)testBackpressureAsync;

- (void)testBackpressureSync;

- (void)testCollectionSizeDifferentThanFunction;

- (void)testDownstreamBackpressureRequestsWithFiniteSyncObservables;

- (void)testDownstreamBackpressureRequestsWithInfiniteAsyncObservables;

- (void)testDownstreamBackpressureRequestsWithInfiniteSyncObservables;

- (void)testEmitMaterializedNotifications;

- (void)testEmitNull;

- (void)testFirstCompletesThenSecondInfinite;

- (void)testFirstFails;

- (void)testFirstInfiniteThenSecondCompletes;

- (void)testIssue1812;

- (void)testOnErrorTermination;

- (void)testOnFirstCompletion;

- (void)testOnNextExceptionInvokesOnError;

- (void)testSecondCompletesThenFirstInfinite;

- (void)testSecondFails;

- (void)testSecondInfiniteThenFirstCompletes;

- (void)testStart;

- (void)testStart2Types;

- (void)testStart3Types;

- (void)testStartAsync;

- (void)testStartEmptyList;

- (void)testStartEmptyListBlocking;

- (void)testStartEmptyObservables;

- (void)testStartInfiniteAndFinite;

- (void)testStartpingDifferentLengthObservableSequences1;

- (void)testStartpingDifferentLengthObservableSequences2;

- (void)testStartWithOnCompletedTwice;

- (void)testUnboundedDownstreamOverRequesting;

- (void)testZipArraySingleItem;

- (void)testZipBigArray;

- (void)testZipEmptyArray;

- (void)testZipObservableObservableBackpressure;

- (void)testZipRace;

- (void)testZipRequest1;

- (void)zip4;

- (void)zip5;

- (void)zip6;

- (void)zip7;

- (void)zip8;

- (void)zip9;

#pragma mark Package-Private

- (RxObservable *)ASYNC_OBSERVABLE_OF_INFINITE_INTEGERSWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch;

- (RxObservable *)OBSERVABLE_OF_5_INTEGERSWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)numEmitted;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorZipTest)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, concat2Strings_, id<RxFunctionsFunc2>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, s1_, RxSubjectsPublishSubject *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, s2_, RxSubjectsPublishSubject *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, zipped_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, observer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, inOrder_, id<OrgMockitoInOrder>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, zipr2_, id<RxFunctionsFunc2>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, zipr3_, id<RxFunctionsFunc3>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorZipTest, OBSERVABLE_OF_5_INTEGERS_, RxObservable *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorZipTest_init(RxInternalOperatorsOperatorZipTest *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorZipTest *new_RxInternalOperatorsOperatorZipTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorZipTest *create_RxInternalOperatorsOperatorZipTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorZipTest)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorZipTest")
