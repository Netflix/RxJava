//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/util/ScalarSynchronousObservableTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxExceptionsTestException.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalUtilScalarSynchronousObservable.h"
#include "RxInternalUtilScalarSynchronousObservableTest.h"
#include "RxObservable.h"
#include "RxObserversTestSubscriber.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$10();

@interface RxInternalUtilScalarSynchronousObservableTest_$1 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$1)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$1_init(RxInternalUtilScalarSynchronousObservableTest_$1 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$1_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$2 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$2)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$2_init(RxInternalUtilScalarSynchronousObservableTest_$2 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$2 *new_RxInternalUtilScalarSynchronousObservableTest_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$2 *create_RxInternalUtilScalarSynchronousObservableTest_$2_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$3 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)n;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$3)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$3_init(RxInternalUtilScalarSynchronousObservableTest_$3 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$3 *new_RxInternalUtilScalarSynchronousObservableTest_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$3 *create_RxInternalUtilScalarSynchronousObservableTest_$3_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$3_$1 : NSObject < RxFunctionsFunc1 >

- (JavaLangBoolean *)callWithId:(id)o;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$3_$1)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$3_$1_init(RxInternalUtilScalarSynchronousObservableTest_$3_$1 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$3_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$3_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$3_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$3_$1_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$4 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$4)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$4_init(RxInternalUtilScalarSynchronousObservableTest_$4 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$4 *new_RxInternalUtilScalarSynchronousObservableTest_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$4 *create_RxInternalUtilScalarSynchronousObservableTest_$4_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$5 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$5)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$5_init(RxInternalUtilScalarSynchronousObservableTest_$5 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$5 *new_RxInternalUtilScalarSynchronousObservableTest_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$5 *create_RxInternalUtilScalarSynchronousObservableTest_$5_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$6 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(JavaLangInteger *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$6)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$6_init(RxInternalUtilScalarSynchronousObservableTest_$6 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$6 *new_RxInternalUtilScalarSynchronousObservableTest_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$6 *create_RxInternalUtilScalarSynchronousObservableTest_$6_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$7 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$7)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$7_init(RxInternalUtilScalarSynchronousObservableTest_$7 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$7 *new_RxInternalUtilScalarSynchronousObservableTest_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$7 *create_RxInternalUtilScalarSynchronousObservableTest_$7_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$8 : NSObject < RxFunctionsFunc1 > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$c_;
}

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)t;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$8)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousObservableTest_$8, val$c_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalUtilScalarSynchronousObservableTest_$8 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$8 *new_RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$8 *create_RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalUtilScalarSynchronousObservableTest_$9 : NSObject < RxFunctionsFunc1 >

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$9)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$9_init(RxInternalUtilScalarSynchronousObservableTest_$9 *self);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$9 *new_RxInternalUtilScalarSynchronousObservableTest_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$9 *create_RxInternalUtilScalarSynchronousObservableTest_$9_init();

@interface RxInternalUtilScalarSynchronousObservableTest_$9_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  id val$v_;
}

- (void)callWithId:(RxSubscriber *)t;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservableTest_$9_$1)

J2OBJC_FIELD_SETTER(RxInternalUtilScalarSynchronousObservableTest_$9_$1, val$v_, id)

__attribute__((unused)) static void RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(RxInternalUtilScalarSynchronousObservableTest_$9_$1 *self, id capture$0);

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$9_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilScalarSynchronousObservableTest_$9_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(id capture$0);

@implementation RxInternalUtilScalarSynchronousObservableTest

- (void)testBackpressure {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)testBackpressureSubscribeOn {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)testBackpressureObserveOn {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) observeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) subscribeWithRxSubscriber:ts];
  JavaLangThread_sleepWithLong_(200);
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts awaitTerminalEvent];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)testBackpressureFlatMapJust {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousObservableTest_$1_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)testBackpressureFlatMapRange {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_createWithLong_(0);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousObservableTest_$2_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertNoValues];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValueWithId:JavaLangInteger_valueOfWithInt_(1)];
  [ts assertNoErrors];
  [ts assertNotCompleted];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertCompleted];
  [ts assertNoErrors];
  [ts requestMoreWithLong:1];
  [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2) } count:2 type:JavaLangInteger_class_()]];
  [ts assertCompleted];
  [ts assertNoErrors];
}

- (void)emptiesAndJust {
  RxObserversTestSubscriber *ts = RxObserversTestSubscriber_create();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousObservableTest_$3_init()])) subscribeWithRxSubscriber:ts];
  [((RxObserversTestSubscriber *) nil_chk(ts)) assertValueWithId:@"Hello"];
  [ts assertNoErrors];
  [ts assertCompleted];
}

- (void)syncObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousObservableTest_$4_init();
  [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)syncFlatMapJustObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousObservableTest_$5_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) flatMapWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousObservableTest_$6_init()])) unsafeSubscribeWithRxSubscriber:ts];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)asyncObserverNextThrows {
  RxObserversTestSubscriber *ts = create_RxInternalUtilScalarSynchronousObservableTest_$7_init();
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()])) unsafeSubscribeWithRxSubscriber:ts];
  [ts awaitTerminalEvent];
  [ts assertNoValues];
  [ts assertErrorWithIOSClass:RxExceptionsTestException_class_()];
  [ts assertNotCompleted];
}

- (void)hookCalled {
  id<RxFunctionsFunc1> save = RxPluginsRxJavaHooks_getOnObservableCreate();
  @try {
    JavaUtilConcurrentAtomicAtomicInteger *c = create_JavaUtilConcurrentAtomicAtomicInteger_init();
    RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(create_RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(c));
    jint n = 10;
    for (jint i = 0; i < n; i++) {
      [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribe];
    }
    OrgJunitAssert_assertEqualsWithLong_withLong_(n, [c get]);
  }
  @finally {
    RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(save);
  }
}

- (void)hookChangesBehavior {
  id<RxFunctionsFunc1> save = RxPluginsRxJavaHooks_getOnObservableCreate();
  @try {
    RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(create_RxInternalUtilScalarSynchronousObservableTest_$9_init());
    RxObserversTestSubscriber *ts = create_RxObserversTestSubscriber_init();
    [((RxObservable *) nil_chk(RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(1)))) subscribeWithRxSubscriber:ts];
    [ts assertValuesWithNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(1) } count:2 type:JavaLangInteger_class_()]];
    [ts assertNoErrors];
    [ts assertCompleted];
  }
  @finally {
    RxPluginsRxJavaHooks_setOnObservableCreateWithRxFunctionsFunc1_(save);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testBackpressure);
  methods[1].selector = @selector(testBackpressureSubscribeOn);
  methods[2].selector = @selector(testBackpressureObserveOn);
  methods[3].selector = @selector(testBackpressureFlatMapJust);
  methods[4].selector = @selector(testBackpressureFlatMapRange);
  methods[5].selector = @selector(emptiesAndJust);
  methods[6].selector = @selector(syncObserverNextThrows);
  methods[7].selector = @selector(syncFlatMapJustObserverNextThrows);
  methods[8].selector = @selector(asyncObserverNextThrows);
  methods[9].selector = @selector(hookCalled);
  methods[10].selector = @selector(hookChangesBehavior);
  methods[11].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$0, "LJavaLangException;", (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$1, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$2, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$3, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$4, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$5, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$6, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$7, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$8, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$9, (void *)&RxInternalUtilScalarSynchronousObservableTest__Annotations$10 };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest = { "ScalarSynchronousObservableTest", "rx.internal.util", ptrTable, methods, NULL, 7, 0x1, 12, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_init(RxInternalUtilScalarSynchronousObservableTest *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest *new_RxInternalUtilScalarSynchronousObservableTest_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest, init)
}

RxInternalUtilScalarSynchronousObservableTest *create_RxInternalUtilScalarSynchronousObservableTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest, init)
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 1000) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalUtilScalarSynchronousObservableTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilScalarSynchronousObservableTest)

@implementation RxInternalUtilScalarSynchronousObservableTest_$1

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_justWithId_(v);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalUtilScalarSynchronousObservableTest;", "testBackpressureFlatMapJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$1 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$1;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$1_init(RxInternalUtilScalarSynchronousObservableTest_$1 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$1, init)
}

RxInternalUtilScalarSynchronousObservableTest_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$1, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$2

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_rangeWithInt_withInt_([((JavaLangInteger *) nil_chk(v)) intValue], 2);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalUtilScalarSynchronousObservableTest;", "testBackpressureFlatMapRange", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$2 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$2;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$2_init(RxInternalUtilScalarSynchronousObservableTest_$2 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$2 *new_RxInternalUtilScalarSynchronousObservableTest_$2_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$2, init)
}

RxInternalUtilScalarSynchronousObservableTest_$2 *create_RxInternalUtilScalarSynchronousObservableTest_$2_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$2, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$3

- (RxObservable *)callWithId:(JavaLangInteger *)n {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_justWithId_withId_(nil, nil))) filterWithRxFunctionsFunc1:create_RxInternalUtilScalarSynchronousObservableTest_$3_$1_init()])) switchIfEmptyWithRxObservable:[((RxObservable *) nil_chk(RxObservable_empty())) switchIfEmptyWithRxObservable:RxObservable_justWithId_(@"Hello")]];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/String;>;", "LRxInternalUtilScalarSynchronousObservableTest;", "emptiesAndJust", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$3 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$3;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$3_init(RxInternalUtilScalarSynchronousObservableTest_$3 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$3 *new_RxInternalUtilScalarSynchronousObservableTest_$3_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$3, init)
}

RxInternalUtilScalarSynchronousObservableTest_$3 *create_RxInternalUtilScalarSynchronousObservableTest_$3_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$3, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$3_$1

- (JavaLangBoolean *)callWithId:(id)o {
  return JavaLangBoolean_valueOfWithBoolean_(o != nil);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$3_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LNSObject;", "LRxInternalUtilScalarSynchronousObservableTest_$3;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$3_$1 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$3_$1;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$3_$1_init(RxInternalUtilScalarSynchronousObservableTest_$3_$1 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$3_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$3_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$3_$1, init)
}

RxInternalUtilScalarSynchronousObservableTest_$3_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$3_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$3_$1, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$4

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousObservableTest;", "syncObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$4 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$4;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$4_init(RxInternalUtilScalarSynchronousObservableTest_$4 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$4 *new_RxInternalUtilScalarSynchronousObservableTest_$4_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$4, init)
}

RxInternalUtilScalarSynchronousObservableTest_$4 *create_RxInternalUtilScalarSynchronousObservableTest_$4_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$4, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$5

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousObservableTest;", "syncFlatMapJustObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$5 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$5;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$5_init(RxInternalUtilScalarSynchronousObservableTest_$5 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$5 *new_RxInternalUtilScalarSynchronousObservableTest_$5_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$5, init)
}

RxInternalUtilScalarSynchronousObservableTest_$5 *create_RxInternalUtilScalarSynchronousObservableTest_$5_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$5, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$6

- (RxObservable *)callWithId:(JavaLangInteger *)v {
  return RxObservable_justWithId_(v);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "LRxInternalUtilScalarSynchronousObservableTest;", "syncFlatMapJustObserverNextThrows", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$6 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$6;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$6_init(RxInternalUtilScalarSynchronousObservableTest_$6 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$6 *new_RxInternalUtilScalarSynchronousObservableTest_$6_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$6, init)
}

RxInternalUtilScalarSynchronousObservableTest_$6 *create_RxInternalUtilScalarSynchronousObservableTest_$6_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$6, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$7

- (void)onNextWithId:(JavaLangInteger *)t {
  @throw create_RxExceptionsTestException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalUtilScalarSynchronousObservableTest;", "asyncObserverNextThrows", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$7 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$7;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$7_init(RxInternalUtilScalarSynchronousObservableTest_$7 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$7 *new_RxInternalUtilScalarSynchronousObservableTest_$7_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$7, init)
}

RxInternalUtilScalarSynchronousObservableTest_$7 *create_RxInternalUtilScalarSynchronousObservableTest_$7_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$7, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$8

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)t {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$c_)) getAndIncrement];
  return t;
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$c_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$c_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxObservable_OnSubscribe;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalUtilScalarSynchronousObservableTest;", "hookCalled", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$8 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$8;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalUtilScalarSynchronousObservableTest_$8 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$c_, capture$0);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$8 *new_RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$8, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalUtilScalarSynchronousObservableTest_$8 *create_RxInternalUtilScalarSynchronousObservableTest_$8_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$8, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$9

- (id<RxObservable_OnSubscribe>)callWithId:(id<RxObservable_OnSubscribe>)f {
  if ([f isKindOfClass:[RxInternalUtilScalarSynchronousObservable_JustOnSubscribe class]]) {
    id v = ((RxInternalUtilScalarSynchronousObservable_JustOnSubscribe *) nil_chk(((RxInternalUtilScalarSynchronousObservable_JustOnSubscribe *) cast_chk(f, [RxInternalUtilScalarSynchronousObservable_JustOnSubscribe class]))))->value_;
    return create_RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(v);
  }
  return f;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilScalarSynchronousObservableTest_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable_OnSubscribe;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable_OnSubscribe;", "LRxInternalUtilScalarSynchronousObservableTest;", "hookChangesBehavior", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable$OnSubscribe;Lrx/Observable$OnSubscribe;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$9 = { "", "rx.internal.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$9;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$9_init(RxInternalUtilScalarSynchronousObservableTest_$9 *self) {
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$9 *new_RxInternalUtilScalarSynchronousObservableTest_$9_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$9, init)
}

RxInternalUtilScalarSynchronousObservableTest_$9 *create_RxInternalUtilScalarSynchronousObservableTest_$9_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$9, init)
}

@implementation RxInternalUtilScalarSynchronousObservableTest_$9_$1

- (void)callWithId:(RxSubscriber *)t {
  [((RxSubscriber *) nil_chk(t)) onNextWithId:val$v_];
  [t onNextWithId:val$v_];
  [t onCompleted];
}

- (instancetype)initWithId:(id)capture$0 {
  RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$v_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$v_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/lang/Object;>;)V", "LNSObject;", "LRxInternalUtilScalarSynchronousObservableTest_$9;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalUtilScalarSynchronousObservableTest_$9_$1 = { "", "rx.internal.util", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalUtilScalarSynchronousObservableTest_$9_$1;
}

@end

void RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(RxInternalUtilScalarSynchronousObservableTest_$9_$1 *self, id capture$0) {
  JreStrongAssign(&self->val$v_, capture$0);
  NSObject_init(self);
}

RxInternalUtilScalarSynchronousObservableTest_$9_$1 *new_RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxInternalUtilScalarSynchronousObservableTest_$9_$1, initWithId_, capture$0)
}

RxInternalUtilScalarSynchronousObservableTest_$9_$1 *create_RxInternalUtilScalarSynchronousObservableTest_$9_$1_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalUtilScalarSynchronousObservableTest_$9_$1, initWithId_, capture$0)
}
