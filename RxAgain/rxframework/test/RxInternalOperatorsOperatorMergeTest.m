//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OperatorMergeTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxFunctionsFunc1.h"
#include "RxInternalOperatorsOperatorMergeTest.h"
#include "RxInternalUtilRxRingBuffer.h"
#include "RxObservable.h"
#include "RxObserver.h"
#include "RxObserversTestSubscriber.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubscription.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Spliterator.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/function/Consumer.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/Answers.h"
#include "org/mockito/Mock.h"
#include "org/mockito/MockitoAnnotations.h"

@interface RxInternalOperatorsOperatorMergeTest ()

- (RxObservable *)mergeNSyncStreamsOfNWithInt:(jint)outerSize
                                      withInt:(jint)innerSize;

- (RxObservable *)createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)generated;

@end

__attribute__((unused)) static RxObservable *RxInternalOperatorsOperatorMergeTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorMergeTest *self, JavaUtilConcurrentAtomicAtomicInteger *generated);

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$2();

@interface RxInternalOperatorsOperatorMergeTest_$1 : RxObserversTestSubscriber

- (void)onNextWithId:(JavaLangInteger *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeTest_$1)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeTest_$1_init(RxInternalOperatorsOperatorMergeTest_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$1 *new_RxInternalOperatorsOperatorMergeTest_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$1 *create_RxInternalOperatorsOperatorMergeTest_$1_init();

@interface RxInternalOperatorsOperatorMergeTest_$2 : NSObject < RxFunctionsFunc1 > {
 @public
  jint val$innerSize_;
}

- (RxObservable *)callWithId:(JavaLangInteger *)i;

- (instancetype)initWithInt:(jint)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeTest_$2)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(RxInternalOperatorsOperatorMergeTest_$2 *self, jint capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$2 *new_RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$2 *create_RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(jint capture$0);

@interface RxInternalOperatorsOperatorMergeTest_$3 : NSObject < JavaLangIterable > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$generated_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeTest_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeTest_$3, val$generated_, JavaUtilConcurrentAtomicAtomicInteger *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorMergeTest_$3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$3 *new_RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$3 *create_RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

@interface RxInternalOperatorsOperatorMergeTest_$3_$1 : NSObject < JavaUtilIterator > {
 @public
  RxInternalOperatorsOperatorMergeTest_$3 *this$0_;
}

- (void)remove;

- (JavaLangInteger *)next;

- (jboolean)hasNext;

- (instancetype)initWithRxInternalOperatorsOperatorMergeTest_$3:(RxInternalOperatorsOperatorMergeTest_$3 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeTest_$3_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeTest_$3_$1, this$0_, RxInternalOperatorsOperatorMergeTest_$3 *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3_$1 *self, RxInternalOperatorsOperatorMergeTest_$3 *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$3_$1 *new_RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeTest_$3_$1 *create_RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3 *outer$);

@implementation RxInternalOperatorsOperatorMergeTest

- (void)before {
  OrgMockitoMockitoAnnotations_initMocksWithId_(self);
}

- (void)testBackpressureUpstream2 {
  JavaUtilConcurrentAtomicAtomicInteger *generated1 = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  RxObservable *o1 = [((RxObservable *) nil_chk(RxInternalOperatorsOperatorMergeTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generated1))) subscribeOnWithRxScheduler:RxSchedulersSchedulers_computation()];
  RxObserversTestSubscriber *testSubscriber = create_RxInternalOperatorsOperatorMergeTest_$1_init();
  [((RxObservable *) nil_chk(RxObservable_mergeWithRxObservable_withRxObservable_([((RxObservable *) nil_chk(o1)) takeWithInt:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2], RxObservable_justWithId_(JavaLangInteger_valueOfWithInt_(-99))))) subscribeWithRxSubscriber:testSubscriber];
  [testSubscriber awaitTerminalEvent];
  id<JavaUtilList> onNextEvents = [testSubscriber getOnNextEvents];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$I", @"Generated 1: ", [generated1 get], @" / received: ", [((id<JavaUtilList>) nil_chk(onNextEvents)) size])];
  [JreLoadStatic(JavaLangSystem, out) printlnWithId:onNextEvents];
  if ([((id<JavaUtilList>) nil_chk([testSubscriber getOnErrorEvents])) size] > 0) {
    [((NSException *) nil_chk([((id<JavaUtilList>) nil_chk([testSubscriber getOnErrorEvents])) getWithInt:0])) printStackTrace];
  }
  [testSubscriber assertNoErrors];
  OrgJunitAssert_assertEqualsWithLong_withLong_(JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2 + 1, [onNextEvents size]);
  OrgJunitAssert_assertTrueWithBoolean_([generated1 get] >= JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 2 && [generated1 get] <= JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) * 3);
}

- (RxObservable *)mergeNSyncStreamsOfNWithInt:(jint)outerSize
                                      withInt:(jint)innerSize {
  RxObservable *os = [((RxObservable *) nil_chk(RxObservable_rangeWithInt_withInt_(1, outerSize))) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(innerSize)];
  return RxObservable_mergeWithRxObservable_(os);
}

- (RxObservable *)createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)generated {
  return RxInternalOperatorsOperatorMergeTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(self, generated);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(stringObserver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, 2, -1 },
    { NULL, "LRxObservable;", 0x2, 3, 4, -1, 5, -1, -1 },
    { NULL, "LRxObservable;", 0x2, 6, 7, -1, 8, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(testBackpressureUpstream2);
  methods[2].selector = @selector(mergeNSyncStreamsOfNWithInt:withInt:);
  methods[3].selector = @selector(createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stringObserver_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 9, 10 },
  };
  static const void *ptrTable[] = { (void *)&RxInternalOperatorsOperatorMergeTest__Annotations$0, "LJavaLangInterruptedException;", (void *)&RxInternalOperatorsOperatorMergeTest__Annotations$1, "mergeNSyncStreamsOfN", "II", "(II)Lrx/Observable<Ljava/lang/Integer;>;", "createInfiniteObservable", "LJavaUtilConcurrentAtomicAtomicInteger;", "(Ljava/util/concurrent/atomic/AtomicInteger;)Lrx/Observable<Ljava/lang/Integer;>;", "Lrx/Observer<Ljava/lang/String;>;", (void *)&RxInternalOperatorsOperatorMergeTest__Annotations$2 };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeTest = { "OperatorMergeTest", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsOperatorMergeTest;
}

@end

RxObservable *RxInternalOperatorsOperatorMergeTest_createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorMergeTest *self, JavaUtilConcurrentAtomicAtomicInteger *generated) {
  return RxObservable_fromWithJavaLangIterable_(create_RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(generated));
}

void RxInternalOperatorsOperatorMergeTest_init(RxInternalOperatorsOperatorMergeTest *self) {
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeTest *new_RxInternalOperatorsOperatorMergeTest_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeTest, init)
}

RxInternalOperatorsOperatorMergeTest *create_RxInternalOperatorsOperatorMergeTest_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeTest, init)
}

IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxInternalOperatorsOperatorMergeTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgMockitoMock(JreLoadEnum(OrgMockitoAnswers, RETURNS_DEFAULTS), [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:NSObject_class_()], @"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeTest)

@implementation RxInternalOperatorsOperatorMergeTest_$1

- (void)onNextWithId:(JavaLangInteger *)t {
  [super onNextWithId:t];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMergeTest_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreCheckFinalize(self, [RxInternalOperatorsOperatorMergeTest_$1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNext", "LJavaLangInteger;", "(Ljava/lang/Integer;)V", "LRxInternalOperatorsOperatorMergeTest;", "testBackpressureUpstream2", "Lrx/observers/TestSubscriber<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeTest_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOperatorMergeTest_$1;
}

@end

void RxInternalOperatorsOperatorMergeTest_$1_init(RxInternalOperatorsOperatorMergeTest_$1 *self) {
  RxObserversTestSubscriber_init(self);
}

RxInternalOperatorsOperatorMergeTest_$1 *new_RxInternalOperatorsOperatorMergeTest_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeTest_$1, init)
}

RxInternalOperatorsOperatorMergeTest_$1 *create_RxInternalOperatorsOperatorMergeTest_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeTest_$1, init)
}

@implementation RxInternalOperatorsOperatorMergeTest_$2

- (RxObservable *)callWithId:(JavaLangInteger *)i {
  return RxObservable_rangeWithInt_withInt_(1, val$innerSize_);
}

- (instancetype)initWithInt:(jint)capture$0 {
  RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$innerSize_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangInteger;", "(Ljava/lang/Integer;)Lrx/Observable<Ljava/lang/Integer;>;", "I", "LRxInternalOperatorsOperatorMergeTest;", "mergeNSyncStreamsOfNWithInt:withInt:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Integer;Lrx/Observable<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeTest_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorMergeTest_$2;
}

@end

void RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(RxInternalOperatorsOperatorMergeTest_$2 *self, jint capture$0) {
  self->val$innerSize_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeTest_$2 *new_RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(jint capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeTest_$2, initWithInt_, capture$0)
}

RxInternalOperatorsOperatorMergeTest_$2 *create_RxInternalOperatorsOperatorMergeTest_$2_initWithInt_(jint capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeTest_$2, initWithInt_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeTest_$3

- (id<JavaUtilIterator>)iterator {
  return create_RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(self);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

- (void)dealloc {
  RELEASE_(val$generated_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(iterator);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$generated_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<Ljava/lang/Integer;>;", "LJavaUtilConcurrentAtomicAtomicInteger;", "LRxInternalOperatorsOperatorMergeTest;", "createInfiniteObservableWithJavaUtilConcurrentAtomicAtomicInteger:", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeTest_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RxInternalOperatorsOperatorMergeTest_$3;
}

@end

void RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(RxInternalOperatorsOperatorMergeTest_$3 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$generated_, capture$0);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeTest_$3 *new_RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeTest_$3, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

RxInternalOperatorsOperatorMergeTest_$3 *create_RxInternalOperatorsOperatorMergeTest_$3_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeTest_$3, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation RxInternalOperatorsOperatorMergeTest_$3_$1

- (void)remove {
}

- (JavaLangInteger *)next {
  return JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(this$0_->val$generated_)) getAndIncrement]);
}

- (jboolean)hasNext {
  return true;
}

- (instancetype)initWithRxInternalOperatorsOperatorMergeTest_$3:(RxInternalOperatorsOperatorMergeTest_$3 *)outer$ {
  RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(self, outer$);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(remove);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(hasNext);
  methods[3].selector = @selector(initWithRxInternalOperatorsOperatorMergeTest_$3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorMergeTest_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorMergeTest_$3;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeTest_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 0, -1, 1, 2, -1 };
  return &_RxInternalOperatorsOperatorMergeTest_$3_$1;
}

@end

void RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3_$1 *self, RxInternalOperatorsOperatorMergeTest_$3 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOperatorMergeTest_$3_$1 *new_RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorMergeTest_$3_$1, initWithRxInternalOperatorsOperatorMergeTest_$3_, outer$)
}

RxInternalOperatorsOperatorMergeTest_$3_$1 *create_RxInternalOperatorsOperatorMergeTest_$3_$1_initWithRxInternalOperatorsOperatorMergeTest_$3_(RxInternalOperatorsOperatorMergeTest_$3 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorMergeTest_$3_$1, initWithRxInternalOperatorsOperatorMergeTest_$3_, outer$)
}
