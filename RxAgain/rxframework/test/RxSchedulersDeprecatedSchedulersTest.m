//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/schedulers/DeprecatedSchedulersTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxSchedulersDeprecatedSchedulersTest.h"
#include "RxSchedulersImmediateScheduler.h"
#include "RxSchedulersNewThreadScheduler.h"
#include "RxSchedulersTrampolineScheduler.h"
#include "RxTestUtil.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$5();

@implementation RxSchedulersDeprecatedSchedulersTest

- (void)immediate {
  RxTestUtil_checkUtilityClassWithIOSClass_(RxSchedulersImmediateScheduler_class_());
}

- (void)newThread {
  RxTestUtil_checkUtilityClassWithIOSClass_(RxSchedulersNewThreadScheduler_class_());
}

- (void)trampoline {
  RxTestUtil_checkUtilityClassWithIOSClass_(RxSchedulersTrampolineScheduler_class_());
}

- (void)checkWorkerWithIOSClass:(IOSClass *)schedulerClass {
}

- (void)immediateWorker {
  [self checkWorkerWithIOSClass:RxSchedulersImmediateScheduler_class_()];
}

- (void)newThreadWorker {
  [self checkWorkerWithIOSClass:RxSchedulersNewThreadScheduler_class_()];
}

- (void)trampolineWorker {
  [self checkWorkerWithIOSClass:RxSchedulersTrampolineScheduler_class_()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSchedulersDeprecatedSchedulersTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x0, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(immediate);
  methods[1].selector = @selector(newThread);
  methods[2].selector = @selector(trampoline);
  methods[3].selector = @selector(checkWorkerWithIOSClass:);
  methods[4].selector = @selector(immediateWorker);
  methods[5].selector = @selector(newThreadWorker);
  methods[6].selector = @selector(trampolineWorker);
  methods[7].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$0, (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$1, (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$2, "checkWorker", "LIOSClass;", "(Ljava/lang/Class<*>;)V", (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$3, (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$4, (void *)&RxSchedulersDeprecatedSchedulersTest__Annotations$5 };
  static const J2ObjcClassInfo _RxSchedulersDeprecatedSchedulersTest = { "DeprecatedSchedulersTest", "rx.schedulers", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_RxSchedulersDeprecatedSchedulersTest;
}

@end

void RxSchedulersDeprecatedSchedulersTest_init(RxSchedulersDeprecatedSchedulersTest *self) {
  NSObject_init(self);
}

RxSchedulersDeprecatedSchedulersTest *new_RxSchedulersDeprecatedSchedulersTest_init() {
  J2OBJC_NEW_IMPL(RxSchedulersDeprecatedSchedulersTest, init)
}

RxSchedulersDeprecatedSchedulersTest *create_RxSchedulersDeprecatedSchedulersTest_init() {
  J2OBJC_CREATE_IMPL(RxSchedulersDeprecatedSchedulersTest, init)
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxSchedulersDeprecatedSchedulersTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSchedulersDeprecatedSchedulersTest)
