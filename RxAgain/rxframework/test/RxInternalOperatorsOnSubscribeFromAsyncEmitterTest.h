//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/test/java/rx/internal/operators/OnSubscribeFromAsyncEmitterTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest

#if !defined (RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest || defined(INCLUDE_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest))
#define RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_

@class RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter;
@class RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel;
@class RxObserversTestSubscriber;

@interface RxInternalOperatorsOnSubscribeFromAsyncEmitterTest : NSObject {
 @public
  RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter *source_;
  RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel *sourceNoCancel_;
  RxObserversTestSubscriber *ts_;
}

#pragma mark Public

- (instancetype)init;

- (void)before;

- (void)completeInline;

- (void)completeInlineExactLatest;

- (void)completeInlineLatest;

- (void)deferredRequest;

- (void)errorBuffered;

- (void)errorInline;

- (void)errorInlineLatest;

- (void)errorLatest;

- (void)errorNone;

- (void)normalBuffered;

- (void)normalDrop;

- (void)normalError;

- (void)normalLatest;

- (void)normalNone;

- (void)normalNoneRequested;

- (void)overflowErrorIsNotFollowedByAnotherCompletedDueToCompletedFromUpstream;

- (void)overflowErrorIsNotFollowedByAnotherErrorDueToOnErrorFromUpstreamAndSecondErrorIsReportedToHook;

- (void)overflowErrorIsNotFollowedByAnotherErrorDueToOnNextFromUpstream;

- (void)requestExact;

- (void)requestInline;

- (void)requestInlineLatest;

- (void)take;

- (void)takeNoCancel;

- (void)takeOne;

- (void)takeOneNoCancel;

- (void)unsubscribedBuffer;

- (void)unsubscribedDrop;

- (void)unsubscribedError;

- (void)unsubscribedLatest;

- (void)unsubscribedNoCancelBuffer;

- (void)unsubscribedNoCancelDrop;

- (void)unsubscribedNoCancelError;

- (void)unsubscribedNoCancelLatest;

- (void)unsubscribedNoCancelNone;

- (void)unsubscribedNone;

- (void)unsubscribeInline;

- (void)unsubscribeInlineExactLatest;

- (void)unsubscribeInlineLatest;

- (void)unsubscribeNoCancel;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest, source_, RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest, sourceNoCancel_, RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest, ts_, RxObserversTestSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_init(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest *self);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest *new_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest *create_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest)

#endif

#if !defined (RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest || defined(INCLUDE_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter))
#define RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter_

#define RESTRICT_RxFunctionsAction1 1
#define INCLUDE_RxFunctionsAction1 1
#include "RxFunctionsAction1.h"

#define RESTRICT_RxObserver 1
#define INCLUDE_RxObserver 1
#include "RxObserver.h"

@class JavaLangInteger;
@class RxSubjectsPublishSubject;
@protocol RxAsyncEmitter;

@interface RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter : NSObject < RxFunctionsAction1, RxObserver > {
 @public
  RxSubjectsPublishSubject *subject_;
  id<RxAsyncEmitter> current_;
}

#pragma mark Public

- (instancetype)init;

- (void)callWithId:(id<RxAsyncEmitter>)t;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

#pragma mark Package-Private

- (jlong)requested;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter, subject_, RxSubjectsPublishSubject *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter, current_, id<RxAsyncEmitter>)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter_init(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter *self);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter *new_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter *create_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitter)

#endif

#if !defined (RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest || defined(INCLUDE_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel))
#define RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel_

#define RESTRICT_RxFunctionsAction1 1
#define INCLUDE_RxFunctionsAction1 1
#include "RxFunctionsAction1.h"

#define RESTRICT_RxObserver 1
#define INCLUDE_RxObserver 1
#include "RxObserver.h"

@class JavaLangInteger;
@class RxSubjectsPublishSubject;
@protocol RxAsyncEmitter;

@interface RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel : NSObject < RxFunctionsAction1, RxObserver > {
 @public
  RxSubjectsPublishSubject *subject_;
}

#pragma mark Public

- (instancetype)init;

- (void)callWithId:(id<RxAsyncEmitter>)t;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(JavaLangInteger *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel, subject_, RxSubjectsPublishSubject *)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel_init(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel *self);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel *new_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel *create_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeFromAsyncEmitterTest_PublishAsyncEmitterNoCancel)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeFromAsyncEmitterTest")
