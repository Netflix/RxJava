//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/main/java/rx/observables/AsyncOnSubscribe.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsAction1.h"
#include "RxFunctionsAction2.h"
#include "RxFunctionsAction3.h"
#include "RxFunctionsFunc0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc3.h"
#include "RxInternalOperatorsBufferUntilSubscriber.h"
#include "RxObservable.h"
#include "RxObservablesAsyncOnSubscribe.h"
#include "RxObserver.h"
#include "RxObserversSerializedObserver.h"
#include "RxPluginsRxJavaHooks.h"
#include "RxProducer.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsCompositeSubscription.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/Void.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"

@interface RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl () {
 @public
  id<RxFunctionsFunc0> generator_;
  id<RxFunctionsFunc3> next_;
  id<RxFunctionsAction1> onUnsubscribe_;
}

@end

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, generator_, id<RxFunctionsFunc0>)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, next_, id<RxFunctionsFunc3>)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, onUnsubscribe_, id<RxFunctionsAction1>)

@interface RxObservablesAsyncOnSubscribe_AsyncOuterManager () {
 @public
  RxObservablesAsyncOnSubscribe *parent_;
  RxObserversSerializedObserver *serializedSubscriber_;
  jboolean hasTerminated_;
  jboolean onNextCalled_;
  id state_;
  RxObservablesAsyncOnSubscribe_UnicastSubject *merger_;
}

- (void)handleThrownErrorWithNSException:(NSException *)ex;

- (void)subscribeBufferToObservableWithRxObservable:(RxObservable *)t;

@end

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager, parent_, RxObservablesAsyncOnSubscribe *)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager, serializedSubscriber_, RxObserversSerializedObserver *)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager, state_, id)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager, merger_, RxObservablesAsyncOnSubscribe_UnicastSubject *)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *self, NSException *ex);

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_AsyncOuterManager_subscribeBufferToObservableWithRxObservable_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *self, RxObservable *t);

@interface RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 : RxSubscriber {
 @public
  RxObservablesAsyncOnSubscribe_AsyncOuterManager *this$0_;
  jlong remaining_;
  RxInternalOperatorsBufferUntilSubscriber *val$buffer_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)outer$
                                                               withLong:(jlong)capture$0
                           withRxInternalOperatorsBufferUntilSubscriber:(RxInternalOperatorsBufferUntilSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1, this$0_, RxObservablesAsyncOnSubscribe_AsyncOuterManager *)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1, val$buffer_, RxInternalOperatorsBufferUntilSubscriber *)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *self, RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *new_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1);

@interface RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxObservablesAsyncOnSubscribe_AsyncOuterManager *this$0_;
  RxSubscriber *val$s_;
}

- (void)call;

- (instancetype)initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)outer$
                                                       withRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2, this$0_, RxObservablesAsyncOnSubscribe_AsyncOuterManager *)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2, val$s_, RxSubscriber *)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *self, RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *new_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0);

@interface RxObservablesAsyncOnSubscribe_UnicastSubject () {
 @public
  RxObservablesAsyncOnSubscribe_UnicastSubject_State *state_;
}

@end

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_UnicastSubject, state_, RxObservablesAsyncOnSubscribe_UnicastSubject_State *)

@interface RxObservablesAsyncOnSubscribe_$1 : NSObject < RxFunctionsFunc3 > {
 @public
  id<RxFunctionsAction3> val$next_;
}

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber;

- (instancetype)initWithRxFunctionsAction3:(id<RxFunctionsAction3>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$1)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$1, val$next_, id<RxFunctionsAction3>)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(RxObservablesAsyncOnSubscribe_$1 *self, id<RxFunctionsAction3> capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$1 *new_RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$1 *create_RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0);

@interface RxObservablesAsyncOnSubscribe_$2 : NSObject < RxFunctionsFunc3 > {
 @public
  id<RxFunctionsAction3> val$next_;
}

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber;

- (instancetype)initWithRxFunctionsAction3:(id<RxFunctionsAction3>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$2)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$2, val$next_, id<RxFunctionsAction3>)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(RxObservablesAsyncOnSubscribe_$2 *self, id<RxFunctionsAction3> capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$2 *new_RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$2 *create_RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0);

@interface RxObservablesAsyncOnSubscribe_$3 : NSObject < RxFunctionsFunc3 > {
 @public
  id<RxFunctionsAction2> val$next_;
}

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber;

- (instancetype)initWithRxFunctionsAction2:(id<RxFunctionsAction2>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$3)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$3, val$next_, id<RxFunctionsAction2>)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(RxObservablesAsyncOnSubscribe_$3 *self, id<RxFunctionsAction2> capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$3 *new_RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$3 *create_RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0);

@interface RxObservablesAsyncOnSubscribe_$4 : NSObject < RxFunctionsFunc3 > {
 @public
  id<RxFunctionsAction2> val$next_;
}

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber;

- (instancetype)initWithRxFunctionsAction2:(id<RxFunctionsAction2>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$4)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$4, val$next_, id<RxFunctionsAction2>)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(RxObservablesAsyncOnSubscribe_$4 *self, id<RxFunctionsAction2> capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$4 *new_RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$4 *create_RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0);

@interface RxObservablesAsyncOnSubscribe_$5 : NSObject < RxFunctionsAction1 > {
 @public
  id<RxFunctionsAction0> val$onUnsubscribe_;
}

- (void)callWithId:(id)t;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$5)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$5, val$onUnsubscribe_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(RxObservablesAsyncOnSubscribe_$5 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$5 *new_RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$5 *create_RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

@interface RxObservablesAsyncOnSubscribe_$6 : RxSubscriber {
 @public
  RxSubscriber *val$actualSubscriber_;
  RxObservablesAsyncOnSubscribe_AsyncOuterManager *val$outerProducer_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
withRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$6)

J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$6, val$actualSubscriber_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxObservablesAsyncOnSubscribe_$6, val$outerProducer_, RxObservablesAsyncOnSubscribe_AsyncOuterManager *)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxObservablesAsyncOnSubscribe_$6 *self, RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$6 *new_RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$6 *create_RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1);

@interface RxObservablesAsyncOnSubscribe_$7 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservable *)v;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesAsyncOnSubscribe_$7)

__attribute__((unused)) static void RxObservablesAsyncOnSubscribe_$7_init(RxObservablesAsyncOnSubscribe_$7 *self);

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$7 *new_RxObservablesAsyncOnSubscribe_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesAsyncOnSubscribe_$7 *create_RxObservablesAsyncOnSubscribe_$7_init();

@implementation RxObservablesAsyncOnSubscribe

- (id)generateState {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)nextWithId:(id)state
        withLong:(jlong)requested
  withRxObserver:(id<RxObserver>)observer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)onUnsubscribeWithId:(id)state {
}

+ (RxObservablesAsyncOnSubscribe *)createSingleStateWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                                                  withRxFunctionsAction3:(id<RxFunctionsAction3>)next {
  return RxObservablesAsyncOnSubscribe_createSingleStateWithRxFunctionsFunc0_withRxFunctionsAction3_(generator, next);
}

+ (RxObservablesAsyncOnSubscribe *)createSingleStateWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                                                  withRxFunctionsAction3:(id<RxFunctionsAction3>)next
                                                  withRxFunctionsAction1:(id<RxFunctionsAction1>)onUnsubscribe {
  return RxObservablesAsyncOnSubscribe_createSingleStateWithRxFunctionsFunc0_withRxFunctionsAction3_withRxFunctionsAction1_(generator, next, onUnsubscribe);
}

+ (RxObservablesAsyncOnSubscribe *)createStatefulWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                                                 withRxFunctionsFunc3:(id<RxFunctionsFunc3>)next
                                               withRxFunctionsAction1:(id<RxFunctionsAction1>)onUnsubscribe {
  return RxObservablesAsyncOnSubscribe_createStatefulWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(generator, next, onUnsubscribe);
}

+ (RxObservablesAsyncOnSubscribe *)createStatefulWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                                                 withRxFunctionsFunc3:(id<RxFunctionsFunc3>)next {
  return RxObservablesAsyncOnSubscribe_createStatefulWithRxFunctionsFunc0_withRxFunctionsFunc3_(generator, next);
}

+ (RxObservablesAsyncOnSubscribe *)createStatelessWithRxFunctionsAction2:(id<RxFunctionsAction2>)next {
  return RxObservablesAsyncOnSubscribe_createStatelessWithRxFunctionsAction2_(next);
}

+ (RxObservablesAsyncOnSubscribe *)createStatelessWithRxFunctionsAction2:(id<RxFunctionsAction2>)next
                                                  withRxFunctionsAction0:(id<RxFunctionsAction0>)onUnsubscribe {
  return RxObservablesAsyncOnSubscribe_createStatelessWithRxFunctionsAction2_withRxFunctionsAction0_(next, onUnsubscribe);
}

- (void)callWithId:(RxSubscriber *)actualSubscriber {
  id state;
  @try {
    state = [self generateState];
  }
  @catch (NSException *ex) {
    [((RxSubscriber *) nil_chk(actualSubscriber)) onErrorWithNSException:ex];
    return;
  }
  RxObservablesAsyncOnSubscribe_UnicastSubject *subject = RxObservablesAsyncOnSubscribe_UnicastSubject_create();
  RxObservablesAsyncOnSubscribe_AsyncOuterManager *outerProducer = create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_(self, state, subject);
  RxSubscriber *concatSubscriber = create_RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(actualSubscriber, outerProducer);
  [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservablesAsyncOnSubscribe_UnicastSubject *) nil_chk(subject)) onBackpressureBuffer])) concatMapWithRxFunctionsFunc1:create_RxObservablesAsyncOnSubscribe_$7_init()])) unsafeSubscribeWithRxSubscriber:concatSubscriber];
  [((RxSubscriber *) nil_chk(actualSubscriber)) addWithRxSubscription:concatSubscriber];
  [actualSubscriber addWithRxSubscription:outerProducer];
  [actualSubscriber setProducerWithRxProducer:outerProducer];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObservablesAsyncOnSubscribe_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x404, -1, -1, -1, 0, -1, -1 },
    { NULL, "LNSObject;", 0x404, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, 6, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 7, 10, -1, 11, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 12, 15, -1, 16, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 17, 18, -1, 19, -1, -1 },
    { NULL, "LRxObservablesAsyncOnSubscribe;", 0x9, 17, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x11, 22, 23, -1, 24, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(generateState);
  methods[1].selector = @selector(nextWithId:withLong:withRxObserver:);
  methods[2].selector = @selector(onUnsubscribeWithId:);
  methods[3].selector = @selector(createSingleStateWithRxFunctionsFunc0:withRxFunctionsAction3:);
  methods[4].selector = @selector(createSingleStateWithRxFunctionsFunc0:withRxFunctionsAction3:withRxFunctionsAction1:);
  methods[5].selector = @selector(createStatefulWithRxFunctionsFunc0:withRxFunctionsFunc3:withRxFunctionsAction1:);
  methods[6].selector = @selector(createStatefulWithRxFunctionsFunc0:withRxFunctionsFunc3:);
  methods[7].selector = @selector(createStatelessWithRxFunctionsAction2:);
  methods[8].selector = @selector(createStatelessWithRxFunctionsAction2:withRxFunctionsAction0:);
  methods[9].selector = @selector(callWithId:);
  methods[10].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TS;", "next", "LNSObject;JLRxObserver;", "(TS;JLrx/Observer<Lrx/Observable<+TT;>;>;)TS;", "onUnsubscribe", "LNSObject;", "(TS;)V", "createSingleState", "LRxFunctionsFunc0;LRxFunctionsAction3;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/functions/Func0<+TS;>;Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)Lrx/observables/AsyncOnSubscribe<TS;TT;>;", "LRxFunctionsFunc0;LRxFunctionsAction3;LRxFunctionsAction1;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/functions/Func0<+TS;>;Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;Lrx/functions/Action1<-TS;>;)Lrx/observables/AsyncOnSubscribe<TS;TT;>;", "createStateful", "LRxFunctionsFunc0;LRxFunctionsFunc3;LRxFunctionsAction1;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/functions/Func0<+TS;>;Lrx/functions/Func3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;+TS;>;Lrx/functions/Action1<-TS;>;)Lrx/observables/AsyncOnSubscribe<TS;TT;>;", "LRxFunctionsFunc0;LRxFunctionsFunc3;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Lrx/functions/Func0<+TS;>;Lrx/functions/Func3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;+TS;>;)Lrx/observables/AsyncOnSubscribe<TS;TT;>;", "createStateless", "LRxFunctionsAction2;", "<T:Ljava/lang/Object;>(Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)Lrx/observables/AsyncOnSubscribe<Ljava/lang/Void;TT;>;", "LRxFunctionsAction2;LRxFunctionsAction0;", "<T:Ljava/lang/Object;>(Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;Lrx/functions/Action0;)Lrx/observables/AsyncOnSubscribe<Ljava/lang/Void;TT;>;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "LRxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl;LRxObservablesAsyncOnSubscribe_AsyncOuterManager;LRxObservablesAsyncOnSubscribe_UnicastSubject;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe = { "AsyncOnSubscribe", "rx.observables", ptrTable, methods, NULL, 7, 0x401, 11, 0, -1, 25, -1, 26, -1 };
  return &_RxObservablesAsyncOnSubscribe;
}

@end

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createSingleStateWithRxFunctionsFunc0_withRxFunctionsAction3_(id<RxFunctionsFunc0> generator, id<RxFunctionsAction3> next) {
  RxObservablesAsyncOnSubscribe_initialize();
  id<RxFunctionsFunc3> nextFunc = create_RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(next);
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(generator, nextFunc);
}

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createSingleStateWithRxFunctionsFunc0_withRxFunctionsAction3_withRxFunctionsAction1_(id<RxFunctionsFunc0> generator, id<RxFunctionsAction3> next, id<RxFunctionsAction1> onUnsubscribe) {
  RxObservablesAsyncOnSubscribe_initialize();
  id<RxFunctionsFunc3> nextFunc = create_RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(next);
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(generator, nextFunc, onUnsubscribe);
}

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createStatefulWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  RxObservablesAsyncOnSubscribe_initialize();
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(generator, next, onUnsubscribe);
}

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createStatefulWithRxFunctionsFunc0_withRxFunctionsFunc3_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next) {
  RxObservablesAsyncOnSubscribe_initialize();
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(generator, next);
}

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createStatelessWithRxFunctionsAction2_(id<RxFunctionsAction2> next) {
  RxObservablesAsyncOnSubscribe_initialize();
  id<RxFunctionsFunc3> nextFunc = create_RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(next);
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_(nextFunc);
}

RxObservablesAsyncOnSubscribe *RxObservablesAsyncOnSubscribe_createStatelessWithRxFunctionsAction2_withRxFunctionsAction0_(id<RxFunctionsAction2> next, id<RxFunctionsAction0> onUnsubscribe) {
  RxObservablesAsyncOnSubscribe_initialize();
  id<RxFunctionsFunc3> nextFunc = create_RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(next);
  id<RxFunctionsAction1> wrappedOnUnsubscribe = create_RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(onUnsubscribe);
  return create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_withRxFunctionsAction1_(nextFunc, wrappedOnUnsubscribe);
}

void RxObservablesAsyncOnSubscribe_init(RxObservablesAsyncOnSubscribe *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesAsyncOnSubscribe)

@implementation RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                    withRxFunctionsFunc3:(id<RxFunctionsFunc3>)next
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)onUnsubscribe {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(self, generator, next, onUnsubscribe);
  return self;
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)generator
                    withRxFunctionsFunc3:(id<RxFunctionsFunc3>)next {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(self, generator, next);
  return self;
}

- (instancetype)initWithRxFunctionsFunc3:(id<RxFunctionsFunc3>)next
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)onUnsubscribe {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_withRxFunctionsAction1_(self, next, onUnsubscribe);
  return self;
}

- (instancetype)initWithRxFunctionsFunc3:(id<RxFunctionsFunc3>)nextFunc {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_(self, nextFunc);
  return self;
}

- (id)generateState {
  return generator_ == nil ? nil : [generator_ call];
}

- (id)nextWithId:(id)state
        withLong:(jlong)requested
  withRxObserver:(id<RxObserver>)observer {
  return [((id<RxFunctionsFunc3>) nil_chk(next_)) callWithId:state withId:JavaLangLong_valueOfWithLong_(requested) withId:observer];
}

- (void)onUnsubscribeWithId:(id)state {
  if (onUnsubscribe_ != nil) {
    [onUnsubscribe_ callWithId:state];
  }
}

- (void)dealloc {
  RELEASE_(generator_);
  RELEASE_(next_);
  RELEASE_(onUnsubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, 7, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x4, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x4, 12, 13, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc0:withRxFunctionsFunc3:withRxFunctionsAction1:);
  methods[1].selector = @selector(initWithRxFunctionsFunc0:withRxFunctionsFunc3:);
  methods[2].selector = @selector(initWithRxFunctionsFunc3:withRxFunctionsAction1:);
  methods[3].selector = @selector(initWithRxFunctionsFunc3:);
  methods[4].selector = @selector(generateState);
  methods[5].selector = @selector(nextWithId:withLong:withRxObserver:);
  methods[6].selector = @selector(onUnsubscribeWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "generator_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "next_", "LRxFunctionsFunc3;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "onUnsubscribe_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc0;LRxFunctionsFunc3;LRxFunctionsAction1;", "(Lrx/functions/Func0<+TS;>;Lrx/functions/Func3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;+TS;>;Lrx/functions/Action1<-TS;>;)V", "LRxFunctionsFunc0;LRxFunctionsFunc3;", "(Lrx/functions/Func0<+TS;>;Lrx/functions/Func3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;+TS;>;)V", "LRxFunctionsFunc3;LRxFunctionsAction1;", "(Lrx/functions/Func3<TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;TS;>;Lrx/functions/Action1<-TS;>;)V", "LRxFunctionsFunc3;", "(Lrx/functions/Func3<TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;TS;>;)V", "()TS;", "next", "LNSObject;JLRxObserver;", "(TS;JLrx/Observer<Lrx/Observable<+TT;>;>;)TS;", "onUnsubscribe", "LNSObject;", "(TS;)V", "Lrx/functions/Func0<+TS;>;", "Lrx/functions/Func3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;+TS;>;", "Lrx/functions/Action1<-TS;>;", "LRxObservablesAsyncOnSubscribe;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>Lrx/observables/AsyncOnSubscribe<TS;TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl = { "AsyncOnSubscribeImpl", "rx.observables", ptrTable, methods, fields, 7, 0x18, 7, 3, 18, -1, -1, 19, -1 };
  return &_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl;
}

@end

void RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *self, id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  RxObservablesAsyncOnSubscribe_init(self);
  JreStrongAssign(&self->generator_, generator);
  JreStrongAssign(&self->next_, next);
  JreStrongAssign(&self->onUnsubscribe_, onUnsubscribe);
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *new_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_, generator, next, onUnsubscribe)
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_, generator, next, onUnsubscribe)
}

void RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *self, id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next) {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(self, generator, next, nil);
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *new_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc0_withRxFunctionsFunc3_, generator, next)
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_(id<RxFunctionsFunc0> generator, id<RxFunctionsFunc3> next) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc0_withRxFunctionsFunc3_, generator, next)
}

void RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_withRxFunctionsAction1_(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *self, id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(self, nil, next, onUnsubscribe);
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *new_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_withRxFunctionsAction1_(id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc3_withRxFunctionsAction1_, next, onUnsubscribe)
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_withRxFunctionsAction1_(id<RxFunctionsFunc3> next, id<RxFunctionsAction1> onUnsubscribe) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc3_withRxFunctionsAction1_, next, onUnsubscribe)
}

void RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *self, id<RxFunctionsFunc3> nextFunc) {
  RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc0_withRxFunctionsFunc3_withRxFunctionsAction1_(self, nil, nextFunc, nil);
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *new_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> nextFunc) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc3_, nextFunc)
}

RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl *create_RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl_initWithRxFunctionsFunc3_(id<RxFunctionsFunc3> nextFunc) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl, initWithRxFunctionsFunc3_, nextFunc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesAsyncOnSubscribe_AsyncOnSubscribeImpl)

@implementation RxObservablesAsyncOnSubscribe_AsyncOuterManager

- (instancetype)initWithRxObservablesAsyncOnSubscribe:(RxObservablesAsyncOnSubscribe *)parent
                                               withId:(id)initialState
     withRxObservablesAsyncOnSubscribe_UnicastSubject:(RxObservablesAsyncOnSubscribe_UnicastSubject *)merger {
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_(self, parent, initialState, merger);
  return self;
}

- (void)unsubscribe {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(isUnsubscribed_)) compareAndSetWithBoolean:false withBoolean:true]) {
    @synchronized(self) {
      if (emitting_) {
        JreStrongAssignAndConsume(&requests_, new_JavaUtilArrayList_init());
        [requests_ addWithId:JavaLangLong_valueOfWithLong_(0LL)];
        return;
      }
      emitting_ = true;
    }
    [self cleanup];
  }
}

- (void)setConcatProducerWithRxProducer:(id<RxProducer>)p {
  if (concatProducer_ != nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"setConcatProducer may be called at most once!");
  }
  JreStrongAssign(&concatProducer_, p);
}

- (jboolean)isUnsubscribed {
  return [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(isUnsubscribed_)) get];
}

- (void)nextIterationWithLong:(jlong)requestCount {
  JreStrongAssign(&state_, [((RxObservablesAsyncOnSubscribe *) nil_chk(parent_)) nextWithId:state_ withLong:requestCount withRxObserver:serializedSubscriber_]);
}

- (void)cleanup {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(subscriptions_)) unsubscribe];
  @try {
    [((RxObservablesAsyncOnSubscribe *) nil_chk(parent_)) onUnsubscribeWithId:state_];
  }
  @catch (NSException *ex) {
    RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(self, ex);
  }
}

- (void)requestWithLong:(jlong)n {
  if (n == 0) {
    return;
  }
  if (n < 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$J", @"Request can't be negative! ", n));
  }
  jboolean quit = false;
  @synchronized(self) {
    if (emitting_) {
      id<JavaUtilList> q = requests_;
      if (q == nil) {
        q = create_JavaUtilArrayList_init();
        JreStrongAssign(&requests_, q);
      }
      [q addWithId:JavaLangLong_valueOfWithLong_(n)];
      quit = true;
    }
    else {
      emitting_ = true;
    }
  }
  [((id<RxProducer>) nil_chk(concatProducer_)) requestWithLong:n];
  if (quit) {
    return;
  }
  if ([self tryEmitWithLong:n]) {
    return;
  }
  for (; ; ) {
    id<JavaUtilList> q;
    @synchronized(self) {
      q = requests_;
      if (q == nil) {
        emitting_ = false;
        return;
      }
      JreStrongAssign(&requests_, nil);
    }
    for (JavaLangLong *boxed__ in q) {
      jlong r = [((JavaLangLong *) nil_chk(boxed__)) longLongValue];
      if ([self tryEmitWithLong:r]) {
        return;
      }
    }
  }
}

- (void)requestRemainingWithLong:(jlong)n {
  if (n == 0) {
    return;
  }
  if (n < 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$J", @"Request can't be negative! ", n));
  }
  @synchronized(self) {
    if (emitting_) {
      id<JavaUtilList> q = requests_;
      if (q == nil) {
        q = create_JavaUtilArrayList_init();
        JreStrongAssign(&requests_, q);
      }
      [q addWithId:JavaLangLong_valueOfWithLong_(n)];
      return;
    }
    emitting_ = true;
  }
  if ([self tryEmitWithLong:n]) {
    return;
  }
  for (; ; ) {
    id<JavaUtilList> q;
    @synchronized(self) {
      q = requests_;
      if (q == nil) {
        emitting_ = false;
        return;
      }
      JreStrongAssign(&requests_, nil);
    }
    for (JavaLangLong *boxed__ in q) {
      jlong r = [((JavaLangLong *) nil_chk(boxed__)) longLongValue];
      if ([self tryEmitWithLong:r]) {
        return;
      }
    }
  }
}

- (jboolean)tryEmitWithLong:(jlong)n {
  if ([self isUnsubscribed]) {
    [self cleanup];
    return true;
  }
  @try {
    onNextCalled_ = false;
    expectedDelivery_ = n;
    [self nextIterationWithLong:n];
    if (hasTerminated_ || [self isUnsubscribed]) {
      [self cleanup];
      return true;
    }
    if (!onNextCalled_) {
      RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(self, create_JavaLangIllegalStateException_initWithNSString_(@"No events emitted!"));
      return true;
    }
  }
  @catch (NSException *ex) {
    RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(self, ex);
    return true;
  }
  return false;
}

- (void)handleThrownErrorWithNSException:(NSException *)ex {
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(self, ex);
}

- (void)onCompleted {
  if (hasTerminated_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Terminal event already emitted.");
  }
  hasTerminated_ = true;
  [((RxObservablesAsyncOnSubscribe_UnicastSubject *) nil_chk(merger_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (hasTerminated_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Terminal event already emitted.");
  }
  hasTerminated_ = true;
  [((RxObservablesAsyncOnSubscribe_UnicastSubject *) nil_chk(merger_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(RxObservable *)t {
  if (onNextCalled_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"onNext called multiple times!");
  }
  onNextCalled_ = true;
  if (hasTerminated_) {
    return;
  }
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_subscribeBufferToObservableWithRxObservable_(self, t);
}

- (void)subscribeBufferToObservableWithRxObservable:(RxObservable *)t {
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_subscribeBufferToObservableWithRxObservable_(self, t);
}

- (void)dealloc {
  RELEASE_(isUnsubscribed_);
  RELEASE_(parent_);
  RELEASE_(serializedSubscriber_);
  RELEASE_(subscriptions_);
  RELEASE_(state_);
  RELEASE_(merger_);
  RELEASE_(requests_);
  RELEASE_(concatProducer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 8, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, 14, -1, -1 },
    { NULL, "V", 0x2, 15, 13, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxObservablesAsyncOnSubscribe:withId:withRxObservablesAsyncOnSubscribe_UnicastSubject:);
  methods[1].selector = @selector(unsubscribe);
  methods[2].selector = @selector(setConcatProducerWithRxProducer:);
  methods[3].selector = @selector(isUnsubscribed);
  methods[4].selector = @selector(nextIterationWithLong:);
  methods[5].selector = @selector(cleanup);
  methods[6].selector = @selector(requestWithLong:);
  methods[7].selector = @selector(requestRemainingWithLong:);
  methods[8].selector = @selector(tryEmitWithLong:);
  methods[9].selector = @selector(handleThrownErrorWithNSException:);
  methods[10].selector = @selector(onCompleted);
  methods[11].selector = @selector(onErrorWithNSException:);
  methods[12].selector = @selector(onNextWithId:);
  methods[13].selector = @selector(subscribeBufferToObservableWithRxObservable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "isUnsubscribed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "parent_", "LRxObservablesAsyncOnSubscribe;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "serializedSubscriber_", "LRxObserversSerializedObserver;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "subscriptions_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "hasTerminated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "onNextCalled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "state_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "merger_", "LRxObservablesAsyncOnSubscribe_UnicastSubject;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "requests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 20, -1 },
    { "concatProducer_", "LRxProducer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "expectedDelivery_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservablesAsyncOnSubscribe;LNSObject;LRxObservablesAsyncOnSubscribe_UnicastSubject;", "(Lrx/observables/AsyncOnSubscribe<TS;TT;>;TS;Lrx/observables/AsyncOnSubscribe$UnicastSubject<Lrx/Observable<TT;>;>;)V", "setConcatProducer", "LRxProducer;", "nextIteration", "J", "request", "requestRemaining", "tryEmit", "handleThrownError", "LNSException;", "onError", "onNext", "LRxObservable;", "(Lrx/Observable<+TT;>;)V", "subscribeBufferToObservable", "Lrx/observables/AsyncOnSubscribe<TS;TT;>;", "Lrx/observers/SerializedObserver<Lrx/Observable<+TT;>;>;", "TS;", "Lrx/observables/AsyncOnSubscribe$UnicastSubject<Lrx/Observable<TT;>;>;", "Ljava/util/List<Ljava/lang/Long;>;", "LRxObservablesAsyncOnSubscribe;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;Lrx/Subscription;Lrx/Observer<Lrx/Observable<+TT;>;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_AsyncOuterManager = { "AsyncOuterManager", "rx.observables", ptrTable, methods, fields, 7, 0x18, 14, 12, 21, -1, -1, 22, -1 };
  return &_RxObservablesAsyncOnSubscribe_AsyncOuterManager;
}

@end

void RxObservablesAsyncOnSubscribe_AsyncOuterManager_initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *self, RxObservablesAsyncOnSubscribe *parent, id initialState, RxObservablesAsyncOnSubscribe_UnicastSubject *merger) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->subscriptions_, new_RxSubscriptionsCompositeSubscription_init());
  JreStrongAssign(&self->parent_, parent);
  JreStrongAssignAndConsume(&self->serializedSubscriber_, new_RxObserversSerializedObserver_initWithRxObserver_(self));
  JreStrongAssign(&self->state_, initialState);
  JreStrongAssign(&self->merger_, merger);
  JreStrongAssignAndConsume(&self->isUnsubscribed_, new_JavaUtilConcurrentAtomicAtomicBoolean_init());
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager *new_RxObservablesAsyncOnSubscribe_AsyncOuterManager_initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_(RxObservablesAsyncOnSubscribe *parent, id initialState, RxObservablesAsyncOnSubscribe_UnicastSubject *merger) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager, initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_, parent, initialState, merger)
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager *create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_(RxObservablesAsyncOnSubscribe *parent, id initialState, RxObservablesAsyncOnSubscribe_UnicastSubject *merger) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager, initWithRxObservablesAsyncOnSubscribe_withId_withRxObservablesAsyncOnSubscribe_UnicastSubject_, parent, initialState, merger)
}

void RxObservablesAsyncOnSubscribe_AsyncOuterManager_handleThrownErrorWithNSException_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *self, NSException *ex) {
  if (self->hasTerminated_) {
    RxPluginsRxJavaHooks_onErrorWithNSException_(ex);
  }
  else {
    self->hasTerminated_ = true;
    [((RxObservablesAsyncOnSubscribe_UnicastSubject *) nil_chk(self->merger_)) onErrorWithNSException:ex];
    [self cleanup];
  }
}

void RxObservablesAsyncOnSubscribe_AsyncOuterManager_subscribeBufferToObservableWithRxObservable_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *self, RxObservable *t) {
  RxInternalOperatorsBufferUntilSubscriber *buffer = RxInternalOperatorsBufferUntilSubscriber_create();
  jlong expected = self->expectedDelivery_;
  RxSubscriber *s = create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(self, expected, buffer);
  [((RxSubscriptionsCompositeSubscription *) nil_chk(self->subscriptions_)) addWithRxSubscription:s];
  RxObservable *doOnTerminate = [((RxObservable *) nil_chk(t)) doOnTerminateWithRxFunctionsAction0:create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(self, s)];
  [((RxObservable *) nil_chk((doOnTerminate))) subscribeWithRxSubscriber:s];
  [((RxObservablesAsyncOnSubscribe_UnicastSubject *) nil_chk(self->merger_)) onNextWithId:buffer];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesAsyncOnSubscribe_AsyncOuterManager)

@implementation RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1

- (void)onNextWithId:(id)t {
  remaining_--;
  [((RxInternalOperatorsBufferUntilSubscriber *) nil_chk(val$buffer_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsBufferUntilSubscriber *) nil_chk(val$buffer_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxInternalOperatorsBufferUntilSubscriber *) nil_chk(val$buffer_)) onCompleted];
  jlong r = remaining_;
  if (r > 0) {
    [this$0_ requestRemainingWithLong:r];
  }
}

- (instancetype)initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)outer$
                                                               withLong:(jlong)capture$0
                           withRxInternalOperatorsBufferUntilSubscriber:(RxInternalOperatorsBufferUntilSubscriber *)capture$1 {
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:withLong:withRxInternalOperatorsBufferUntilSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "remaining_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$buffer_", "LRxInternalOperatorsBufferUntilSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;JLRxInternalOperatorsBufferUntilSubscriber;", "(Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;JLrx/internal/operators/BufferUntilSubscriber<TT;>;)V", "Lrx/internal/operators/BufferUntilSubscriber<TT;>;", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", "subscribeBufferToObservableWithRxObservable:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 3, 8, -1, 9, 10, -1 };
  return &_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1;
}

@end

void RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *self, RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$buffer_, capture$1);
  RxSubscriber_init(self);
  self->remaining_ = capture$0;
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *new_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1, initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_, outer$, capture$0, capture$1)
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1 *create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, jlong capture$0, RxInternalOperatorsBufferUntilSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$1, initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withLong_withRxInternalOperatorsBufferUntilSubscriber_, outer$, capture$0, capture$1)
}

@implementation RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2

- (void)call {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->subscriptions_)) removeWithRxSubscription:val$s_];
}

- (instancetype)initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)outer$
                                                       withRxSubscriber:(RxSubscriber *)capture$0 {
  RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;LRxSubscriber;", "(Lrx/observables/AsyncOnSubscribe$AsyncOuterManager;Lrx/Subscriber<TT;>;)V", "Lrx/Subscriber<TT;>;", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", "subscribeBufferToObservableWithRxObservable:" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2;
}

@end

void RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *self, RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *new_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2, initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_, outer$, capture$0)
}

RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2 *create_RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2_initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_(RxObservablesAsyncOnSubscribe_AsyncOuterManager *outer$, RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_AsyncOuterManager_$2, initWithRxObservablesAsyncOnSubscribe_AsyncOuterManager_withRxSubscriber_, outer$, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_UnicastSubject

+ (RxObservablesAsyncOnSubscribe_UnicastSubject *)create {
  return RxObservablesAsyncOnSubscribe_UnicastSubject_create();
}

- (instancetype)initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State:(RxObservablesAsyncOnSubscribe_UnicastSubject_State *)state {
  RxObservablesAsyncOnSubscribe_UnicastSubject_initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_(self, state);
  return self;
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(((RxObservablesAsyncOnSubscribe_UnicastSubject_State *) nil_chk(state_))->subscriber_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(((RxObservablesAsyncOnSubscribe_UnicastSubject_State *) nil_chk(state_))->subscriber_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(((RxObservablesAsyncOnSubscribe_UnicastSubject_State *) nil_chk(state_))->subscriber_)) onNextWithId:t];
}

- (void)dealloc {
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservablesAsyncOnSubscribe_UnicastSubject;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(create);
  methods[1].selector = @selector(initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onNextWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "state_", "LRxObservablesAsyncOnSubscribe_UnicastSubject_State;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Lrx/observables/AsyncOnSubscribe$UnicastSubject<TT;>;", "LRxObservablesAsyncOnSubscribe_UnicastSubject_State;", "(Lrx/observables/AsyncOnSubscribe$UnicastSubject$State<TT;>;)V", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/observables/AsyncOnSubscribe$UnicastSubject$State<TT;>;", "LRxObservablesAsyncOnSubscribe;", "<T:Ljava/lang/Object;>Lrx/Observable<TT;>;Lrx/Observer<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_UnicastSubject = { "UnicastSubject", "rx.observables", ptrTable, methods, fields, 7, 0x18, 5, 1, 9, 1, -1, 10, -1 };
  return &_RxObservablesAsyncOnSubscribe_UnicastSubject;
}

@end

RxObservablesAsyncOnSubscribe_UnicastSubject *RxObservablesAsyncOnSubscribe_UnicastSubject_create() {
  RxObservablesAsyncOnSubscribe_UnicastSubject_initialize();
  return create_RxObservablesAsyncOnSubscribe_UnicastSubject_initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_(create_RxObservablesAsyncOnSubscribe_UnicastSubject_State_init());
}

void RxObservablesAsyncOnSubscribe_UnicastSubject_initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_(RxObservablesAsyncOnSubscribe_UnicastSubject *self, RxObservablesAsyncOnSubscribe_UnicastSubject_State *state) {
  RxObservable_initWithRxObservable_OnSubscribe_(self, state);
  JreStrongAssign(&self->state_, state);
}

RxObservablesAsyncOnSubscribe_UnicastSubject *new_RxObservablesAsyncOnSubscribe_UnicastSubject_initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_(RxObservablesAsyncOnSubscribe_UnicastSubject_State *state) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_UnicastSubject, initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_, state)
}

RxObservablesAsyncOnSubscribe_UnicastSubject *create_RxObservablesAsyncOnSubscribe_UnicastSubject_initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_(RxObservablesAsyncOnSubscribe_UnicastSubject_State *state) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_UnicastSubject, initWithRxObservablesAsyncOnSubscribe_UnicastSubject_State_, state)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesAsyncOnSubscribe_UnicastSubject)

@implementation RxObservablesAsyncOnSubscribe_UnicastSubject_State

- (void)callWithId:(RxSubscriber *)s {
  @synchronized(self) {
    if (subscriber_ == nil) {
      JreStrongAssign(&subscriber_, s);
      return;
    }
  }
  [((RxSubscriber *) nil_chk(s)) onErrorWithNSException:create_JavaLangIllegalStateException_initWithNSString_(@"There can be only one subscriber")];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObservablesAsyncOnSubscribe_UnicastSubject_State_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(subscriber_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/Subscriber<-TT;>;", "LRxObservablesAsyncOnSubscribe_UnicastSubject;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_UnicastSubject_State = { "State", "rx.observables", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_RxObservablesAsyncOnSubscribe_UnicastSubject_State;
}

@end

void RxObservablesAsyncOnSubscribe_UnicastSubject_State_init(RxObservablesAsyncOnSubscribe_UnicastSubject_State *self) {
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_UnicastSubject_State *new_RxObservablesAsyncOnSubscribe_UnicastSubject_State_init() {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_UnicastSubject_State, init)
}

RxObservablesAsyncOnSubscribe_UnicastSubject_State *create_RxObservablesAsyncOnSubscribe_UnicastSubject_State_init() {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_UnicastSubject_State, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesAsyncOnSubscribe_UnicastSubject_State)

@implementation RxObservablesAsyncOnSubscribe_$1

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber {
  [((id<RxFunctionsAction3>) nil_chk(val$next_)) callWithId:state withId:requested withId:subscriber];
  return state;
}

- (instancetype)initWithRxFunctionsAction3:(id<RxFunctionsAction3>)capture$0 {
  RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(initWithRxFunctionsAction3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$next_", "LRxFunctionsAction3;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;LJavaLangLong;LRxObserver;", "(TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;)TS;", "LRxFunctionsAction3;", "(Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)V", "Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;", "LRxObservablesAsyncOnSubscribe;", "createSingleStateWithRxFunctionsFunc0:withRxFunctionsAction3:", "Ljava/lang/Object;Lrx/functions/Func3<TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;TS;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$1 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxObservablesAsyncOnSubscribe_$1;
}

@end

void RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(RxObservablesAsyncOnSubscribe_$1 *self, id<RxFunctionsAction3> capture$0) {
  JreStrongAssign(&self->val$next_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$1 *new_RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$1, initWithRxFunctionsAction3_, capture$0)
}

RxObservablesAsyncOnSubscribe_$1 *create_RxObservablesAsyncOnSubscribe_$1_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$1, initWithRxFunctionsAction3_, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_$2

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber {
  [((id<RxFunctionsAction3>) nil_chk(val$next_)) callWithId:state withId:requested withId:subscriber];
  return state;
}

- (instancetype)initWithRxFunctionsAction3:(id<RxFunctionsAction3>)capture$0 {
  RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(initWithRxFunctionsAction3:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$next_", "LRxFunctionsAction3;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;LJavaLangLong;LRxObserver;", "(TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;)TS;", "LRxFunctionsAction3;", "(Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)V", "Lrx/functions/Action3<-TS;Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;", "LRxObservablesAsyncOnSubscribe;", "createSingleStateWithRxFunctionsFunc0:withRxFunctionsAction3:withRxFunctionsAction1:", "Ljava/lang/Object;Lrx/functions/Func3<TS;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;TS;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$2 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxObservablesAsyncOnSubscribe_$2;
}

@end

void RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(RxObservablesAsyncOnSubscribe_$2 *self, id<RxFunctionsAction3> capture$0) {
  JreStrongAssign(&self->val$next_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$2 *new_RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$2, initWithRxFunctionsAction3_, capture$0)
}

RxObservablesAsyncOnSubscribe_$2 *create_RxObservablesAsyncOnSubscribe_$2_initWithRxFunctionsAction3_(id<RxFunctionsAction3> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$2, initWithRxFunctionsAction3_, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_$3

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber {
  [((id<RxFunctionsAction2>) nil_chk(val$next_)) callWithId:requested withId:subscriber];
  return state;
}

- (instancetype)initWithRxFunctionsAction2:(id<RxFunctionsAction2>)capture$0 {
  RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangVoid;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(initWithRxFunctionsAction2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$next_", "LRxFunctionsAction2;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangVoid;LJavaLangLong;LRxObserver;", "(Ljava/lang/Void;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;)Ljava/lang/Void;", "LRxFunctionsAction2;", "(Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)V", "Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;", "LRxObservablesAsyncOnSubscribe;", "createStatelessWithRxFunctionsAction2:", "Ljava/lang/Object;Lrx/functions/Func3<Ljava/lang/Void;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;Ljava/lang/Void;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$3 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxObservablesAsyncOnSubscribe_$3;
}

@end

void RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(RxObservablesAsyncOnSubscribe_$3 *self, id<RxFunctionsAction2> capture$0) {
  JreStrongAssign(&self->val$next_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$3 *new_RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$3, initWithRxFunctionsAction2_, capture$0)
}

RxObservablesAsyncOnSubscribe_$3 *create_RxObservablesAsyncOnSubscribe_$3_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$3, initWithRxFunctionsAction2_, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_$4

- (id)callWithId:(id)state
          withId:(JavaLangLong *)requested
          withId:(id<RxObserver>)subscriber {
  [((id<RxFunctionsAction2>) nil_chk(val$next_)) callWithId:requested withId:subscriber];
  return nil;
}

- (instancetype)initWithRxFunctionsAction2:(id<RxFunctionsAction2>)capture$0 {
  RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangVoid;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:withId:);
  methods[1].selector = @selector(initWithRxFunctionsAction2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$next_", "LRxFunctionsAction2;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangVoid;LJavaLangLong;LRxObserver;", "(Ljava/lang/Void;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;)Ljava/lang/Void;", "LRxFunctionsAction2;", "(Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;)V", "Lrx/functions/Action2<Ljava/lang/Long;+Lrx/Observer<Lrx/Observable<+TT;>;>;>;", "LRxObservablesAsyncOnSubscribe;", "createStatelessWithRxFunctionsAction2:withRxFunctionsAction0:", "Ljava/lang/Object;Lrx/functions/Func3<Ljava/lang/Void;Ljava/lang/Long;Lrx/Observer<Lrx/Observable<+TT;>;>;Ljava/lang/Void;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$4 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxObservablesAsyncOnSubscribe_$4;
}

@end

void RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(RxObservablesAsyncOnSubscribe_$4 *self, id<RxFunctionsAction2> capture$0) {
  JreStrongAssign(&self->val$next_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$4 *new_RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$4, initWithRxFunctionsAction2_, capture$0)
}

RxObservablesAsyncOnSubscribe_$4 *create_RxObservablesAsyncOnSubscribe_$4_initWithRxFunctionsAction2_(id<RxFunctionsAction2> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$4, initWithRxFunctionsAction2_, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_$5

- (void)callWithId:(id)t {
  [((id<RxFunctionsAction0>) nil_chk(val$onUnsubscribe_)) call];
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(val$onUnsubscribe_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$onUnsubscribe_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LJavaLangVoid;", "LRxFunctionsAction0;", "LRxObservablesAsyncOnSubscribe;", "createStatelessWithRxFunctionsAction2:withRxFunctionsAction0:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Void;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$5 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxObservablesAsyncOnSubscribe_$5;
}

@end

void RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(RxObservablesAsyncOnSubscribe_$5 *self, id<RxFunctionsAction0> capture$0) {
  JreStrongAssign(&self->val$onUnsubscribe_, capture$0);
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$5 *new_RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$5, initWithRxFunctionsAction0_, capture$0)
}

RxObservablesAsyncOnSubscribe_$5 *create_RxObservablesAsyncOnSubscribe_$5_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$5, initWithRxFunctionsAction0_, capture$0)
}

@implementation RxObservablesAsyncOnSubscribe_$6

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(val$actualSubscriber_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$actualSubscriber_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$actualSubscriber_)) onCompleted];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  [((RxObservablesAsyncOnSubscribe_AsyncOuterManager *) nil_chk(val$outerProducer_)) setConcatProducerWithRxProducer:p];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0
withRxObservablesAsyncOnSubscribe_AsyncOuterManager:(RxObservablesAsyncOnSubscribe_AsyncOuterManager *)capture$1 {
  RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$actualSubscriber_);
  RELEASE_(val$outerProducer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onNextWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onCompleted);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithRxSubscriber:withRxObservablesAsyncOnSubscribe_AsyncOuterManager:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$actualSubscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "val$outerProducer_", "LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", .constantValue.asLong = 0, 0x1012, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "LRxSubscriber;LRxObservablesAsyncOnSubscribe_AsyncOuterManager;", "(Lrx/Subscriber<-TT;>;Lrx/observables/AsyncOnSubscribe$AsyncOuterManager<TS;TT;>;)V", "Lrx/Subscriber<-TT;>;", "Lrx/observables/AsyncOnSubscribe$AsyncOuterManager<TS;TT;>;", "LRxObservablesAsyncOnSubscribe;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$6 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 5, 2, 11, -1, 12, 13, -1 };
  return &_RxObservablesAsyncOnSubscribe_$6;
}

@end

void RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxObservablesAsyncOnSubscribe_$6 *self, RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1) {
  JreStrongAssign(&self->val$actualSubscriber_, capture$0);
  JreStrongAssign(&self->val$outerProducer_, capture$1);
  RxSubscriber_init(self);
}

RxObservablesAsyncOnSubscribe_$6 *new_RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1) {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$6, initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_, capture$0, capture$1)
}

RxObservablesAsyncOnSubscribe_$6 *create_RxObservablesAsyncOnSubscribe_$6_initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_(RxSubscriber *capture$0, RxObservablesAsyncOnSubscribe_AsyncOuterManager *capture$1) {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$6, initWithRxSubscriber_withRxObservablesAsyncOnSubscribe_AsyncOuterManager_, capture$0, capture$1)
}

@implementation RxObservablesAsyncOnSubscribe_$7

- (RxObservable *)callWithId:(RxObservable *)v {
  return [((RxObservable *) nil_chk(v)) onBackpressureBuffer];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObservablesAsyncOnSubscribe_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<TT;>;)Lrx/Observable<TT;>;", "LRxObservablesAsyncOnSubscribe;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<TT;>;Lrx/Observable<TT;>;>;" };
  static const J2ObjcClassInfo _RxObservablesAsyncOnSubscribe_$7 = { "", "rx.observables", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxObservablesAsyncOnSubscribe_$7;
}

@end

void RxObservablesAsyncOnSubscribe_$7_init(RxObservablesAsyncOnSubscribe_$7 *self) {
  NSObject_init(self);
}

RxObservablesAsyncOnSubscribe_$7 *new_RxObservablesAsyncOnSubscribe_$7_init() {
  J2OBJC_NEW_IMPL(RxObservablesAsyncOnSubscribe_$7, init)
}

RxObservablesAsyncOnSubscribe_$7 *create_RxObservablesAsyncOnSubscribe_$7_init() {
  J2OBJC_CREATE_IMPL(RxObservablesAsyncOnSubscribe_$7, init)
}
