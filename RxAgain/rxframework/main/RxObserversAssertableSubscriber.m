//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/main/java/rx/observers/AssertableSubscriber.java
//

#include "J2ObjC_source.h"
#include "RxObserversAssertableSubscriber.h"

@interface RxObserversAssertableSubscriber : NSObject

@end

@implementation RxObserversAssertableSubscriber

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 2, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 6, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 7, 8, -1, 9, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 10, 11, -1, 12, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 14, 15, -1, 16, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 17, 15, -1, 16, -1, -1 },
    { NULL, "LJavaLangThread;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 18, 19, -1, 20, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 18, 21, -1, 22, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, -1, -1, -1, 13, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 23, 24, -1, 25, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x481, 26, 27, -1, 28, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 29, 30, -1, 31, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x481, 32, 33, -1, 34, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x401, 35, 36, -1, 37, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x481, 38, 27, -1, 28, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x481, 39, 40, -1, 41, -1, -1 },
    { NULL, "LRxObserversAssertableSubscriber;", 0x481, 42, 43, -1, 44, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onStart);
  methods[1].selector = @selector(setProducerWithRxProducer:);
  methods[2].selector = @selector(getCompletions);
  methods[3].selector = @selector(getOnErrorEvents);
  methods[4].selector = @selector(getValueCount);
  methods[5].selector = @selector(requestMoreWithLong:);
  methods[6].selector = @selector(getOnNextEvents);
  methods[7].selector = @selector(assertReceivedOnNextWithJavaUtilList:);
  methods[8].selector = @selector(awaitValueCountWithInt:withLong:withJavaUtilConcurrentTimeUnit:);
  methods[9].selector = @selector(assertTerminalEvent);
  methods[10].selector = @selector(assertUnsubscribed);
  methods[11].selector = @selector(assertNoErrors);
  methods[12].selector = @selector(awaitTerminalEvent);
  methods[13].selector = @selector(awaitTerminalEventWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[14].selector = @selector(awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:withJavaUtilConcurrentTimeUnit:);
  methods[15].selector = @selector(getLastSeenThread);
  methods[16].selector = @selector(assertCompleted);
  methods[17].selector = @selector(assertNotCompleted);
  methods[18].selector = @selector(assertErrorWithIOSClass:);
  methods[19].selector = @selector(assertErrorWithNSException:);
  methods[20].selector = @selector(assertNoTerminalEvent);
  methods[21].selector = @selector(assertNoValues);
  methods[22].selector = @selector(assertValueCountWithInt:);
  methods[23].selector = @selector(assertValuesWithNSObjectArray:);
  methods[24].selector = @selector(assertValueWithId:);
  methods[25].selector = @selector(assertValuesAndClearWithId:withNSObjectArray:);
  methods[26].selector = @selector(performWithRxFunctionsAction0:);
  methods[27].selector = @selector(unsubscribe);
  methods[28].selector = @selector(isUnsubscribed);
  methods[29].selector = @selector(assertResultWithNSObjectArray:);
  methods[30].selector = @selector(assertFailureWithIOSClass:withNSObjectArray:);
  methods[31].selector = @selector(assertFailureAndMessageWithIOSClass:withNSString:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setProducer", "LRxProducer;", "()Ljava/util/List<Ljava/lang/Throwable;>;", "requestMore", "J", "(J)Lrx/observers/AssertableSubscriber<TT;>;", "()Ljava/util/List<TT;>;", "assertReceivedOnNext", "LJavaUtilList;", "(Ljava/util/List<TT;>;)Lrx/observers/AssertableSubscriber<TT;>;", "awaitValueCount", "IJLJavaUtilConcurrentTimeUnit;", "(IJLjava/util/concurrent/TimeUnit;)Lrx/observers/AssertableSubscriber<TT;>;", "()Lrx/observers/AssertableSubscriber<TT;>;", "awaitTerminalEvent", "JLJavaUtilConcurrentTimeUnit;", "(JLjava/util/concurrent/TimeUnit;)Lrx/observers/AssertableSubscriber<TT;>;", "awaitTerminalEventAndUnsubscribeOnTimeout", "assertError", "LIOSClass;", "(Ljava/lang/Class<+Ljava/lang/Throwable;>;)Lrx/observers/AssertableSubscriber<TT;>;", "LNSException;", "(Ljava/lang/Throwable;)Lrx/observers/AssertableSubscriber<TT;>;", "assertValueCount", "I", "(I)Lrx/observers/AssertableSubscriber<TT;>;", "assertValues", "[LNSObject;", "([TT;)Lrx/observers/AssertableSubscriber<TT;>;", "assertValue", "LNSObject;", "(TT;)Lrx/observers/AssertableSubscriber<TT;>;", "assertValuesAndClear", "LNSObject;[LNSObject;", "(TT;[TT;)Lrx/observers/AssertableSubscriber<TT;>;", "perform", "LRxFunctionsAction0;", "(Lrx/functions/Action0;)Lrx/observers/AssertableSubscriber<TT;>;", "assertResult", "assertFailure", "LIOSClass;[LNSObject;", "(Ljava/lang/Class<+Ljava/lang/Throwable;>;[TT;)Lrx/observers/AssertableSubscriber<TT;>;", "assertFailureAndMessage", "LIOSClass;LNSString;[LNSObject;", "(Ljava/lang/Class<+Ljava/lang/Throwable;>;Ljava/lang/String;[TT;)Lrx/observers/AssertableSubscriber<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observer<TT;>;Lrx/Subscription;" };
  static const J2ObjcClassInfo _RxObserversAssertableSubscriber = { "AssertableSubscriber", "rx.observers", ptrTable, methods, NULL, 7, 0x609, 32, 0, -1, -1, -1, 45, -1 };
  return &_RxObserversAssertableSubscriber;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxObserversAssertableSubscriber)
