//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxJava/src/main/java/rx/internal/operators/OnSubscribeRedo.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RxFunctionsAction0.h"
#include "RxFunctionsFunc1.h"
#include "RxFunctionsFunc2.h"
#include "RxInternalOperatorsBackpressureUtils.h"
#include "RxInternalOperatorsOnSubscribeRedo.h"
#include "RxInternalProducersProducerArbiter.h"
#include "RxNotification.h"
#include "RxObservable.h"
#include "RxObserversSubscribers.h"
#include "RxProducer.h"
#include "RxScheduler.h"
#include "RxSchedulersSchedulers.h"
#include "RxSubjectsBehaviorSubject.h"
#include "RxSubjectsSerializedSubject.h"
#include "RxSubjectsSubject.h"
#include "RxSubscriber.h"
#include "RxSubscription.h"
#include "RxSubscriptionsSerialSubscription.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicLong.h"

@interface RxInternalOperatorsOnSubscribeRedo () {
 @public
  id<RxFunctionsFunc1> controlHandlerFunction_;
  RxScheduler *scheduler_;
}

- (instancetype)initWithRxObservable:(RxObservable *)source
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)f
                         withBoolean:(jboolean)stopOnComplete
                         withBoolean:(jboolean)stopOnError
                     withRxScheduler:(RxScheduler *)scheduler;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo, controlHandlerFunction_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo, scheduler_, RxScheduler *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxInternalOperatorsOnSubscribeRedo *self, RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo *new_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo *create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler);

@interface RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOnSubscribeRedo_RedoFinite *this$0_;
  jint num_;
}

- (RxNotification *)callWithId:(RxNotification *)terminalNotification;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite:(RxInternalOperatorsOnSubscribeRedo_RedoFinite *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1, this$0_, RxInternalOperatorsOnSubscribeRedo_RedoFinite *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *self, RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *new_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$);

@interface RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 : NSObject < RxFunctionsFunc2 > {
 @public
  RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *this$0_;
}

- (RxNotification *)callWithId:(RxNotification *)n
                        withId:(RxNotification *)term;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate:(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1, this$0_, RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *self, RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *new_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *create_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$);

@interface RxInternalOperatorsOnSubscribeRedo_$1 : NSObject < RxFunctionsFunc1 >

- (RxObservable *)callWithId:(RxObservable *)ts;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$1_init(RxInternalOperatorsOnSubscribeRedo_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$1 *new_RxInternalOperatorsOnSubscribeRedo_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$1 *create_RxInternalOperatorsOnSubscribeRedo_$1_init();

@interface RxInternalOperatorsOnSubscribeRedo_$1_$1 : NSObject < RxFunctionsFunc1 >

- (RxNotification *)callWithId:(RxNotification *)terminal;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$1_$1)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$1_$1_init(RxInternalOperatorsOnSubscribeRedo_$1_$1 *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$1_$1 *new_RxInternalOperatorsOnSubscribeRedo_$1_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$1_$1 *create_RxInternalOperatorsOnSubscribeRedo_$1_$1_init();

@interface RxInternalOperatorsOnSubscribeRedo_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOnSubscribeRedo *this$0_;
  RxSubscriber *val$child_;
  RxSubjectsSubject *val$terminals_;
  RxInternalProducersProducerArbiter *val$arbiter_;
  JavaUtilConcurrentAtomicAtomicLong *val$consumerCapacity_;
  RxSubscriptionsSerialSubscription *val$sourceSubscriptions_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo:(RxInternalOperatorsOnSubscribeRedo *)outer$
                                          withRxSubscriber:(RxSubscriber *)capture$0
                                     withRxSubjectsSubject:(RxSubjectsSubject *)capture$1
                    withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$2
                    withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$3
                     withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, this$0_, RxInternalOperatorsOnSubscribeRedo *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, val$child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, val$terminals_, RxSubjectsSubject *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, val$arbiter_, RxInternalProducersProducerArbiter *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, val$consumerCapacity_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2, val$sourceSubscriptions_, RxSubscriptionsSerialSubscription *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo_$2 *self, RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$2 *new_RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$2 *create_RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4);

@interface RxInternalOperatorsOnSubscribeRedo_$2_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeRedo_$2 *this$0_;
  jboolean done_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)v;

- (void)decrementConsumerCapacity;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$2:(RxInternalOperatorsOnSubscribeRedo_$2 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$2_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$2_$1, this$0_, RxInternalOperatorsOnSubscribeRedo_$2 *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$2_$1_decrementConsumerCapacity(RxInternalOperatorsOnSubscribeRedo_$2_$1 *self);

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2_$1 *self, RxInternalOperatorsOnSubscribeRedo_$2 *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$2_$1 *new_RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$2_$1 *create_RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2 *outer$);

@interface RxInternalOperatorsOnSubscribeRedo_$3 : NSObject < RxObservable_Operator > {
 @public
  RxInternalOperatorsOnSubscribeRedo *this$0_;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)filteredTerminals;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo:(RxInternalOperatorsOnSubscribeRedo *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$3, this$0_, RxInternalOperatorsOnSubscribeRedo *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo_$3 *self, RxInternalOperatorsOnSubscribeRedo *outer$);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$3 *new_RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$3 *create_RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo *outer$);

@interface RxInternalOperatorsOnSubscribeRedo_$3_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeRedo_$3 *this$0_;
  RxSubscriber *val$filteredTerminals_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(RxNotification *)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$3:(RxInternalOperatorsOnSubscribeRedo_$3 *)outer$
                                             withRxSubscriber:(RxSubscriber *)capture$0
                                             withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$3_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$3_$1, this$0_, RxInternalOperatorsOnSubscribeRedo_$3 *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$3_$1, val$filteredTerminals_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3_$1 *self, RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$3_$1 *new_RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$3_$1 *create_RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

@interface RxInternalOperatorsOnSubscribeRedo_$4 : NSObject < RxFunctionsAction0 > {
 @public
  RxObservable *val$restarts_;
  RxSubscriber *val$child_;
  JavaUtilConcurrentAtomicAtomicLong *val$consumerCapacity_;
  RxScheduler_Worker *val$worker_;
  id<RxFunctionsAction0> val$subscribeToSource_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$resumeBoundary_;
}

- (void)call;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0
                    withRxSubscriber:(RxSubscriber *)capture$1
withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$2
              withRxScheduler_Worker:(RxScheduler_Worker *)capture$3
              withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4
withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$5;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$4)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$restarts_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$consumerCapacity_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$worker_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$subscribeToSource_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4, val$resumeBoundary_, JavaUtilConcurrentAtomicAtomicBoolean *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeRedo_$4 *self, RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$4 *new_RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$4 *create_RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5);

@interface RxInternalOperatorsOnSubscribeRedo_$4_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOnSubscribeRedo_$4 *this$0_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$4:(RxInternalOperatorsOnSubscribeRedo_$4 *)outer$
                                             withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$4_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$4_$1, this$0_, RxInternalOperatorsOnSubscribeRedo_$4 *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4_$1 *self, RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$4_$1 *new_RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$4_$1 *create_RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0);

@interface RxInternalOperatorsOnSubscribeRedo_$5 : NSObject < RxProducer > {
 @public
  JavaUtilConcurrentAtomicAtomicLong *val$consumerCapacity_;
  RxInternalProducersProducerArbiter *val$arbiter_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$resumeBoundary_;
  RxScheduler_Worker *val$worker_;
  id<RxFunctionsAction0> val$subscribeToSource_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0
                    withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$1
                 withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$2
                                    withRxScheduler_Worker:(RxScheduler_Worker *)capture$3
                                    withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRedo_$5)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$5, val$consumerCapacity_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$5, val$arbiter_, RxInternalProducersProducerArbiter *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$5, val$resumeBoundary_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$5, val$worker_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeRedo_$5, val$subscribeToSource_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(RxInternalOperatorsOnSubscribeRedo_$5 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$5 *new_RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeRedo_$5 *create_RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4);

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOnSubscribeRedo)

id<RxFunctionsFunc1> RxInternalOperatorsOnSubscribeRedo_REDO_INFINITE;

@implementation RxInternalOperatorsOnSubscribeRedo

+ (RxObservable *)retryWithRxObservable:(RxObservable *)source {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_(source);
}

+ (RxObservable *)retryWithRxObservable:(RxObservable *)source
                               withLong:(jlong)count {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withLong_(source, count);
}

+ (RxObservable *)retryWithRxObservable:(RxObservable *)source
                   withRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_(source, notificationHandler);
}

+ (RxObservable *)retryWithRxObservable:(RxObservable *)source
                   withRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler
                        withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(source, notificationHandler, scheduler);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_(source);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source
                         withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxScheduler_(source, scheduler);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source
                                withLong:(jlong)count {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_(source, count);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source
                                withLong:(jlong)count
                         withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_withRxScheduler_(source, count, scheduler);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_(source, notificationHandler);
}

+ (RxObservable *)repeatWithRxObservable:(RxObservable *)source
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler
                         withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(source, notificationHandler, scheduler);
}

+ (RxObservable *)redoWithRxObservable:(RxObservable *)source
                  withRxFunctionsFunc1:(id<RxFunctionsFunc1>)notificationHandler
                       withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOnSubscribeRedo_redoWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(source, notificationHandler, scheduler);
}

- (instancetype)initWithRxObservable:(RxObservable *)source
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)f
                         withBoolean:(jboolean)stopOnComplete
                         withBoolean:(jboolean)stopOnError
                     withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(self, source, f, stopOnComplete, stopOnError, scheduler);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  JavaUtilConcurrentAtomicAtomicBoolean *resumeBoundary = create_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(true);
  JavaUtilConcurrentAtomicAtomicLong *consumerCapacity = create_JavaUtilConcurrentAtomicAtomicLong_init();
  RxScheduler_Worker *worker = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:worker];
  RxSubscriptionsSerialSubscription *sourceSubscriptions = create_RxSubscriptionsSerialSubscription_init();
  [child addWithRxSubscription:sourceSubscriptions];
  RxSubjectsSubject *terminals = [((RxSubjectsBehaviorSubject *) nil_chk(RxSubjectsBehaviorSubject_create())) toSerialized];
  RxSubscriber *dummySubscriber = RxObserversSubscribers_empty();
  [((RxSubjectsSubject *) nil_chk(terminals)) subscribeWithRxSubscriber:dummySubscriber];
  RxInternalProducersProducerArbiter *arbiter = create_RxInternalProducersProducerArbiter_init();
  id<RxFunctionsAction0> subscribeToSource = create_RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(self, child, terminals, arbiter, consumerCapacity, sourceSubscriptions);
  RxObservable *restarts = [((id<RxFunctionsFunc1>) nil_chk(controlHandlerFunction_)) callWithId:[terminals liftWithRxObservable_Operator:create_RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(self)]];
  [((RxScheduler_Worker *) nil_chk(worker)) scheduleWithRxFunctionsAction0:create_RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(restarts, child, consumerCapacity, worker, subscribeToSource, resumeBoundary)];
  [child setProducerWithRxProducer:create_RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(consumerCapacity, arbiter, resumeBoundary, worker, subscribeToSource)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(controlHandlerFunction_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 0, 7, -1, 8, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 1, -1, 2, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 3, -1, 4, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 12, -1, 13, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 5, -1, 6, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 9, 7, -1, 8, -1, -1 },
    { NULL, "LRxObservable;", 0x9, 14, 7, -1, 8, -1, -1 },
    { NULL, NULL, 0x2, -1, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, 19, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(retryWithRxObservable:);
  methods[1].selector = @selector(retryWithRxObservable:withLong:);
  methods[2].selector = @selector(retryWithRxObservable:withRxFunctionsFunc1:);
  methods[3].selector = @selector(retryWithRxObservable:withRxFunctionsFunc1:withRxScheduler:);
  methods[4].selector = @selector(repeatWithRxObservable:);
  methods[5].selector = @selector(repeatWithRxObservable:withRxScheduler:);
  methods[6].selector = @selector(repeatWithRxObservable:withLong:);
  methods[7].selector = @selector(repeatWithRxObservable:withLong:withRxScheduler:);
  methods[8].selector = @selector(repeatWithRxObservable:withRxFunctionsFunc1:);
  methods[9].selector = @selector(repeatWithRxObservable:withRxFunctionsFunc1:withRxScheduler:);
  methods[10].selector = @selector(redoWithRxObservable:withRxFunctionsFunc1:withRxScheduler:);
  methods[11].selector = @selector(initWithRxObservable:withRxFunctionsFunc1:withBoolean:withBoolean:withRxScheduler:);
  methods[12].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 20, -1 },
    { "controlHandlerFunction_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
    { "stopOnComplete_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "stopOnError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "REDO_INFINITE", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x18, -1, 22, 23, -1 },
  };
  static const void *ptrTable[] = { "retry", "LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/Observable<TT;>;", "LRxObservable;J", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;J)Lrx/Observable<TT;>;", "LRxObservable;LRxFunctionsFunc1;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;Lrx/functions/Func1<+Lrx/Observable<+Lrx/Notification<*>;>;+Lrx/Observable<*>;>;)Lrx/Observable<TT;>;", "LRxObservable;LRxFunctionsFunc1;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;Lrx/functions/Func1<+Lrx/Observable<+Lrx/Notification<*>;>;+Lrx/Observable<*>;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "repeat", "LRxObservable;LRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;Lrx/Scheduler;)Lrx/Observable<TT;>;", "LRxObservable;JLRxScheduler;", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;JLrx/Scheduler;)Lrx/Observable<TT;>;", "redo", "LRxObservable;LRxFunctionsFunc1;ZZLRxScheduler;", "(Lrx/Observable<TT;>;Lrx/functions/Func1<+Lrx/Observable<+Lrx/Notification<*>;>;+Lrx/Observable<*>;>;ZZLrx/Scheduler;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "Lrx/Observable<TT;>;", "Lrx/functions/Func1<+Lrx/Observable<+Lrx/Notification<*>;>;+Lrx/Observable<*>;>;", &RxInternalOperatorsOnSubscribeRedo_REDO_INFINITE, "Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;", "LRxInternalOperatorsOnSubscribeRedo_RedoFinite;LRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo = { "OnSubscribeRedo", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 13, 6, -1, 24, -1, 25, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOnSubscribeRedo class]) {
    JreStrongAssignAndConsume(&RxInternalOperatorsOnSubscribeRedo_REDO_INFINITE, new_RxInternalOperatorsOnSubscribeRedo_$1_init());
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOnSubscribeRedo)
  }
}

@end

RxObservable *RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_(RxObservable *source) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_(source, RxInternalOperatorsOnSubscribeRedo_REDO_INFINITE);
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withLong_(RxObservable *source, jlong count) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  if (count < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"count >= 0 expected");
  }
  if (count == 0) {
    return source;
  }
  return RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_(source, create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(count));
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_(RxObservable *source, id<RxFunctionsFunc1> notificationHandler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(source, notificationHandler, true, false, RxSchedulersSchedulers_trampoline()));
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_retryWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> notificationHandler, RxScheduler *scheduler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(source, notificationHandler, true, false, scheduler));
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_(RxObservable *source) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxScheduler_(source, RxSchedulersSchedulers_trampoline());
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxScheduler_(RxObservable *source, RxScheduler *scheduler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(source, RxInternalOperatorsOnSubscribeRedo_REDO_INFINITE, scheduler);
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_(RxObservable *source, jlong count) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_withRxScheduler_(source, count, RxSchedulersSchedulers_trampoline());
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withLong_withRxScheduler_(RxObservable *source, jlong count, RxScheduler *scheduler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  if (count == 0) {
    return RxObservable_empty();
  }
  if (count < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"count >= 0 expected");
  }
  return RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(source, create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(count - 1), scheduler);
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_(RxObservable *source, id<RxFunctionsFunc1> notificationHandler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(source, notificationHandler, false, true, RxSchedulersSchedulers_trampoline()));
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_repeatWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> notificationHandler, RxScheduler *scheduler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(source, notificationHandler, false, true, scheduler));
}

RxObservable *RxInternalOperatorsOnSubscribeRedo_redoWithRxObservable_withRxFunctionsFunc1_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> notificationHandler, RxScheduler *scheduler) {
  RxInternalOperatorsOnSubscribeRedo_initialize();
  return RxObservable_createWithRxObservable_OnSubscribe_(create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(source, notificationHandler, false, false, scheduler));
}

void RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxInternalOperatorsOnSubscribeRedo *self, RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->controlHandlerFunction_, f);
  self->stopOnComplete_ = stopOnComplete;
  self->stopOnError_ = stopOnError;
  JreStrongAssign(&self->scheduler_, scheduler);
}

RxInternalOperatorsOnSubscribeRedo *new_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo, initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_, source, f, stopOnComplete, stopOnError, scheduler)
}

RxInternalOperatorsOnSubscribeRedo *create_RxInternalOperatorsOnSubscribeRedo_initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_(RxObservable *source, id<RxFunctionsFunc1> f, jboolean stopOnComplete, jboolean stopOnError, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo, initWithRxObservable_withRxFunctionsFunc1_withBoolean_withBoolean_withRxScheduler_, source, f, stopOnComplete, stopOnError, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeRedo)

@implementation RxInternalOperatorsOnSubscribeRedo_RedoFinite

- (instancetype)initWithLong:(jlong)count {
  RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(self, count);
  return self;
}

- (RxObservable *)callWithId:(RxObservable *)ts {
  return [((RxObservable *) nil_chk([((RxObservable *) nil_chk(ts)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(self)])) dematerialize];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "count_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "call", "LRxObservable;", "(Lrx/Observable<+Lrx/Notification<*>;>;)Lrx/Observable<*>;", "LRxInternalOperatorsOnSubscribeRedo;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_RedoFinite = { "RedoFinite", "rx.internal.operators", ptrTable, methods, fields, 7, 0x19, 2, 1, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_RedoFinite;
}

@end

void RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(RxInternalOperatorsOnSubscribeRedo_RedoFinite *self, jlong count) {
  NSObject_init(self);
  self->count_ = count;
}

RxInternalOperatorsOnSubscribeRedo_RedoFinite *new_RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(jlong count) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_RedoFinite, initWithLong_, count)
}

RxInternalOperatorsOnSubscribeRedo_RedoFinite *create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_initWithLong_(jlong count) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_RedoFinite, initWithLong_, count)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeRedo_RedoFinite)

@implementation RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1

- (RxNotification *)callWithId:(RxNotification *)terminalNotification {
  if (this$0_->count_ == 0) {
    return terminalNotification;
  }
  num_++;
  if (num_ <= this$0_->count_) {
    return RxNotification_createOnNextWithId_(JavaLangInteger_valueOfWithInt_(num_));
  }
  else {
    return terminalNotification;
  }
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite:(RxInternalOperatorsOnSubscribeRedo_RedoFinite *)outer$ {
  RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxNotification;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo_RedoFinite;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "num_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<*>;)Lrx/Notification<*>;", "LRxInternalOperatorsOnSubscribeRedo_RedoFinite;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Notification<*>;Lrx/Notification<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *self, RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *new_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1, initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_, outer$)
}

RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1 *create_RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1_initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_(RxInternalOperatorsOnSubscribeRedo_RedoFinite *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_RedoFinite_$1, initWithRxInternalOperatorsOnSubscribeRedo_RedoFinite_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_initWithRxFunctionsFunc2_(self, predicate);
  return self;
}

- (RxObservable *)callWithId:(RxObservable *)ts {
  return [((RxObservable *) nil_chk(ts)) scanWithId:RxNotification_createOnNextWithId_(JavaLangInteger_valueOfWithInt_(0)) withRxFunctionsFunc2:create_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(self)];
}

- (void)dealloc {
  RELEASE_(predicate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LRxObservable;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxFunctionsFunc2:);
  methods[1].selector = @selector(callWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "predicate_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc2;", "(Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Throwable;Ljava/lang/Boolean;>;)V", "call", "LRxObservable;", "(Lrx/Observable<+Lrx/Notification<*>;>;)Lrx/Observable<+Lrx/Notification<*>;>;", "Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Throwable;Ljava/lang/Boolean;>;", "LRxInternalOperatorsOnSubscribeRedo;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<+Lrx/Notification<*>;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate = { "RetryWithPredicate", "rx.internal.operators", ptrTable, methods, fields, 7, 0x19, 2, 1, 6, -1, -1, 7, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate;
}

@end

void RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_initWithRxFunctionsFunc2_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *self, id<RxFunctionsFunc2> predicate) {
  NSObject_init(self);
  JreStrongAssign(&self->predicate_, predicate);
}

RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *new_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate, initWithRxFunctionsFunc2_, predicate)
}

RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *create_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate, initWithRxFunctionsFunc2_, predicate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate)

@implementation RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1

- (RxNotification *)callWithId:(RxNotification *)n
                        withId:(RxNotification *)term {
  jint value = [((JavaLangInteger *) nil_chk([((RxNotification *) nil_chk(n)) getValue])) intValue];
  if ([((JavaLangBoolean *) nil_chk([((id<RxFunctionsFunc2>) nil_chk(this$0_->predicate_)) callWithId:JavaLangInteger_valueOfWithInt_(value) withId:[((RxNotification *) nil_chk(term)) getThrowable]])) booleanValue]) {
    return RxNotification_createOnNextWithId_(JavaLangInteger_valueOfWithInt_(value + 1));
  }
  else {
    return term;
  }
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate:(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *)outer$ {
  RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxNotification;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:withId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxNotification;LRxNotification;", "(Lrx/Notification<Ljava/lang/Integer;>;Lrx/Notification<*>;)Lrx/Notification<Ljava/lang/Integer;>;", "LRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func2<Lrx/Notification<Ljava/lang/Integer;>;Lrx/Notification<*>;Lrx/Notification<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *self, RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *new_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1, initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_, outer$)
}

RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1 *create_RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1_initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_$1, initWithRxInternalOperatorsOnSubscribeRedo_RetryWithPredicate_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$1

- (RxObservable *)callWithId:(RxObservable *)ts {
  return [((RxObservable *) nil_chk(ts)) mapWithRxFunctionsFunc1:create_RxInternalOperatorsOnSubscribeRedo_$1_$1_init()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeRedo_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxObservable;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxObservable;", "(Lrx/Observable<+Lrx/Notification<*>;>;)Lrx/Observable<*>;", "LRxInternalOperatorsOnSubscribeRedo;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Observable<+Lrx/Notification<*>;>;Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$1_init(RxInternalOperatorsOnSubscribeRedo_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$1 *new_RxInternalOperatorsOnSubscribeRedo_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$1, init)
}

RxInternalOperatorsOnSubscribeRedo_$1 *create_RxInternalOperatorsOnSubscribeRedo_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$1_$1

- (RxNotification *)callWithId:(RxNotification *)terminal {
  return RxNotification_createOnNextWithId_(nil);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeRedo_$1_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxNotification;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "call", "LRxNotification;", "(Lrx/Notification<*>;)Lrx/Notification<*>;", "LRxInternalOperatorsOnSubscribeRedo_$1;", "callWithId:", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Notification<*>;Lrx/Notification<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$1_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$1_$1_init(RxInternalOperatorsOnSubscribeRedo_$1_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$1_$1 *new_RxInternalOperatorsOnSubscribeRedo_$1_$1_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$1_$1, init)
}

RxInternalOperatorsOnSubscribeRedo_$1_$1 *create_RxInternalOperatorsOnSubscribeRedo_$1_$1_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$1_$1, init)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$2

- (void)call {
  if ([((RxSubscriber *) nil_chk(val$child_)) isUnsubscribed]) {
    return;
  }
  RxSubscriber *terminalDelegatingSubscriber = create_RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(self);
  [((RxSubscriptionsSerialSubscription *) nil_chk(val$sourceSubscriptions_)) setWithRxSubscription:terminalDelegatingSubscriber];
  [((RxObservable *) nil_chk(this$0_->source_)) unsafeSubscribeWithRxSubscriber:terminalDelegatingSubscriber];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo:(RxInternalOperatorsOnSubscribeRedo *)outer$
                                          withRxSubscriber:(RxSubscriber *)capture$0
                                     withRxSubjectsSubject:(RxSubjectsSubject *)capture$1
                    withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$2
                    withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$3
                     withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$4 {
  RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$child_);
  RELEASE_(val$terminals_);
  RELEASE_(val$arbiter_);
  RELEASE_(val$consumerCapacity_);
  RELEASE_(val$sourceSubscriptions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo:withRxSubscriber:withRxSubjectsSubject:withRxInternalProducersProducerArbiter:withJavaUtilConcurrentAtomicAtomicLong:withRxSubscriptionsSerialSubscription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$terminals_", "LRxSubjectsSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$arbiter_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$consumerCapacity_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sourceSubscriptions_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOnSubscribeRedo;LRxSubscriber;LRxSubjectsSubject;LRxInternalProducersProducerArbiter;LJavaUtilConcurrentAtomicAtomicLong;LRxSubscriptionsSerialSubscription;", "(Lrx/internal/operators/OnSubscribeRedo;Lrx/Subscriber<-TT;>;Lrx/subjects/Subject<Lrx/Notification<*>;Lrx/Notification<*>;>;Lrx/internal/producers/ProducerArbiter;Ljava/util/concurrent/atomic/AtomicLong;Lrx/subscriptions/SerialSubscription;)V", "Lrx/Subscriber<-TT;>;", "Lrx/subjects/Subject<Lrx/Notification<*>;Lrx/Notification<*>;>;", "LRxInternalOperatorsOnSubscribeRedo;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 6, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$2;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo_$2 *self, RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$child_, capture$0);
  JreStrongAssign(&self->val$terminals_, capture$1);
  JreStrongAssign(&self->val$arbiter_, capture$2);
  JreStrongAssign(&self->val$consumerCapacity_, capture$3);
  JreStrongAssign(&self->val$sourceSubscriptions_, capture$4);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$2 *new_RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$2, initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

RxInternalOperatorsOnSubscribeRedo_$2 *create_RxInternalOperatorsOnSubscribeRedo_$2_initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOnSubscribeRedo *outer$, RxSubscriber *capture$0, RxSubjectsSubject *capture$1, RxInternalProducersProducerArbiter *capture$2, JavaUtilConcurrentAtomicAtomicLong *capture$3, RxSubscriptionsSerialSubscription *capture$4) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$2, initWithRxInternalOperatorsOnSubscribeRedo_withRxSubscriber_withRxSubjectsSubject_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicLong_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$2_$1

- (void)onCompleted {
  if (!done_) {
    done_ = true;
    [self unsubscribe];
    [((RxSubjectsSubject *) nil_chk(this$0_->val$terminals_)) onNextWithId:RxNotification_createOnCompleted()];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!done_) {
    done_ = true;
    [self unsubscribe];
    [((RxSubjectsSubject *) nil_chk(this$0_->val$terminals_)) onNextWithId:RxNotification_createOnErrorWithNSException_(e)];
  }
}

- (void)onNextWithId:(id)v {
  if (!done_) {
    [((RxSubscriber *) nil_chk(this$0_->val$child_)) onNextWithId:v];
    RxInternalOperatorsOnSubscribeRedo_$2_$1_decrementConsumerCapacity(self);
    [((RxInternalProducersProducerArbiter *) nil_chk(this$0_->val$arbiter_)) producedWithLong:1];
  }
}

- (void)decrementConsumerCapacity {
  RxInternalOperatorsOnSubscribeRedo_$2_$1_decrementConsumerCapacity(self);
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxInternalProducersProducerArbiter *) nil_chk(this$0_->val$arbiter_)) setProducerWithRxProducer:producer];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$2:(RxInternalOperatorsOnSubscribeRedo_$2 *)outer$ {
  RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(decrementConsumerCapacity);
  methods[4].selector = @selector(setProducerWithRxProducer:);
  methods[5].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo_$2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo_$2;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "setProducer", "LRxProducer;", "LRxInternalOperatorsOnSubscribeRedo_$2;", "call", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$2_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 6, 2, 7, -1, 8, 9, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$2_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$2_$1_decrementConsumerCapacity(RxInternalOperatorsOnSubscribeRedo_$2_$1 *self) {
  while (true) {
    jlong cc = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(self->this$0_->val$consumerCapacity_)) get];
    if (cc != JavaLangLong_MAX_VALUE) {
      if ([self->this$0_->val$consumerCapacity_ compareAndSetWithLong:cc withLong:cc - 1]) {
        break;
      }
    }
    else {
      break;
    }
  }
}

void RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2_$1 *self, RxInternalOperatorsOnSubscribeRedo_$2 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  RxSubscriber_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$2_$1 *new_RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$2_$1, initWithRxInternalOperatorsOnSubscribeRedo_$2_, outer$)
}

RxInternalOperatorsOnSubscribeRedo_$2_$1 *create_RxInternalOperatorsOnSubscribeRedo_$2_$1_initWithRxInternalOperatorsOnSubscribeRedo_$2_(RxInternalOperatorsOnSubscribeRedo_$2 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$2_$1, initWithRxInternalOperatorsOnSubscribeRedo_$2_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$3

- (RxSubscriber *)callWithId:(RxSubscriber *)filteredTerminals {
  return create_RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(self, filteredTerminals, filteredTerminals);
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo:(RxInternalOperatorsOnSubscribeRedo *)outer$ {
  RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRxSubscriber;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(callWithId:);
  methods[1].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Notification<*>;>;)Lrx/Subscriber<-Lrx/Notification<*>;>;", "LRxInternalOperatorsOnSubscribeRedo;", "callWithId:", "Ljava/lang/Object;Lrx/Observable$Operator<Lrx/Notification<*>;Lrx/Notification<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$3;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo_$3 *self, RxInternalOperatorsOnSubscribeRedo *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$3 *new_RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$3, initWithRxInternalOperatorsOnSubscribeRedo_, outer$)
}

RxInternalOperatorsOnSubscribeRedo_$3 *create_RxInternalOperatorsOnSubscribeRedo_$3_initWithRxInternalOperatorsOnSubscribeRedo_(RxInternalOperatorsOnSubscribeRedo *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$3, initWithRxInternalOperatorsOnSubscribeRedo_, outer$)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$3_$1

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$filteredTerminals_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$filteredTerminals_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(RxNotification *)t {
  if ([((RxNotification *) nil_chk(t)) isOnCompleted] && this$0_->this$0_->stopOnComplete_) {
    [((RxSubscriber *) nil_chk(val$filteredTerminals_)) onCompleted];
  }
  else if ([t isOnError] && this$0_->this$0_->stopOnError_) {
    [((RxSubscriber *) nil_chk(val$filteredTerminals_)) onErrorWithNSException:[t getThrowable]];
  }
  else {
    [((RxSubscriber *) nil_chk(val$filteredTerminals_)) onNextWithId:t];
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((id<RxProducer>) nil_chk(producer)) requestWithLong:JavaLangLong_MAX_VALUE];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$3:(RxInternalOperatorsOnSubscribeRedo_$3 *)outer$
                                             withRxSubscriber:(RxSubscriber *)capture$0
                                             withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$filteredTerminals_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo_$3:withRxSubscriber:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo_$3;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$filteredTerminals_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LRxNotification;", "(Lrx/Notification<*>;)V", "setProducer", "LRxProducer;", "LRxInternalOperatorsOnSubscribeRedo_$3;LRxSubscriber;LRxSubscriber;", "(Lrx/internal/operators/OnSubscribeRedo$3;Lrx/Subscriber<-Lrx/Notification<*>;>;Lrx/Subscriber<*>;)V", "Lrx/Subscriber<-Lrx/Notification<*>;>;", "LRxInternalOperatorsOnSubscribeRedo_$3;", "callWithId:", "Lrx/Subscriber<Lrx/Notification<*>;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$3_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 2, 10, -1, 11, 12, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$3_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3_$1 *self, RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$filteredTerminals_, capture$0);
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOnSubscribeRedo_$3_$1 *new_RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$3_$1, initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

RxInternalOperatorsOnSubscribeRedo_$3_$1 *create_RxInternalOperatorsOnSubscribeRedo_$3_$1_initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$3 *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$3_$1, initWithRxInternalOperatorsOnSubscribeRedo_$3_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$4

- (void)call {
  [((RxObservable *) nil_chk(val$restarts_)) unsafeSubscribeWithRxSubscriber:create_RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(self, val$child_)];
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0
                    withRxSubscriber:(RxSubscriber *)capture$1
withJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$2
              withRxScheduler_Worker:(RxScheduler_Worker *)capture$3
              withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4
withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$5 {
  RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(self, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5);
  return self;
}

- (void)dealloc {
  RELEASE_(val$restarts_);
  RELEASE_(val$child_);
  RELEASE_(val$consumerCapacity_);
  RELEASE_(val$worker_);
  RELEASE_(val$subscribeToSource_);
  RELEASE_(val$resumeBoundary_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(call);
  methods[1].selector = @selector(initWithRxObservable:withRxSubscriber:withJavaUtilConcurrentAtomicAtomicLong:withRxScheduler_Worker:withRxFunctionsAction0:withJavaUtilConcurrentAtomicAtomicBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$restarts_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
    { "val$consumerCapacity_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$worker_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$subscribeToSource_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$resumeBoundary_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;LRxSubscriber;LJavaUtilConcurrentAtomicAtomicLong;LRxScheduler_Worker;LRxFunctionsAction0;LJavaUtilConcurrentAtomicAtomicBoolean;", "(Lrx/Observable<*>;Lrx/Subscriber<-TT;>;Ljava/util/concurrent/atomic/AtomicLong;Lrx/Scheduler$Worker;Lrx/functions/Action0;Ljava/util/concurrent/atomic/AtomicBoolean;)V", "Lrx/Observable<*>;", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOnSubscribeRedo;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$4 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 6, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$4;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxInternalOperatorsOnSubscribeRedo_$4 *self, RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5) {
  JreStrongAssign(&self->val$restarts_, capture$0);
  JreStrongAssign(&self->val$child_, capture$1);
  JreStrongAssign(&self->val$consumerCapacity_, capture$2);
  JreStrongAssign(&self->val$worker_, capture$3);
  JreStrongAssign(&self->val$subscribeToSource_, capture$4);
  JreStrongAssign(&self->val$resumeBoundary_, capture$5);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$4 *new_RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$4, initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5)
}

RxInternalOperatorsOnSubscribeRedo_$4 *create_RxInternalOperatorsOnSubscribeRedo_$4_initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_(RxObservable *capture$0, RxSubscriber *capture$1, JavaUtilConcurrentAtomicAtomicLong *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4, JavaUtilConcurrentAtomicAtomicBoolean *capture$5) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$4, initWithRxObservable_withRxSubscriber_withJavaUtilConcurrentAtomicAtomicLong_withRxScheduler_Worker_withRxFunctionsAction0_withJavaUtilConcurrentAtomicAtomicBoolean_, capture$0, capture$1, capture$2, capture$3, capture$4, capture$5)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$4_$1

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(this$0_->val$child_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(this$0_->val$child_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  if (![((RxSubscriber *) nil_chk(this$0_->val$child_)) isUnsubscribed]) {
    if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(this$0_->val$consumerCapacity_)) get] > 0) {
      [((RxScheduler_Worker *) nil_chk(this$0_->val$worker_)) scheduleWithRxFunctionsAction0:this$0_->val$subscribeToSource_];
    }
    else {
      [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(this$0_->val$resumeBoundary_)) compareAndSetWithBoolean:false withBoolean:true];
    }
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((id<RxProducer>) nil_chk(producer)) requestWithLong:JavaLangLong_MAX_VALUE];
}

- (instancetype)initWithRxInternalOperatorsOnSubscribeRedo_$4:(RxInternalOperatorsOnSubscribeRedo_$4 *)outer$
                                             withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(self, outer$, arg$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onCompleted);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(setProducerWithRxProducer:);
  methods[4].selector = @selector(initWithRxInternalOperatorsOnSubscribeRedo_$4:withRxSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOnSubscribeRedo_$4;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "setProducer", "LRxProducer;", "LRxInternalOperatorsOnSubscribeRedo_$4;LRxSubscriber;", "(Lrx/internal/operators/OnSubscribeRedo$4;Lrx/Subscriber<*>;)V", "LRxInternalOperatorsOnSubscribeRedo_$4;", "call", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$4_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 1, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$4_$1;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4_$1 *self, RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0) {
  JreStrongAssign(&self->this$0_, outer$);
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOnSubscribeRedo_$4_$1 *new_RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$4_$1, initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_, outer$, arg$0)
}

RxInternalOperatorsOnSubscribeRedo_$4_$1 *create_RxInternalOperatorsOnSubscribeRedo_$4_$1_initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_(RxInternalOperatorsOnSubscribeRedo_$4 *outer$, RxSubscriber *arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$4_$1, initWithRxInternalOperatorsOnSubscribeRedo_$4_withRxSubscriber_, outer$, arg$0)
}

@implementation RxInternalOperatorsOnSubscribeRedo_$5

- (void)requestWithLong:(jlong)n {
  if (n > 0) {
    RxInternalOperatorsBackpressureUtils_getAndAddRequestWithJavaUtilConcurrentAtomicAtomicLong_withLong_(val$consumerCapacity_, n);
    [((RxInternalProducersProducerArbiter *) nil_chk(val$arbiter_)) requestWithLong:n];
    if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$resumeBoundary_)) compareAndSetWithBoolean:true withBoolean:false]) {
      [((RxScheduler_Worker *) nil_chk(val$worker_)) scheduleWithRxFunctionsAction0:val$subscribeToSource_];
    }
  }
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicLong:(JavaUtilConcurrentAtomicAtomicLong *)capture$0
                    withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)capture$1
                 withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$2
                                    withRxScheduler_Worker:(RxScheduler_Worker *)capture$3
                                    withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4 {
  RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(self, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (void)dealloc {
  RELEASE_(val$consumerCapacity_);
  RELEASE_(val$arbiter_);
  RELEASE_(val$resumeBoundary_);
  RELEASE_(val$worker_);
  RELEASE_(val$subscribeToSource_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(requestWithLong:);
  methods[1].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicLong:withRxInternalProducersProducerArbiter:withJavaUtilConcurrentAtomicAtomicBoolean:withRxScheduler_Worker:withRxFunctionsAction0:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$consumerCapacity_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$arbiter_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$resumeBoundary_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$worker_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$subscribeToSource_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LJavaUtilConcurrentAtomicAtomicLong;LRxInternalProducersProducerArbiter;LJavaUtilConcurrentAtomicAtomicBoolean;LRxScheduler_Worker;LRxFunctionsAction0;", "LRxInternalOperatorsOnSubscribeRedo;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeRedo_$5 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 5, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeRedo_$5;
}

@end

void RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(RxInternalOperatorsOnSubscribeRedo_$5 *self, JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4) {
  JreStrongAssign(&self->val$consumerCapacity_, capture$0);
  JreStrongAssign(&self->val$arbiter_, capture$1);
  JreStrongAssign(&self->val$resumeBoundary_, capture$2);
  JreStrongAssign(&self->val$worker_, capture$3);
  JreStrongAssign(&self->val$subscribeToSource_, capture$4);
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeRedo_$5 *new_RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeRedo_$5, initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_, capture$0, capture$1, capture$2, capture$3, capture$4)
}

RxInternalOperatorsOnSubscribeRedo_$5 *create_RxInternalOperatorsOnSubscribeRedo_$5_initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_(JavaUtilConcurrentAtomicAtomicLong *capture$0, RxInternalProducersProducerArbiter *capture$1, JavaUtilConcurrentAtomicAtomicBoolean *capture$2, RxScheduler_Worker *capture$3, id<RxFunctionsAction0> capture$4) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeRedo_$5, initWithJavaUtilConcurrentAtomicAtomicLong_withRxInternalProducersProducerArbiter_withJavaUtilConcurrentAtomicAtomicBoolean_withRxScheduler_Worker_withRxFunctionsAction0_, capture$0, capture$1, capture$2, capture$3, capture$4)
}
